

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 26 16:42:20 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F876 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     008C                     PIE1            equ	140	;# 
    92     008D                     PIE2            equ	141	;# 
    93     008E                     PCON            equ	142	;# 
    94     0091                     SSPCON2         equ	145	;# 
    95     0092                     PR2             equ	146	;# 
    96     0093                     SSPADD          equ	147	;# 
    97     0094                     SSPSTAT         equ	148	;# 
    98     0098                     TXSTA           equ	152	;# 
    99     0099                     SPBRG           equ	153	;# 
   100     009E                     ADRESL          equ	158	;# 
   101     009F                     ADCON1          equ	159	;# 
   102     010C                     EEDATA          equ	268	;# 
   103     010D                     EEADR           equ	269	;# 
   104     010E                     EEDATH          equ	270	;# 
   105     010F                     EEADRH          equ	271	;# 
   106     018C                     EECON1          equ	396	;# 
   107     018D                     EECON2          equ	397	;# 
   108     0000                     INDF            equ	0	;# 
   109     0001                     TMR0            equ	1	;# 
   110     0002                     PCL             equ	2	;# 
   111     0003                     STATUS          equ	3	;# 
   112     0004                     FSR             equ	4	;# 
   113     0005                     PORTA           equ	5	;# 
   114     0006                     PORTB           equ	6	;# 
   115     0007                     PORTC           equ	7	;# 
   116     000A                     PCLATH          equ	10	;# 
   117     000B                     INTCON          equ	11	;# 
   118     000C                     PIR1            equ	12	;# 
   119     000D                     PIR2            equ	13	;# 
   120     000E                     TMR1            equ	14	;# 
   121     000E                     TMR1L           equ	14	;# 
   122     000F                     TMR1H           equ	15	;# 
   123     0010                     T1CON           equ	16	;# 
   124     0011                     TMR2            equ	17	;# 
   125     0012                     T2CON           equ	18	;# 
   126     0013                     SSPBUF          equ	19	;# 
   127     0014                     SSPCON          equ	20	;# 
   128     0015                     CCPR1           equ	21	;# 
   129     0015                     CCPR1L          equ	21	;# 
   130     0016                     CCPR1H          equ	22	;# 
   131     0017                     CCP1CON         equ	23	;# 
   132     0018                     RCSTA           equ	24	;# 
   133     0019                     TXREG           equ	25	;# 
   134     001A                     RCREG           equ	26	;# 
   135     001B                     CCPR2           equ	27	;# 
   136     001B                     CCPR2L          equ	27	;# 
   137     001C                     CCPR2H          equ	28	;# 
   138     001D                     CCP2CON         equ	29	;# 
   139     001E                     ADRESH          equ	30	;# 
   140     001F                     ADCON0          equ	31	;# 
   141     0081                     OPTION_REG      equ	129	;# 
   142     0085                     TRISA           equ	133	;# 
   143     0086                     TRISB           equ	134	;# 
   144     0087                     TRISC           equ	135	;# 
   145     008C                     PIE1            equ	140	;# 
   146     008D                     PIE2            equ	141	;# 
   147     008E                     PCON            equ	142	;# 
   148     0091                     SSPCON2         equ	145	;# 
   149     0092                     PR2             equ	146	;# 
   150     0093                     SSPADD          equ	147	;# 
   151     0094                     SSPSTAT         equ	148	;# 
   152     0098                     TXSTA           equ	152	;# 
   153     0099                     SPBRG           equ	153	;# 
   154     009E                     ADRESL          equ	158	;# 
   155     009F                     ADCON1          equ	159	;# 
   156     010C                     EEDATA          equ	268	;# 
   157     010D                     EEADR           equ	269	;# 
   158     010E                     EEDATH          equ	270	;# 
   159     010F                     EEADRH          equ	271	;# 
   160     018C                     EECON1          equ	396	;# 
   161     018D                     EECON2          equ	397	;# 
   162     0006                     _PORTB          set	6
   163     0086                     _TRISB          set	134
   164                           
   165                           	psect	cinit
   166     07FC                     start_initialization:	
   167                           ; #config settings
   168                           
   169     07FC                     __initialization:
   170     07FC                     end_of_initialization:	
   171                           ;End of C runtime variable initialization code
   172                           
   173     07FC                     __end_of__initialization:
   174     07FC  0183               	clrf	3
   175     07FD  120A  118A  2FB6   	ljmp	_main	;jump to C main() function
   176                           
   177                           	psect	cstackCOMMON
   178     0071                     __pcstackCOMMON:
   179     0071                     ?_PortslInit:
   180     0071                     ?_Blink:	
   181                           ; 1 bytes @ 0x0
   182                           
   183     0071                     ?_main:	
   184                           ; 1 bytes @ 0x0
   185                           
   186     0071                     ??_PortslInit:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0071                     ??_Blink:	
   190                           ; 1 bytes @ 0x0
   191                           
   192                           
   193                           ; 1 bytes @ 0x0
   194     0071                     	ds	3
   195     0074                     Blink@i:
   196                           
   197                           ; 2 bytes @ 0x3
   198     0074                     	ds	2
   199     0076                     ??_main:
   200                           
   201                           	psect	maintext
   202     07B6                     __pmaintext:	
   203                           ; 1 bytes @ 0x5
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 7 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : B00/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   223 ;;      Params:         0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0
   226 ;;      Totals:         0       0       0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels required when called: 1
   229 ;; This function calls:
   230 ;;		_Blink
   231 ;;		_PortslInit
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237     07B6                     _main:	
   238                           ;psect for function _main
   239                           
   240     07B6                     l588:	
   241                           ;incstack = 0
   242                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   243                           
   244                           
   245                           ;main.c: 9:     PortslInit();
   246     07B6  120A  118A  27AF  120A  118A  	fcall	_PortslInit
   247     07BB                     l590:
   248                           
   249                           ;main.c: 10:     PORTB = 0x00;
   250     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   251     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   252     07BD  0186               	clrf	6	;volatile
   253     07BE                     l592:
   254                           
   255                           ;main.c: 13:         Blink();
   256     07BE  120A  118A  27C7  120A  118A  	fcall	_Blink
   257     07C3  2FBE               	goto	l592
   258     07C4  120A  118A  2800   	ljmp	start
   259     07C7                     __end_of_main:
   260                           
   261                           	psect	text1
   262     07AF                     __ptext1:	
   263 ;; *************** function _PortslInit *****************
   264 ;; Defined at:
   265 ;;		line 27 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		status,2
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels used: 1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292     07AF                     _PortslInit:	
   293                           ;psect for function _PortslInit
   294                           
   295     07AF                     l570:	
   296                           ;incstack = 0
   297                           ; Regs used in _PortslInit: [status,2]
   298                           
   299                           
   300                           ;main.c: 28:     PORTB = 0x00;
   301     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   302     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   303     07B1  0186               	clrf	6	;volatile
   304                           
   305                           ;main.c: 29:     TRISB = 0x00;
   306     07B2  1683               	bsf	3,5	;RP0=1, select bank1
   307     07B3  1303               	bcf	3,6	;RP1=0, select bank1
   308     07B4  0186               	clrf	6	;volatile
   309     07B5                     l26:
   310     07B5  0008               	return
   311     07B6                     __end_of_PortslInit:
   312                           
   313                           	psect	text2
   314     07C7                     __ptext2:	
   315 ;; *************** function _Blink *****************
   316 ;; Defined at:
   317 ;;		line 18 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  i               2    3[COMMON] int 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, btemp+1
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         0       0       0       0       0
   332 ;;      Locals:         2       0       0       0       0
   333 ;;      Temps:          3       0       0       0       0
   334 ;;      Totals:         5       0       0       0       0
   335 ;;Total ram usage:        5 bytes
   336 ;; Hardware stack levels used: 1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344     07C7                     _Blink:	
   345                           ;psect for function _Blink
   346                           
   347     07C7                     l572:	
   348                           ;incstack = 0
   349                           ; Regs used in _Blink: [wreg+status,2+status,0+btemp+1]
   350                           
   351                           
   352                           ;main.c: 19:     for(int i = 0; i < 3; i++){
   353     07C7  01F4               	clrf	Blink@i
   354     07C8  01F5               	clrf	Blink@i+1
   355     07C9                     l574:
   356     07C9  0875               	movf	Blink@i+1,w
   357     07CA  3A80               	xorlw	128
   358     07CB  00FF               	movwf	btemp+1
   359     07CC  3080               	movlw	128
   360     07CD  027F               	subwf	btemp+1,w
   361     07CE  1D03               	skipz
   362     07CF  2FD2               	goto	u15
   363     07D0  3003               	movlw	3
   364     07D1  0274               	subwf	Blink@i,w
   365     07D2                     u15:
   366     07D2  1C03               	skipc
   367     07D3  2FD5               	goto	u11
   368     07D4  2FD6               	goto	u10
   369     07D5                     u11:
   370     07D5  2FD7               	goto	l578
   371     07D6                     u10:
   372     07D6  2FF8               	goto	l586
   373     07D7                     l578:
   374                           
   375                           ;main.c: 20:         PORTB = 0x01 << i;
   376     07D7  3001               	movlw	1
   377     07D8  00F1               	movwf	??_Blink
   378     07D9  0A74               	incf	Blink@i,w
   379     07DA  2FDD               	goto	u24
   380     07DB                     u25:
   381     07DB  1003               	clrc
   382     07DC  0DF1               	rlf	??_Blink,f
   383     07DD                     u24:
   384     07DD  3EFF               	addlw	-1
   385     07DE  1D03               	skipz
   386     07DF  2FDB               	goto	u25
   387     07E0  0871               	movf	??_Blink,w
   388     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   389     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   390     07E3  0086               	movwf	6	;volatile
   391     07E4                     l580:
   392                           
   393                           ;main.c: 21:         _delay((unsigned long)((250)*(16000000/4000.0)));
   394     07E4  3006               	movlw	6
   395     07E5  00F3               	movwf	??_Blink+2
   396     07E6  3013               	movlw	19
   397     07E7  00F2               	movwf	??_Blink+1
   398     07E8  30AD               	movlw	173
   399     07E9  00F1               	movwf	??_Blink
   400     07EA                     u37:
   401     07EA  0BF1               	decfsz	??_Blink,f
   402     07EB  2FEA               	goto	u37
   403     07EC  0BF2               	decfsz	??_Blink+1,f
   404     07ED  2FEA               	goto	u37
   405     07EE  0BF3               	decfsz	??_Blink+2,f
   406     07EF  2FEA               	goto	u37
   407     07F0  2FF1               	nop2
   408     07F1                     l582:
   409                           
   410                           ;main.c: 22:     }
   411     07F1  3001               	movlw	1
   412     07F2  07F4               	addwf	Blink@i,f
   413     07F3  1803               	skipnc
   414     07F4  0AF5               	incf	Blink@i+1,f
   415     07F5  3000               	movlw	0
   416     07F6  07F5               	addwf	Blink@i+1,f
   417     07F7  2FC9               	goto	l574
   418     07F8                     l586:
   419                           
   420                           ;main.c: 23:     PORTB = 0x00;
   421     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   422     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   423     07FA  0186               	clrf	6	;volatile
   424     07FB                     l23:
   425     07FB  0008               	return
   426     07FC                     __end_of_Blink:
   427     0002                     ___latbits      equ	2
   428     007E                     btemp           set	126	;btemp
   429     007E                     wtemp0          set	126
   430                           
   431                           	psect	config
   432                           
   433                           ;Config register CONFIG @ 0x2007
   434                           ;	Oscillator Selection bits
   435                           ;	FOSC = HS, HS oscillator
   436                           ;	Watchdog Timer Enable bit
   437                           ;	WDTE = OFF, WDT disabled
   438                           ;	Power-up Timer Enable bit
   439                           ;	PWRTE = OFF, PWRT disabled
   440                           ;	FLASH Program Memory Code Protection bits
   441                           ;	CP = OFF, Code protection off
   442                           ;	Brown-out Reset Enable bit
   443                           ;	BOREN = OFF, BOR disabled
   444                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   445                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   446                           ;	Data EE Memory Code Protection
   447                           ;	CPD = OFF, Code Protection off
   448                           ;	FLASH Program Memory Write Enable
   449                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   450                           ;	In-Circuit Debugger Mode bit
   451                           ;	DEBUG = 0x1, unprogrammed default
   452     2007                     	org	8199
   453     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                              _Blink
                         _PortslInit
 ---------------------------------------------------------------------------------
 (1) _PortslInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Blink                                                5     5      0      45
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Blink
   _PortslInit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           13      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            85      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              13      5       5     38.5%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               85      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 26 16:42:20 2024

                     l23 07FB                       l26 07B5                       u10 07D6  
                     u11 07D5                       u15 07D2                       u24 07DD  
                     u25 07DB                       u37 07EA                      l570 07AF  
                    l580 07E4                      l572 07C7                      l582 07F1  
                    l574 07C9                      l590 07BB                      l592 07BE  
                    l586 07F8                      l578 07D7                      l588 07B6  
                   _main 07B6                     btemp 007E                     start 0000  
                  ?_main 0071                    _PORTB 0006                    _TRISB 0086  
                  _Blink 07C7                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07C7                   ??_main 0076  
                 ?_Blink 0071                   Blink@i 0074               _PortslInit 07AF  
__end_of__initialization 07FC            __end_of_Blink 07FC           __pcstackCOMMON 0071  
                ??_Blink 0071               __pmaintext 07B6              ?_PortslInit 0071  
                __ptext1 07AF                  __ptext2 07C7     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002             ??_PortslInit 0071  
     __end_of_PortslInit 07B6  
