

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec  4 13:43:32 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F876 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     000A                     PCLATH          equ	10	;# 
   121     000B                     INTCON          equ	11	;# 
   122     000C                     PIR1            equ	12	;# 
   123     000D                     PIR2            equ	13	;# 
   124     000E                     TMR1            equ	14	;# 
   125     000E                     TMR1L           equ	14	;# 
   126     000F                     TMR1H           equ	15	;# 
   127     0010                     T1CON           equ	16	;# 
   128     0011                     TMR2            equ	17	;# 
   129     0012                     T2CON           equ	18	;# 
   130     0013                     SSPBUF          equ	19	;# 
   131     0014                     SSPCON          equ	20	;# 
   132     0015                     CCPR1           equ	21	;# 
   133     0015                     CCPR1L          equ	21	;# 
   134     0016                     CCPR1H          equ	22	;# 
   135     0017                     CCP1CON         equ	23	;# 
   136     0018                     RCSTA           equ	24	;# 
   137     0019                     TXREG           equ	25	;# 
   138     001A                     RCREG           equ	26	;# 
   139     001B                     CCPR2           equ	27	;# 
   140     001B                     CCPR2L          equ	27	;# 
   141     001C                     CCPR2H          equ	28	;# 
   142     001D                     CCP2CON         equ	29	;# 
   143     001E                     ADRESH          equ	30	;# 
   144     001F                     ADCON0          equ	31	;# 
   145     0081                     OPTION_REG      equ	129	;# 
   146     0085                     TRISA           equ	133	;# 
   147     0086                     TRISB           equ	134	;# 
   148     0087                     TRISC           equ	135	;# 
   149     008C                     PIE1            equ	140	;# 
   150     008D                     PIE2            equ	141	;# 
   151     008E                     PCON            equ	142	;# 
   152     0091                     SSPCON2         equ	145	;# 
   153     0092                     PR2             equ	146	;# 
   154     0093                     SSPADD          equ	147	;# 
   155     0094                     SSPSTAT         equ	148	;# 
   156     0098                     TXSTA           equ	152	;# 
   157     0099                     SPBRG           equ	153	;# 
   158     009E                     ADRESL          equ	158	;# 
   159     009F                     ADCON1          equ	159	;# 
   160     010C                     EEDATA          equ	268	;# 
   161     010D                     EEADR           equ	269	;# 
   162     010E                     EEDATH          equ	270	;# 
   163     010F                     EEADRH          equ	271	;# 
   164     018C                     EECON1          equ	396	;# 
   165     018D                     EECON2          equ	397	;# 
   166     0000                     INDF            equ	0	;# 
   167     0001                     TMR0            equ	1	;# 
   168     0002                     PCL             equ	2	;# 
   169     0003                     STATUS          equ	3	;# 
   170     0004                     FSR             equ	4	;# 
   171     0005                     PORTA           equ	5	;# 
   172     0006                     PORTB           equ	6	;# 
   173     0007                     PORTC           equ	7	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PIR1            equ	12	;# 
   177     000D                     PIR2            equ	13	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0011                     TMR2            equ	17	;# 
   183     0012                     T2CON           equ	18	;# 
   184     0013                     SSPBUF          equ	19	;# 
   185     0014                     SSPCON          equ	20	;# 
   186     0015                     CCPR1           equ	21	;# 
   187     0015                     CCPR1L          equ	21	;# 
   188     0016                     CCPR1H          equ	22	;# 
   189     0017                     CCP1CON         equ	23	;# 
   190     0018                     RCSTA           equ	24	;# 
   191     0019                     TXREG           equ	25	;# 
   192     001A                     RCREG           equ	26	;# 
   193     001B                     CCPR2           equ	27	;# 
   194     001B                     CCPR2L          equ	27	;# 
   195     001C                     CCPR2H          equ	28	;# 
   196     001D                     CCP2CON         equ	29	;# 
   197     001E                     ADRESH          equ	30	;# 
   198     001F                     ADCON0          equ	31	;# 
   199     0081                     OPTION_REG      equ	129	;# 
   200     0085                     TRISA           equ	133	;# 
   201     0086                     TRISB           equ	134	;# 
   202     0087                     TRISC           equ	135	;# 
   203     008C                     PIE1            equ	140	;# 
   204     008D                     PIE2            equ	141	;# 
   205     008E                     PCON            equ	142	;# 
   206     0091                     SSPCON2         equ	145	;# 
   207     0092                     PR2             equ	146	;# 
   208     0093                     SSPADD          equ	147	;# 
   209     0094                     SSPSTAT         equ	148	;# 
   210     0098                     TXSTA           equ	152	;# 
   211     0099                     SPBRG           equ	153	;# 
   212     009E                     ADRESL          equ	158	;# 
   213     009F                     ADCON1          equ	159	;# 
   214     010C                     EEDATA          equ	268	;# 
   215     010D                     EEADR           equ	269	;# 
   216     010E                     EEDATH          equ	270	;# 
   217     010F                     EEADRH          equ	271	;# 
   218     018C                     EECON1          equ	396	;# 
   219     018D                     EECON2          equ	397	;# 
   220     0000                     INDF            equ	0	;# 
   221     0001                     TMR0            equ	1	;# 
   222     0002                     PCL             equ	2	;# 
   223     0003                     STATUS          equ	3	;# 
   224     0004                     FSR             equ	4	;# 
   225     0005                     PORTA           equ	5	;# 
   226     0006                     PORTB           equ	6	;# 
   227     0007                     PORTC           equ	7	;# 
   228     000A                     PCLATH          equ	10	;# 
   229     000B                     INTCON          equ	11	;# 
   230     000C                     PIR1            equ	12	;# 
   231     000D                     PIR2            equ	13	;# 
   232     000E                     TMR1            equ	14	;# 
   233     000E                     TMR1L           equ	14	;# 
   234     000F                     TMR1H           equ	15	;# 
   235     0010                     T1CON           equ	16	;# 
   236     0011                     TMR2            equ	17	;# 
   237     0012                     T2CON           equ	18	;# 
   238     0013                     SSPBUF          equ	19	;# 
   239     0014                     SSPCON          equ	20	;# 
   240     0015                     CCPR1           equ	21	;# 
   241     0015                     CCPR1L          equ	21	;# 
   242     0016                     CCPR1H          equ	22	;# 
   243     0017                     CCP1CON         equ	23	;# 
   244     0018                     RCSTA           equ	24	;# 
   245     0019                     TXREG           equ	25	;# 
   246     001A                     RCREG           equ	26	;# 
   247     001B                     CCPR2           equ	27	;# 
   248     001B                     CCPR2L          equ	27	;# 
   249     001C                     CCPR2H          equ	28	;# 
   250     001D                     CCP2CON         equ	29	;# 
   251     001E                     ADRESH          equ	30	;# 
   252     001F                     ADCON0          equ	31	;# 
   253     0081                     OPTION_REG      equ	129	;# 
   254     0085                     TRISA           equ	133	;# 
   255     0086                     TRISB           equ	134	;# 
   256     0087                     TRISC           equ	135	;# 
   257     008C                     PIE1            equ	140	;# 
   258     008D                     PIE2            equ	141	;# 
   259     008E                     PCON            equ	142	;# 
   260     0091                     SSPCON2         equ	145	;# 
   261     0092                     PR2             equ	146	;# 
   262     0093                     SSPADD          equ	147	;# 
   263     0094                     SSPSTAT         equ	148	;# 
   264     0098                     TXSTA           equ	152	;# 
   265     0099                     SPBRG           equ	153	;# 
   266     009E                     ADRESL          equ	158	;# 
   267     009F                     ADCON1          equ	159	;# 
   268     010C                     EEDATA          equ	268	;# 
   269     010D                     EEADR           equ	269	;# 
   270     010E                     EEDATH          equ	270	;# 
   271     010F                     EEADRH          equ	271	;# 
   272     018C                     EECON1          equ	396	;# 
   273     018D                     EECON2          equ	397	;# 
   274     0013                     _SSPBUF         set	19
   275     0014                     _SSPCON         set	20
   276     0005                     _PORTA          set	5
   277     0006                     _PORTB          set	6
   278     002D                     _RA5            set	45
   279     0063                     _SSPIF          set	99
   280     0094                     _SSPSTAT        set	148
   281     0085                     _TRISA          set	133
   282     0087                     _TRISC          set	135
   283     0086                     _TRISB          set	134
   284                           
   285                           	psect	cinit
   286     07FC                     start_initialization:	
   287                           ; #config settings
   288                           
   289     07FC                     __initialization:
   290     07FC                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293     07FC                     __end_of__initialization:
   294     07FC  0183               	clrf	3
   295     07FD  120A  118A  2F6B   	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	cstackCOMMON
   298     0070                     __pcstackCOMMON:
   299     0070                     ?_SpiInit:
   300     0070                     ?_MATR_7219_init:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_PortBInit:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_SpiClearMatrix:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_SpiSendByte:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     SpiSendByte@data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_SpiInit:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ??_PortBInit:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_SpiSendByte:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329     0070                     	ds	1
   330     0071                     ?_SpiSendBus:
   331     0071                     SpiSendBus@dt:	
   332                           ; 1 bytes @ 0x1
   333                           
   334                           
   335                           ; 1 bytes @ 0x1
   336     0071                     	ds	1
   337     0072                     SpiSendBus@rg:
   338     0072                     ??_SpiSendBus:	
   339                           ; 1 bytes @ 0x2
   340                           
   341                           
   342                           ; 1 bytes @ 0x2
   343     0072                     	ds	1
   344     0073                     SpiClearMatrix@i:
   345     0073                     ??_SpiClearMatrix:	
   346                           ; 1 bytes @ 0x3
   347                           
   348                           
   349                           ; 1 bytes @ 0x3
   350     0073                     	ds	1
   351     0074                     ??_MATR_7219_init:
   352                           
   353                           ; 1 bytes @ 0x4
   354     0074                     	ds	3
   355     0077                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x7
   358     0077                     	ds	3
   359     007A                     main@sh:
   360                           
   361                           ; 2 bytes @ 0xA
   362     007A                     	ds	2
   363     007C                     main@i:
   364                           
   365                           ; 2 bytes @ 0xC
   366     007C                     	ds	2
   367                           
   368                           	psect	maintext
   369     076B                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 16 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  i               2   12[COMMON] int 
   380 ;;  sh              2   10[COMMON] int 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         4       0       0       0       0
   392 ;;      Temps:          3       0       0       0       0
   393 ;;      Totals:         7       0       0       0       0
   394 ;;Total ram usage:        7 bytes
   395 ;; Hardware stack levels required when called: 4
   396 ;; This function calls:
   397 ;;		_MATR_7219_init
   398 ;;		_PortBInit
   399 ;;		_SpiClearMatrix
   400 ;;		_SpiInit
   401 ;;		_SpiSendBus
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     076B                     _main:	
   408                           ;psect for function _main
   409                           
   410     076B                     l715:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   413                           
   414                           
   415                           ;main.c: 17:     SpiInit();
   416     076B  120A  118A  2711  120A  118A  	fcall	_SpiInit
   417                           
   418                           ;main.c: 18:     MATR_7219_init();
   419     0770  120A  118A  2737  120A  118A  	fcall	_MATR_7219_init
   420     0775                     l717:
   421                           
   422                           ;main.c: 19:     PortBInit();
   423     0775  120A  118A  26EF  120A  118A  	fcall	_PortBInit
   424     077A                     l719:
   425                           
   426                           ;main.c: 20:     int sh = 0;
   427     077A  01FA               	clrf	main@sh
   428     077B  01FB               	clrf	main@sh+1
   429     077C                     l721:
   430                           
   431                           ;main.c: 22:         for(int i = 1; i < 9; i++){
   432     077C  3001               	movlw	1
   433     077D  00FC               	movwf	main@i
   434     077E  3000               	movlw	0
   435     077F  00FD               	movwf	main@i+1
   436     0780                     l723:
   437     0780  087D               	movf	main@i+1,w
   438     0781  3A80               	xorlw	128
   439     0782  00FF               	movwf	btemp+1
   440     0783  3080               	movlw	128
   441     0784  027F               	subwf	btemp+1,w
   442     0785  1D03               	skipz
   443     0786  2F89               	goto	u95
   444     0787  3009               	movlw	9
   445     0788  027C               	subwf	main@i,w
   446     0789                     u95:
   447     0789  1C03               	skipc
   448     078A  2F8C               	goto	u91
   449     078B  2F8D               	goto	u90
   450     078C                     u91:
   451     078C  2F8E               	goto	l727
   452     078D                     u90:
   453     078D  2FCE               	goto	l739
   454     078E                     l727:
   455                           
   456                           ;main.c: 23:             if(i <= 5){
   457     078E  087D               	movf	main@i+1,w
   458     078F  3A80               	xorlw	128
   459     0790  00FF               	movwf	btemp+1
   460     0791  3080               	movlw	128
   461     0792  027F               	subwf	btemp+1,w
   462     0793  1D03               	skipz
   463     0794  2F97               	goto	u105
   464     0795  3006               	movlw	6
   465     0796  027C               	subwf	main@i,w
   466     0797                     u105:
   467     0797  1803               	skipnc
   468     0798  2F9A               	goto	u101
   469     0799  2F9B               	goto	u100
   470     079A                     u101:
   471     079A  2FAA               	goto	l731
   472     079B                     u100:
   473     079B                     l729:
   474                           
   475                           ;main.c: 24:                 PORTB = 0x01 << (i - 1);
   476     079B  3001               	movlw	1
   477     079C  00F7               	movwf	??_main
   478     079D  087C               	movf	main@i,w
   479     079E  3EFF               	addlw	-1
   480     079F  3E01               	addlw	1
   481     07A0  2FA3               	goto	u114
   482     07A1                     u115:
   483     07A1  1003               	clrc
   484     07A2  0DF7               	rlf	??_main,f
   485     07A3                     u114:
   486     07A3  3EFF               	addlw	-1
   487     07A4  1D03               	skipz
   488     07A5  2FA1               	goto	u115
   489     07A6  0877               	movf	??_main,w
   490     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   491     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   492     07A9  0086               	movwf	6	;volatile
   493     07AA                     l731:
   494                           
   495                           ;main.c: 26:             SpiSendBus(i, (1 << sh));
   496     07AA  3001               	movlw	1
   497     07AB  00F7               	movwf	??_main
   498     07AC  0A7A               	incf	main@sh,w
   499     07AD  2FB0               	goto	u124
   500     07AE                     u125:
   501     07AE  1003               	clrc
   502     07AF  0DF7               	rlf	??_main,f
   503     07B0                     u124:
   504     07B0  3EFF               	addlw	-1
   505     07B1  1D03               	skipz
   506     07B2  2FAE               	goto	u125
   507     07B3  0877               	movf	??_main,w
   508     07B4  00F1               	movwf	SpiSendBus@dt
   509     07B5  087C               	movf	main@i,w
   510     07B6  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   511     07BB                     l733:
   512                           
   513                           ;main.c: 27:             _delay((unsigned long)((100)*(16000000/4000.0)));
   514     07BB  3003               	movlw	3
   515     07BC  00F9               	movwf	??_main+2
   516     07BD  3008               	movlw	8
   517     07BE  00F8               	movwf	??_main+1
   518     07BF  3077               	movlw	119
   519     07C0  00F7               	movwf	??_main
   520     07C1                     u147:
   521     07C1  0BF7               	decfsz	??_main,f
   522     07C2  2FC1               	goto	u147
   523     07C3  0BF8               	decfsz	??_main+1,f
   524     07C4  2FC1               	goto	u147
   525     07C5  0BF9               	decfsz	??_main+2,f
   526     07C6  2FC1               	goto	u147
   527     07C7                     l735:
   528                           
   529                           ;main.c: 28:         }
   530     07C7  3001               	movlw	1
   531     07C8  07FC               	addwf	main@i,f
   532     07C9  1803               	skipnc
   533     07CA  0AFD               	incf	main@i+1,f
   534     07CB  3000               	movlw	0
   535     07CC  07FD               	addwf	main@i+1,f
   536     07CD  2F80               	goto	l723
   537     07CE                     l739:
   538                           
   539                           ;main.c: 29:         sh++;
   540     07CE  3001               	movlw	1
   541     07CF  07FA               	addwf	main@sh,f
   542     07D0  1803               	skipnc
   543     07D1  0AFB               	incf	main@sh+1,f
   544     07D2  3000               	movlw	0
   545     07D3  07FB               	addwf	main@sh+1,f
   546     07D4                     l741:
   547                           
   548                           ;main.c: 30:         if(sh > 7){
   549     07D4  087B               	movf	main@sh+1,w
   550     07D5  3A80               	xorlw	128
   551     07D6  00FF               	movwf	btemp+1
   552     07D7  3080               	movlw	128
   553     07D8  027F               	subwf	btemp+1,w
   554     07D9  1D03               	skipz
   555     07DA  2FDD               	goto	u135
   556     07DB  3008               	movlw	8
   557     07DC  027A               	subwf	main@sh,w
   558     07DD                     u135:
   559     07DD  1C03               	skipc
   560     07DE  2FE0               	goto	u131
   561     07DF  2FE1               	goto	u130
   562     07E0                     u131:
   563     07E0  2FE8               	goto	l747
   564     07E1                     u130:
   565     07E1                     l743:
   566                           
   567                           ;main.c: 31:             sh = 0;
   568     07E1  01FA               	clrf	main@sh
   569     07E2  01FB               	clrf	main@sh+1
   570     07E3                     l745:
   571                           
   572                           ;main.c: 32:             SpiClearMatrix();
   573     07E3  120A  118A  2701  120A  118A  	fcall	_SpiClearMatrix
   574     07E8                     l747:
   575                           
   576                           ;main.c: 34:         PORTB = 0x00;
   577     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   578     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   579     07EA  0186               	clrf	6	;volatile
   580     07EB                     l749:
   581                           
   582                           ;main.c: 35:         _delay((unsigned long)((500)*(16000000/4000.0)));
   583     07EB  300B               	movlw	11
   584     07EC  00F9               	movwf	??_main+2
   585     07ED  3026               	movlw	38
   586     07EE  00F8               	movwf	??_main+1
   587     07EF  305D               	movlw	93
   588     07F0  00F7               	movwf	??_main
   589     07F1                     u157:
   590     07F1  0BF7               	decfsz	??_main,f
   591     07F2  2FF1               	goto	u157
   592     07F3  0BF8               	decfsz	??_main+1,f
   593     07F4  2FF1               	goto	u157
   594     07F5  0BF9               	decfsz	??_main+2,f
   595     07F6  2FF1               	goto	u157
   596     07F7  2FF8               	nop2
   597     07F8  2F7C               	goto	l721
   598     07F9  120A  118A  2800   	ljmp	start
   599     07FC                     __end_of_main:
   600                           
   601                           	psect	text1
   602     0711                     __ptext1:	
   603 ;; *************** function _SpiInit *****************
   604 ;; Defined at:
   605 ;;		line 10 in file "spi.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     0711                     _SpiInit:	
   633                           ;psect for function _SpiInit
   634                           
   635     0711                     l629:	
   636                           ;incstack = 0
   637                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
   638                           
   639                           
   640                           ;spi.c: 12:     TRISC |= 0x10;
   641     0711  1683               	bsf	3,5	;RP0=1, select bank1
   642     0712  1303               	bcf	3,6	;RP1=0, select bank1
   643     0713  1607               	bsf	7,4	;volatile
   644     0714                     l631:
   645                           
   646                           ;spi.c: 13:     TRISC &= ~0x28;
   647     0714  30D7               	movlw	215
   648     0715  0587               	andwf	7,f	;volatile
   649                           
   650                           ;spi.c: 14:     TRISA &= ~0x20;
   651     0716  30DF               	movlw	223
   652     0717  0585               	andwf	5,f	;volatile
   653                           
   654                           ;spi.c: 15:     PORTA &= ~0x20;
   655     0718  30DF               	movlw	223
   656     0719  1283               	bcf	3,5	;RP0=0, select bank0
   657     071A  1303               	bcf	3,6	;RP1=0, select bank0
   658     071B  0585               	andwf	5,f	;volatile
   659     071C                     l633:
   660                           
   661                           ;spi.c: 16:     SSPCON = 0x30;
   662     071C  3030               	movlw	48
   663     071D  0094               	movwf	20	;volatile
   664     071E                     l635:
   665                           
   666                           ;spi.c: 17:     SSPSTAT = 0x80;
   667     071E  3080               	movlw	128
   668     071F  1683               	bsf	3,5	;RP0=1, select bank1
   669     0720  1303               	bcf	3,6	;RP1=0, select bank1
   670     0721  0094               	movwf	20	;volatile
   671     0722                     l54:
   672     0722  0008               	return
   673     0723                     __end_of_SpiInit:
   674                           
   675                           	psect	text2
   676     06EF                     __ptext2:	
   677 ;; *************** function _PortBInit *****************
   678 ;; Defined at:
   679 ;;		line 13 in file "portsinit.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		status,2
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706     06EF                     _PortBInit:	
   707                           ;psect for function _PortBInit
   708                           
   709     06EF                     l651:	
   710                           ;incstack = 0
   711                           ; Regs used in _PortBInit: [status,2]
   712                           
   713                           
   714                           ;portsinit.c: 14:     TRISB = 0x00;
   715     06EF  1683               	bsf	3,5	;RP0=1, select bank1
   716     06F0  1303               	bcf	3,6	;RP1=0, select bank1
   717     06F1  0186               	clrf	6	;volatile
   718                           
   719                           ;portsinit.c: 15:     PORTB = 0x00;
   720     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   721     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   722     06F4  0186               	clrf	6	;volatile
   723     06F5                     l33:
   724     06F5  0008               	return
   725     06F6                     __end_of_PortBInit:
   726                           
   727                           	psect	text3
   728     0737                     __ptext3:	
   729 ;; *************** function _MATR_7219_init *****************
   730 ;; Defined at:
   731 ;;		line 40 in file "spi.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          3       0       0       0       0
   748 ;;      Totals:         3       0       0       0       0
   749 ;;Total ram usage:        3 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 3
   752 ;; This function calls:
   753 ;;		_SpiClearMatrix
   754 ;;		_SpiSendBus
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760     0737                     _MATR_7219_init:	
   761                           ;psect for function _MATR_7219_init
   762                           
   763     0737                     l701:	
   764                           ;incstack = 0
   765                           ; Regs used in _MATR_7219_init: [wreg+status,2+status,0+pclath+cstack]
   766                           
   767                           
   768                           ;spi.c: 41:     _delay((unsigned long)((100)*(16000000/4000.0)));
   769     0737  3003               	movlw	3
   770     0738  00F6               	movwf	??_MATR_7219_init+2
   771     0739  3008               	movlw	8
   772     073A  00F5               	movwf	??_MATR_7219_init+1
   773     073B  3077               	movlw	119
   774     073C  00F4               	movwf	??_MATR_7219_init
   775     073D                     u167:
   776     073D  0BF4               	decfsz	??_MATR_7219_init,f
   777     073E  2F3D               	goto	u167
   778     073F  0BF5               	decfsz	??_MATR_7219_init+1,f
   779     0740  2F3D               	goto	u167
   780     0741  0BF6               	decfsz	??_MATR_7219_init+2,f
   781     0742  2F3D               	goto	u167
   782     0743                     l703:
   783                           
   784                           ;spi.c: 42:     RA5=1;
   785     0743  1283               	bcf	3,5	;RP0=0, select bank0
   786     0744  1303               	bcf	3,6	;RP1=0, select bank0
   787     0745  1685               	bsf	5,5	;volatile
   788     0746                     l705:
   789                           
   790                           ;spi.c: 43:     SpiSendBus(0x09, 0x00);
   791     0746  01F1               	clrf	SpiSendBus@dt
   792     0747  3009               	movlw	9
   793     0748  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   794     074D                     l707:
   795                           
   796                           ;spi.c: 44:     SpiSendBus(0x0b, 0x07);
   797     074D  3007               	movlw	7
   798     074E  00F1               	movwf	SpiSendBus@dt
   799     074F  300B               	movlw	11
   800     0750  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   801     0755                     l709:
   802                           
   803                           ;spi.c: 45:     SpiSendBus(0x0A, 0x02);
   804     0755  3002               	movlw	2
   805     0756  00F1               	movwf	SpiSendBus@dt
   806     0757  300A               	movlw	10
   807     0758  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   808     075D                     l711:
   809                           
   810                           ;spi.c: 46:     SpiSendBus(0x0c, 0x01);
   811     075D  01F1               	clrf	SpiSendBus@dt
   812     075E  0AF1               	incf	SpiSendBus@dt,f
   813     075F  300C               	movlw	12
   814     0760  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   815     0765                     l713:
   816                           
   817                           ;spi.c: 47:     SpiClearMatrix();
   818     0765  120A  118A  2701  120A  118A  	fcall	_SpiClearMatrix
   819     076A                     l71:
   820     076A  0008               	return
   821     076B                     __end_of_MATR_7219_init:
   822                           
   823                           	psect	text4
   824     0701                     __ptext4:	
   825 ;; *************** function _SpiClearMatrix *****************
   826 ;; Defined at:
   827 ;;		line 32 in file "spi.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  i               1    3[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         1       0       0       0       0
   845 ;;Total ram usage:        1 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 2
   848 ;; This function calls:
   849 ;;		_SpiSendBus
   850 ;; This function is called by:
   851 ;;		_main
   852 ;;		_MATR_7219_init
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856     0701                     _SpiClearMatrix:	
   857                           ;psect for function _SpiClearMatrix
   858                           
   859     0701                     l695:	
   860                           ;incstack = 0
   861                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
   862                           
   863                           
   864                           ;spi.c: 34:   char i=8;
   865     0701  3008               	movlw	8
   866     0702  00F3               	movwf	SpiClearMatrix@i
   867     0703                     l697:
   868                           
   869                           ;spi.c: 36:   {;spi.c: 37:     SpiSendBus(i,0x00);
   870     0703  01F1               	clrf	SpiSendBus@dt
   871     0704  0873               	movf	SpiClearMatrix@i,w
   872     0705  120A  118A  2723  120A  118A  	fcall	_SpiSendBus
   873     070A                     l699:
   874                           
   875                           ;spi.c: 38:   } while (--i);
   876     070A  3001               	movlw	1
   877     070B  02F3               	subwf	SpiClearMatrix@i,f
   878     070C  1D03               	btfss	3,2
   879     070D  2F0F               	goto	u81
   880     070E  2F10               	goto	u80
   881     070F                     u81:
   882     070F  2F03               	goto	l697
   883     0710                     u80:
   884     0710                     l68:
   885     0710  0008               	return
   886     0711                     __end_of_SpiClearMatrix:
   887                           
   888                           	psect	text5
   889     0723                     __ptext5:	
   890 ;; *************** function _SpiSendBus *****************
   891 ;; Defined at:
   892 ;;		line 26 in file "spi.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  rg              1    wreg     unsigned char 
   895 ;;  dt              1    1[COMMON] unsigned char 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  rg              1    2[COMMON] unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         1       0       0       0       0
   908 ;;      Locals:         1       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         2       0       0       0       0
   911 ;;Total ram usage:        2 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 1
   914 ;; This function calls:
   915 ;;		_SpiSendByte
   916 ;; This function is called by:
   917 ;;		_main
   918 ;;		_SpiClearMatrix
   919 ;;		_MATR_7219_init
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923     0723                     _SpiSendBus:	
   924                           ;psect for function _SpiSendBus
   925                           
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _SpiSendBus: [wreg+status,2+status,0+pclath+cstack]
   929                           ;SpiSendBus@rg stored from wreg
   930     0723  00F2               	movwf	SpiSendBus@rg
   931     0724                     l689:
   932                           
   933                           ;spi.c: 27:     RA5 = 0;
   934     0724  1283               	bcf	3,5	;RP0=0, select bank0
   935     0725  1303               	bcf	3,6	;RP1=0, select bank0
   936     0726  1285               	bcf	5,5	;volatile
   937     0727                     l691:
   938                           
   939                           ;spi.c: 28:     SpiSendByte(rg);
   940     0727  0872               	movf	SpiSendBus@rg,w
   941     0728  120A  118A  26F6  120A  118A  	fcall	_SpiSendByte
   942                           
   943                           ;spi.c: 29:     SpiSendByte(dt);
   944     072D  0871               	movf	SpiSendBus@dt,w
   945     072E  120A  118A  26F6  120A  118A  	fcall	_SpiSendByte
   946     0733                     l693:
   947                           
   948                           ;spi.c: 30:     RA5 = 1;
   949     0733  1283               	bcf	3,5	;RP0=0, select bank0
   950     0734  1303               	bcf	3,6	;RP1=0, select bank0
   951     0735  1685               	bsf	5,5	;volatile
   952     0736                     l63:
   953     0736  0008               	return
   954     0737                     __end_of_SpiSendBus:
   955                           
   956                           	psect	text6
   957     06F6                     __ptext6:	
   958 ;; *************** function _SpiSendByte *****************
   959 ;; Defined at:
   960 ;;		line 20 in file "spi.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  data            1    wreg     unsigned char 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  data            1    0[COMMON] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_SpiSendBus
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     06F6                     _SpiSendByte:	
   988                           ;psect for function _SpiSendByte
   989                           
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _SpiSendByte: [wreg]
   993                           ;SpiSendByte@data stored from wreg
   994     06F6  00F0               	movwf	SpiSendByte@data
   995     06F7                     l615:
   996                           
   997                           ;spi.c: 21:     SSPBUF = data;
   998     06F7  0870               	movf	SpiSendByte@data,w
   999     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1000     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1001     06FA  0093               	movwf	19	;volatile
  1002     06FB                     l57:	
  1003                           ;spi.c: 22:     while (!SSPIF);
  1004                           
  1005     06FB  1D8C               	btfss	12,3	;volatile
  1006     06FC  2EFE               	goto	u11
  1007     06FD  2EFF               	goto	u10
  1008     06FE                     u11:
  1009     06FE  2EFB               	goto	l57
  1010     06FF                     u10:
  1011     06FF                     l59:
  1012                           
  1013                           ;spi.c: 23:     SSPIF = 0;
  1014     06FF  118C               	bcf	12,3	;volatile
  1015     0700                     l60:
  1016     0700  0008               	return
  1017     0701                     __end_of_SpiSendByte:
  1018     0002                     ___latbits      equ	2
  1019     007E                     btemp           set	126	;btemp
  1020     007E                     wtemp0          set	126
  1021                           
  1022                           	psect	config
  1023                           
  1024                           ;Config register CONFIG @ 0x2007
  1025                           ;	Oscillator Selection bits
  1026                           ;	FOSC = HS, HS oscillator
  1027                           ;	Watchdog Timer Enable bit
  1028                           ;	WDTE = OFF, WDT disabled
  1029                           ;	Power-up Timer Enable bit
  1030                           ;	PWRTE = OFF, PWRT disabled
  1031                           ;	FLASH Program Memory Code Protection bits
  1032                           ;	CP = OFF, Code protection off
  1033                           ;	Brown-out Reset Enable bit
  1034                           ;	BOREN = OFF, BOR disabled
  1035                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1036                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1037                           ;	Data EE Memory Code Protection
  1038                           ;	CPD = OFF, Code Protection off
  1039                           ;	FLASH Program Memory Write Enable
  1040                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1041                           ;	In-Circuit Debugger Mode bit
  1042                           ;	DEBUG = 0x1, unprogrammed default
  1043     2007                     	org	8199
  1044     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MATR_7219_init
    _MATR_7219_init->_SpiClearMatrix
    _SpiClearMatrix->_SpiSendBus
    _SpiSendBus->_SpiSendByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     537
                                              7 COMMON     7     7      0
                     _MATR_7219_init
                          _PortBInit
                     _SpiClearMatrix
                            _SpiInit
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MATR_7219_init                                       3     3      0     189
                                              4 COMMON     3     3      0
                     _SpiClearMatrix
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiClearMatrix                                       1     1      0     117
                                              3 COMMON     1     1      0
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiSendBus                                           2     1      1      72
                                              1 COMMON     2     1      1
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (2) _SpiSendByte                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MATR_7219_init
     _SpiClearMatrix
       _SpiSendBus
         _SpiSendByte
     _SpiSendBus
   _PortBInit
   _SpiClearMatrix
   _SpiInit
   _SpiSendBus

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec  4 13:43:32 2024

         _SpiClearMatrix 0701                       l33 06F5                       l60 0700  
                     l54 0722                       l63 0736                       l71 076A  
                     l57 06FB                       l59 06FF                       l68 0710  
                     u10 06FF                       u11 06FE                       u80 0710  
                     u81 070F                       u90 078D                       u91 078C  
                     u95 0789          SpiSendByte@data 0070                      l701 0737  
                    l615 06F7                      l711 075D                      l703 0743  
                    l631 0714                      l713 0765                      l705 0746  
                    l633 071C                      l721 077C                      l707 074D  
                    l651 06EF                      l635 071E                      l731 07AA  
                    l723 0780                      l715 076B                      l709 0755  
                    l629 0711                      l741 07D4                      l733 07BB  
                    l717 0775                      l743 07E1                      l735 07C7  
                    l727 078E                      l719 077A                      l745 07E3  
                    l729 079B                      l691 0727                      l747 07E8  
                    l739 07CE                      l693 0733                      l749 07EB  
                    l695 0701                      l689 0724                      l697 0703  
                    l699 070A                      _RA5 002D                      u100 079B  
                    u101 079A                      u105 0797                      u130 07E1  
                    u114 07A3                      u131 07E0                      u115 07A1  
                    u124 07B0                      u125 07AE                      u135 07DD  
                    u147 07C1                      u157 07F1                      u167 073D  
                   _main 076B                     btemp 007E                     start 0000  
 __end_of_SpiClearMatrix 0711           _MATR_7219_init 0737          __end_of_SpiInit 0723  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _SSPIF 0063          SpiClearMatrix@i 0073                    main@i 007C  
                  status 0003                    wtemp0 007E   __end_of_MATR_7219_init 076B  
        ?_SpiClearMatrix 0070          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0077                   _SSPCON 0014                   _SSPBUF 0013  
        ?_MATR_7219_init 0070                ??_SpiInit 0070            ??_SpiSendByte 0070  
             _SpiSendBus 0723                   main@sh 007A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070      __end_of_SpiSendByte 0701        __end_of_PortBInit 06F6  
             __pmaintext 076B              ?_SpiSendBus 0071                  _SSPSTAT 0094  
       ??_SpiClearMatrix 0073                  _SpiInit 0711              _SpiSendByte 06F6  
                __ptext1 0711                  __ptext2 06EF                  __ptext3 0737  
                __ptext4 0701                  __ptext5 0723                  __ptext6 06F6  
   end_of_initialization 07FC         ??_MATR_7219_init 0074      start_initialization 07FC  
           ??_SpiSendBus 0072                _PortBInit 06EF                ___latbits 0002  
     __end_of_SpiSendBus 0737                 ?_SpiInit 0070               ?_PortBInit 0070  
           ?_SpiSendByte 0070             SpiSendBus@dt 0071             SpiSendBus@rg 0072  
            ??_PortBInit 0070  
