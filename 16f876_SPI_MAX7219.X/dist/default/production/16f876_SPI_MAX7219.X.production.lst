

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 18 10:57:19 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 12/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F876 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0004                     fsr             equ	4
    73     0004                     fsr0            equ	4
    74     0000                     indf            equ	0
    75     0000                     indf0           equ	0
    76     0002                     pc              equ	2
    77     0002                     pcl             equ	2
    78     000A                     pclath          equ	10
    79     0003                     status          equ	3
    80     0000                     INDF            equ	0	;# 
    81     0001                     TMR0            equ	1	;# 
    82     0002                     PCL             equ	2	;# 
    83     0003                     STATUS          equ	3	;# 
    84     0004                     FSR             equ	4	;# 
    85     0005                     PORTA           equ	5	;# 
    86     0006                     PORTB           equ	6	;# 
    87     0007                     PORTC           equ	7	;# 
    88     000A                     PCLATH          equ	10	;# 
    89     000B                     INTCON          equ	11	;# 
    90     000C                     PIR1            equ	12	;# 
    91     000D                     PIR2            equ	13	;# 
    92     000E                     TMR1            equ	14	;# 
    93     000E                     TMR1L           equ	14	;# 
    94     000F                     TMR1H           equ	15	;# 
    95     0010                     T1CON           equ	16	;# 
    96     0011                     TMR2            equ	17	;# 
    97     0012                     T2CON           equ	18	;# 
    98     0013                     SSPBUF          equ	19	;# 
    99     0014                     SSPCON          equ	20	;# 
   100     0015                     CCPR1           equ	21	;# 
   101     0015                     CCPR1L          equ	21	;# 
   102     0016                     CCPR1H          equ	22	;# 
   103     0017                     CCP1CON         equ	23	;# 
   104     0018                     RCSTA           equ	24	;# 
   105     0019                     TXREG           equ	25	;# 
   106     001A                     RCREG           equ	26	;# 
   107     001B                     CCPR2           equ	27	;# 
   108     001B                     CCPR2L          equ	27	;# 
   109     001C                     CCPR2H          equ	28	;# 
   110     001D                     CCP2CON         equ	29	;# 
   111     001E                     ADRESH          equ	30	;# 
   112     001F                     ADCON0          equ	31	;# 
   113     0081                     OPTION_REG      equ	129	;# 
   114     0085                     TRISA           equ	133	;# 
   115     0086                     TRISB           equ	134	;# 
   116     0087                     TRISC           equ	135	;# 
   117     008C                     PIE1            equ	140	;# 
   118     008D                     PIE2            equ	141	;# 
   119     008E                     PCON            equ	142	;# 
   120     0091                     SSPCON2         equ	145	;# 
   121     0092                     PR2             equ	146	;# 
   122     0093                     SSPADD          equ	147	;# 
   123     0094                     SSPSTAT         equ	148	;# 
   124     0098                     TXSTA           equ	152	;# 
   125     0099                     SPBRG           equ	153	;# 
   126     009E                     ADRESL          equ	158	;# 
   127     009F                     ADCON1          equ	159	;# 
   128     010C                     EEDATA          equ	268	;# 
   129     010D                     EEADR           equ	269	;# 
   130     010E                     EEDATH          equ	270	;# 
   131     010F                     EEADRH          equ	271	;# 
   132     018C                     EECON1          equ	396	;# 
   133     018D                     EECON2          equ	397	;# 
   134     0000                     INDF            equ	0	;# 
   135     0001                     TMR0            equ	1	;# 
   136     0002                     PCL             equ	2	;# 
   137     0003                     STATUS          equ	3	;# 
   138     0004                     FSR             equ	4	;# 
   139     0005                     PORTA           equ	5	;# 
   140     0006                     PORTB           equ	6	;# 
   141     0007                     PORTC           equ	7	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     008C                     PIE1            equ	140	;# 
   172     008D                     PIE2            equ	141	;# 
   173     008E                     PCON            equ	142	;# 
   174     0091                     SSPCON2         equ	145	;# 
   175     0092                     PR2             equ	146	;# 
   176     0093                     SSPADD          equ	147	;# 
   177     0094                     SSPSTAT         equ	148	;# 
   178     0098                     TXSTA           equ	152	;# 
   179     0099                     SPBRG           equ	153	;# 
   180     009E                     ADRESL          equ	158	;# 
   181     009F                     ADCON1          equ	159	;# 
   182     010C                     EEDATA          equ	268	;# 
   183     010D                     EEADR           equ	269	;# 
   184     010E                     EEDATH          equ	270	;# 
   185     010F                     EEADRH          equ	271	;# 
   186     018C                     EECON1          equ	396	;# 
   187     018D                     EECON2          equ	397	;# 
   188     0000                     INDF            equ	0	;# 
   189     0001                     TMR0            equ	1	;# 
   190     0002                     PCL             equ	2	;# 
   191     0003                     STATUS          equ	3	;# 
   192     0004                     FSR             equ	4	;# 
   193     0005                     PORTA           equ	5	;# 
   194     0006                     PORTB           equ	6	;# 
   195     0007                     PORTC           equ	7	;# 
   196     000A                     PCLATH          equ	10	;# 
   197     000B                     INTCON          equ	11	;# 
   198     000C                     PIR1            equ	12	;# 
   199     000D                     PIR2            equ	13	;# 
   200     000E                     TMR1            equ	14	;# 
   201     000E                     TMR1L           equ	14	;# 
   202     000F                     TMR1H           equ	15	;# 
   203     0010                     T1CON           equ	16	;# 
   204     0011                     TMR2            equ	17	;# 
   205     0012                     T2CON           equ	18	;# 
   206     0013                     SSPBUF          equ	19	;# 
   207     0014                     SSPCON          equ	20	;# 
   208     0015                     CCPR1           equ	21	;# 
   209     0015                     CCPR1L          equ	21	;# 
   210     0016                     CCPR1H          equ	22	;# 
   211     0017                     CCP1CON         equ	23	;# 
   212     0018                     RCSTA           equ	24	;# 
   213     0019                     TXREG           equ	25	;# 
   214     001A                     RCREG           equ	26	;# 
   215     001B                     CCPR2           equ	27	;# 
   216     001B                     CCPR2L          equ	27	;# 
   217     001C                     CCPR2H          equ	28	;# 
   218     001D                     CCP2CON         equ	29	;# 
   219     001E                     ADRESH          equ	30	;# 
   220     001F                     ADCON0          equ	31	;# 
   221     0081                     OPTION_REG      equ	129	;# 
   222     0085                     TRISA           equ	133	;# 
   223     0086                     TRISB           equ	134	;# 
   224     0087                     TRISC           equ	135	;# 
   225     008C                     PIE1            equ	140	;# 
   226     008D                     PIE2            equ	141	;# 
   227     008E                     PCON            equ	142	;# 
   228     0091                     SSPCON2         equ	145	;# 
   229     0092                     PR2             equ	146	;# 
   230     0093                     SSPADD          equ	147	;# 
   231     0094                     SSPSTAT         equ	148	;# 
   232     0098                     TXSTA           equ	152	;# 
   233     0099                     SPBRG           equ	153	;# 
   234     009E                     ADRESL          equ	158	;# 
   235     009F                     ADCON1          equ	159	;# 
   236     010C                     EEDATA          equ	268	;# 
   237     010D                     EEADR           equ	269	;# 
   238     010E                     EEDATH          equ	270	;# 
   239     010F                     EEADRH          equ	271	;# 
   240     018C                     EECON1          equ	396	;# 
   241     018D                     EECON2          equ	397	;# 
   242     0000                     INDF            equ	0	;# 
   243     0001                     TMR0            equ	1	;# 
   244     0002                     PCL             equ	2	;# 
   245     0003                     STATUS          equ	3	;# 
   246     0004                     FSR             equ	4	;# 
   247     0005                     PORTA           equ	5	;# 
   248     0006                     PORTB           equ	6	;# 
   249     0007                     PORTC           equ	7	;# 
   250     000A                     PCLATH          equ	10	;# 
   251     000B                     INTCON          equ	11	;# 
   252     000C                     PIR1            equ	12	;# 
   253     000D                     PIR2            equ	13	;# 
   254     000E                     TMR1            equ	14	;# 
   255     000E                     TMR1L           equ	14	;# 
   256     000F                     TMR1H           equ	15	;# 
   257     0010                     T1CON           equ	16	;# 
   258     0011                     TMR2            equ	17	;# 
   259     0012                     T2CON           equ	18	;# 
   260     0013                     SSPBUF          equ	19	;# 
   261     0014                     SSPCON          equ	20	;# 
   262     0015                     CCPR1           equ	21	;# 
   263     0015                     CCPR1L          equ	21	;# 
   264     0016                     CCPR1H          equ	22	;# 
   265     0017                     CCP1CON         equ	23	;# 
   266     0018                     RCSTA           equ	24	;# 
   267     0019                     TXREG           equ	25	;# 
   268     001A                     RCREG           equ	26	;# 
   269     001B                     CCPR2           equ	27	;# 
   270     001B                     CCPR2L          equ	27	;# 
   271     001C                     CCPR2H          equ	28	;# 
   272     001D                     CCP2CON         equ	29	;# 
   273     001E                     ADRESH          equ	30	;# 
   274     001F                     ADCON0          equ	31	;# 
   275     0081                     OPTION_REG      equ	129	;# 
   276     0085                     TRISA           equ	133	;# 
   277     0086                     TRISB           equ	134	;# 
   278     0087                     TRISC           equ	135	;# 
   279     008C                     PIE1            equ	140	;# 
   280     008D                     PIE2            equ	141	;# 
   281     008E                     PCON            equ	142	;# 
   282     0091                     SSPCON2         equ	145	;# 
   283     0092                     PR2             equ	146	;# 
   284     0093                     SSPADD          equ	147	;# 
   285     0094                     SSPSTAT         equ	148	;# 
   286     0098                     TXSTA           equ	152	;# 
   287     0099                     SPBRG           equ	153	;# 
   288     009E                     ADRESL          equ	158	;# 
   289     009F                     ADCON1          equ	159	;# 
   290     010C                     EEDATA          equ	268	;# 
   291     010D                     EEADR           equ	269	;# 
   292     010E                     EEDATH          equ	270	;# 
   293     010F                     EEADRH          equ	271	;# 
   294     018C                     EECON1          equ	396	;# 
   295     018D                     EECON2          equ	397	;# 
   296     0000                     INDF            equ	0	;# 
   297     0001                     TMR0            equ	1	;# 
   298     0002                     PCL             equ	2	;# 
   299     0003                     STATUS          equ	3	;# 
   300     0004                     FSR             equ	4	;# 
   301     0005                     PORTA           equ	5	;# 
   302     0006                     PORTB           equ	6	;# 
   303     0007                     PORTC           equ	7	;# 
   304     000A                     PCLATH          equ	10	;# 
   305     000B                     INTCON          equ	11	;# 
   306     000C                     PIR1            equ	12	;# 
   307     000D                     PIR2            equ	13	;# 
   308     000E                     TMR1            equ	14	;# 
   309     000E                     TMR1L           equ	14	;# 
   310     000F                     TMR1H           equ	15	;# 
   311     0010                     T1CON           equ	16	;# 
   312     0011                     TMR2            equ	17	;# 
   313     0012                     T2CON           equ	18	;# 
   314     0013                     SSPBUF          equ	19	;# 
   315     0014                     SSPCON          equ	20	;# 
   316     0015                     CCPR1           equ	21	;# 
   317     0015                     CCPR1L          equ	21	;# 
   318     0016                     CCPR1H          equ	22	;# 
   319     0017                     CCP1CON         equ	23	;# 
   320     0018                     RCSTA           equ	24	;# 
   321     0019                     TXREG           equ	25	;# 
   322     001A                     RCREG           equ	26	;# 
   323     001B                     CCPR2           equ	27	;# 
   324     001B                     CCPR2L          equ	27	;# 
   325     001C                     CCPR2H          equ	28	;# 
   326     001D                     CCP2CON         equ	29	;# 
   327     001E                     ADRESH          equ	30	;# 
   328     001F                     ADCON0          equ	31	;# 
   329     0081                     OPTION_REG      equ	129	;# 
   330     0085                     TRISA           equ	133	;# 
   331     0086                     TRISB           equ	134	;# 
   332     0087                     TRISC           equ	135	;# 
   333     008C                     PIE1            equ	140	;# 
   334     008D                     PIE2            equ	141	;# 
   335     008E                     PCON            equ	142	;# 
   336     0091                     SSPCON2         equ	145	;# 
   337     0092                     PR2             equ	146	;# 
   338     0093                     SSPADD          equ	147	;# 
   339     0094                     SSPSTAT         equ	148	;# 
   340     0098                     TXSTA           equ	152	;# 
   341     0099                     SPBRG           equ	153	;# 
   342     009E                     ADRESL          equ	158	;# 
   343     009F                     ADCON1          equ	159	;# 
   344     010C                     EEDATA          equ	268	;# 
   345     010D                     EEADR           equ	269	;# 
   346     010E                     EEDATH          equ	270	;# 
   347     010F                     EEADRH          equ	271	;# 
   348     018C                     EECON1          equ	396	;# 
   349     018D                     EECON2          equ	397	;# 
   350     0000                     INDF            equ	0	;# 
   351     0001                     TMR0            equ	1	;# 
   352     0002                     PCL             equ	2	;# 
   353     0003                     STATUS          equ	3	;# 
   354     0004                     FSR             equ	4	;# 
   355     0005                     PORTA           equ	5	;# 
   356     0006                     PORTB           equ	6	;# 
   357     0007                     PORTC           equ	7	;# 
   358     000A                     PCLATH          equ	10	;# 
   359     000B                     INTCON          equ	11	;# 
   360     000C                     PIR1            equ	12	;# 
   361     000D                     PIR2            equ	13	;# 
   362     000E                     TMR1            equ	14	;# 
   363     000E                     TMR1L           equ	14	;# 
   364     000F                     TMR1H           equ	15	;# 
   365     0010                     T1CON           equ	16	;# 
   366     0011                     TMR2            equ	17	;# 
   367     0012                     T2CON           equ	18	;# 
   368     0013                     SSPBUF          equ	19	;# 
   369     0014                     SSPCON          equ	20	;# 
   370     0015                     CCPR1           equ	21	;# 
   371     0015                     CCPR1L          equ	21	;# 
   372     0016                     CCPR1H          equ	22	;# 
   373     0017                     CCP1CON         equ	23	;# 
   374     0018                     RCSTA           equ	24	;# 
   375     0019                     TXREG           equ	25	;# 
   376     001A                     RCREG           equ	26	;# 
   377     001B                     CCPR2           equ	27	;# 
   378     001B                     CCPR2L          equ	27	;# 
   379     001C                     CCPR2H          equ	28	;# 
   380     001D                     CCP2CON         equ	29	;# 
   381     001E                     ADRESH          equ	30	;# 
   382     001F                     ADCON0          equ	31	;# 
   383     0081                     OPTION_REG      equ	129	;# 
   384     0085                     TRISA           equ	133	;# 
   385     0086                     TRISB           equ	134	;# 
   386     0087                     TRISC           equ	135	;# 
   387     008C                     PIE1            equ	140	;# 
   388     008D                     PIE2            equ	141	;# 
   389     008E                     PCON            equ	142	;# 
   390     0091                     SSPCON2         equ	145	;# 
   391     0092                     PR2             equ	146	;# 
   392     0093                     SSPADD          equ	147	;# 
   393     0094                     SSPSTAT         equ	148	;# 
   394     0098                     TXSTA           equ	152	;# 
   395     0099                     SPBRG           equ	153	;# 
   396     009E                     ADRESL          equ	158	;# 
   397     009F                     ADCON1          equ	159	;# 
   398     010C                     EEDATA          equ	268	;# 
   399     010D                     EEADR           equ	269	;# 
   400     010E                     EEDATH          equ	270	;# 
   401     010F                     EEADRH          equ	271	;# 
   402     018C                     EECON1          equ	396	;# 
   403     018D                     EECON2          equ	397	;# 
   404                           
   405                           	psect	idataBANK1
   406     0059                     __pidataBANK1:
   407                           
   408                           ;initializer for main@F927
   409     0059  3407               	retlw	7
   410     005A  3405               	retlw	5
   411     005B  3402               	retlw	2
   412                           
   413                           	psect	strings
   414     0003                     __pstrings:
   415     0003                     stringtab:
   416     0003                     __stringtab:
   417     0003                     stringcode:	
   418                           ;	String table - string pointers are 1 byte each
   419                           
   420     0003                     stringdir:
   421     0003  3000               	movlw	high stringdir
   422     0004  008A               	movwf	10
   423     0005  0804               	movf	4,w
   424     0006  0A84               	incf	4,f
   425     0007  0782               	addwf	2,f
   426     0008                     __stringbase:
   427     0008  3400               	retlw	0
   428     0009                     __end_of__stringtab:
   429     0009                     main@delay:
   430     0009  34E8               	retlw	232
   431     000A  3403               	retlw	3
   432     000B  3400               	retlw	0
   433     000C  3400               	retlw	0
   434     000D                     __end_ofmain@delay:
   435     000D                     ChangeOfCoordinates@delay:
   436     000D  3496               	retlw	150
   437     000E  3400               	retlw	0
   438     000F  3400               	retlw	0
   439     0010  3400               	retlw	0
   440     0011                     __end_ofChangeOfCoordinates@delay:
   441     0013                     _SSPBUF         set	19
   442     0014                     _SSPCON         set	20
   443     0005                     _PORTA          set	5
   444     0006                     _PORTB          set	6
   445     002D                     _RA5            set	45
   446     0063                     _SSPIF          set	99
   447     0094                     _SSPSTAT        set	148
   448     0085                     _TRISA          set	133
   449     0087                     _TRISC          set	135
   450     0086                     _TRISB          set	134
   451                           
   452                           	psect	cinit
   453     07D8                     start_initialization:	
   454                           ; #config settings
   455                           
   456     07D8                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK1
   459     07D8  1683               	bsf	3,5	;RP0=1, select bank1
   460     07D9  1303               	bcf	3,6	;RP1=0, select bank1
   461     07DA  120A  118A  2059  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   462     07DF  00A6               	movwf	__pdataBANK1& (0+127)
   463     07E0  120A  118A  205A  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   464     07E5  00A7               	movwf	(__pdataBANK1+1)& (0+127)
   465     07E6  120A  118A  205B  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   466     07EB  00A8               	movwf	(__pdataBANK1+2)& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469     07EC  01A0               	clrf	__pbssBANK1& (0+127)
   470     07ED  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   471     07EE  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   472     07EF  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   473     07F0  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   474     07F1  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   475                           
   476                           ; Clear objects allocated to BANK0
   477     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   478     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   479     07F4  01E7               	clrf	__pbssBANK0& (0+127)
   480     07F5  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   481     07F6  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   482     07F7  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   483     07F8  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   484     07F9  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   485     07FA  01ED               	clrf	(__pbssBANK0+6)& (0+127)
   486     07FB  01EE               	clrf	(__pbssBANK0+7)& (0+127)
   487     07FC                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490     07FC                     __end_of__initialization:
   491     07FC  0183               	clrf	3
   492     07FD  120A  118A  29DA   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssBANK0
   495     0067                     __pbssBANK0:
   496     0067                     _brkp:
   497     0067                     	ds	2
   498     0069                     malloc@end:
   499     0069                     	ds	2
   500     006B                     malloc@cur:
   501     006B                     	ds	2
   502     006D                     ___freelist:
   503     006D                     	ds	2
   504                           
   505                           	psect	bssBANK1
   506     00A0                     __pbssBANK1:
   507     00A0                     malloc@lock:
   508     00A0                     	ds	4
   509     00A4                     _errno:
   510     00A4                     	ds	2
   511                           
   512                           	psect	dataBANK1
   513     00A6                     __pdataBANK1:
   514     00A6                     main@F927:
   515     00A6                     	ds	3
   516                           
   517                           	psect	cstackCOMMON
   518     0070                     __pcstackCOMMON:
   519     0070                     ?_SpiInit:
   520     0070                     ?_MatrixInit:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_PortBInit:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_SetPosition:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_free:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_SpiSendByte:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_SpiClearMatrix:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_MovieDown:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_MovieUp:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_MovieLeft:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_MovieRigth:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?___simple_search_fl:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?___expand_heap:	
   557                           ; 2 bytes @ 0x0
   558                           
   559     0070                     ?___wmul:	
   560                           ; 2 bytes @ 0x0
   561                           
   562     0070                     SpiSendByte@data:	
   563                           ; 2 bytes @ 0x0
   564                           
   565     0070                     ___expand_heap@pn:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     SetPosition@position:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     MovieDown@_shapePosition:	
   572                           ; 2 bytes @ 0x0
   573                           
   574     0070                     MovieUp@_shapePosition:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     MovieLeft@_shapePosition:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0070                     MovieRigth@_shapePosition:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     ___wmul@multiplier:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0070                     ___simple_search_fl@n:	
   587                           ; 2 bytes @ 0x0
   588                           
   589     0070                     free@ptr:	
   590                           ; 2 bytes @ 0x0
   591                           
   592     0070                     ??_SpiInit:	
   593                           ; 2 bytes @ 0x0
   594                           
   595     0070                     ??_PortBInit:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_SpiSendByte:	
   599                           ; 1 bytes @ 0x0
   600                           
   601                           
   602                           ; 1 bytes @ 0x0
   603     0070                     	ds	1
   604     0071                     ?_SendToSegment:
   605     0071                     SendToSegment@segment:	
   606                           ; 1 bytes @ 0x1
   607                           
   608     0071                     ___expand_heap@n:	
   609                           ; 2 bytes @ 0x1
   610                           
   611     0071                     ??___expand_heap:	
   612                           ; 2 bytes @ 0x1
   613                           
   614                           
   615                           ; 1 bytes @ 0x1
   616     0071                     	ds	1
   617     0072                     SetPosition@x:
   618     0072                     ___wmul@multiplicand:	
   619                           ; 2 bytes @ 0x2
   620                           
   621     0072                     ??_free:	
   622                           ; 2 bytes @ 0x2
   623                           
   624     0072                     ??___simple_search_fl:	
   625                           ; 1 bytes @ 0x2
   626                           
   627     0072                     ??_MovieDown:	
   628                           ; 1 bytes @ 0x2
   629                           
   630     0072                     ??_MovieUp:	
   631                           ; 1 bytes @ 0x2
   632                           
   633     0072                     ??_MovieLeft:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0072                     ??_MovieRigth:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 1 bytes @ 0x2
   641     0072                     	ds	1
   642     0073                     SendToSegment@data:
   643     0073                     ___expand_heap@new_brkp:	
   644                           ; 1 bytes @ 0x3
   645                           
   646                           
   647                           ; 2 bytes @ 0x3
   648     0073                     	ds	1
   649     0074                     ?_ShowShape:
   650     0074                     SetPosition@y:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     0074                     ShowShape@coord:	
   654                           ; 2 bytes @ 0x4
   655                           
   656     0074                     ___wmul@product:	
   657                           ; 2 bytes @ 0x4
   658                           
   659     0074                     ??_SendToSegment:	
   660                           ; 2 bytes @ 0x4
   661                           
   662     0074                     ??_SpiClearMatrix:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     ??___wmul:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 1 bytes @ 0x4
   670     0074                     	ds	2
   671     0076                     ?_memset:
   672     0076                     SpiClearMatrix@i:	
   673                           ; 2 bytes @ 0x6
   674                           
   675     0076                     ShowShape@countElemntArray:	
   676                           ; 1 bytes @ 0x6
   677                           
   678     0076                     memset@dest:	
   679                           ; 2 bytes @ 0x6
   680                           
   681     0076                     ??_SetPosition:	
   682                           ; 2 bytes @ 0x6
   683                           
   684                           
   685                           ; 1 bytes @ 0x6
   686     0076                     	ds	1
   687     0077                     ??_MatrixInit:
   688                           
   689                           ; 1 bytes @ 0x7
   690     0077                     	ds	1
   691     0078                     ?_malloc:
   692     0078                     ShowShape@shapeArray:	
   693                           ; 2 bytes @ 0x8
   694                           
   695     0078                     free@cptr:	
   696                           ; 1 bytes @ 0x8
   697                           
   698     0078                     malloc@n:	
   699                           ; 2 bytes @ 0x8
   700                           
   701     0078                     memset@c:	
   702                           ; 2 bytes @ 0x8
   703                           
   704                           
   705                           ; 2 bytes @ 0x8
   706     0078                     	ds	1
   707     0079                     ??_ShowShape:
   708                           
   709                           ; 1 bytes @ 0x9
   710     0079                     	ds	1
   711     007A                     free@c:
   712     007A                     memset@n:	
   713                           ; 2 bytes @ 0xA
   714                           
   715     007A                     ??_malloc:	
   716                           ; 2 bytes @ 0xA
   717                           
   718                           
   719                           ; 1 bytes @ 0xA
   720     007A                     	ds	2
   721     007C                     memset@p:
   722     007C                     ??_memset:	
   723                           ; 2 bytes @ 0xC
   724                           
   725                           
   726                           ; 1 bytes @ 0xC
   727     007C                     	ds	2
   728     007E                     ??_calloc:
   729     007E                     ??_main:	
   730                           ; 1 bytes @ 0xE
   731                           
   732                           
   733                           	psect	cstackBANK0
   734     0020                     __pcstackBANK0:	
   735                           ; 1 bytes @ 0xE
   736                           
   737     0020                     ShowShape@_pos:
   738     0020                     ___simple_search_fl@remaining_size:	
   739                           ; 2 bytes @ 0x0
   740                           
   741                           
   742                           ; 2 bytes @ 0x0
   743     0020                     	ds	2
   744     0022                     ShowShape@pos:
   745     0022                     ___simple_search_fl@best_last:	
   746                           ; 2 bytes @ 0x2
   747                           
   748                           
   749                           ; 2 bytes @ 0x2
   750     0022                     	ds	2
   751     0024                     ?_MovieShape:
   752     0024                     MovieShape@_shapePosition:	
   753                           ; 1 bytes @ 0x4
   754                           
   755     0024                     ___simple_search_fl@split:	
   756                           ; 2 bytes @ 0x4
   757                           
   758                           
   759                           ; 2 bytes @ 0x4
   760     0024                     	ds	2
   761     0026                     MovieShape@shapeArray:
   762     0026                     ___simple_search_fl@last:	
   763                           ; 1 bytes @ 0x6
   764                           
   765                           
   766                           ; 2 bytes @ 0x6
   767     0026                     	ds	1
   768     0027                     MovieShape@countElemntArray:
   769                           
   770                           ; 2 bytes @ 0x7
   771     0027                     	ds	1
   772     0028                     ___simple_search_fl@next:
   773                           
   774                           ; 2 bytes @ 0x8
   775     0028                     	ds	1
   776     0029                     ??_MovieShape:
   777                           
   778                           ; 1 bytes @ 0x9
   779     0029                     	ds	1
   780     002A                     ___simple_search_fl@c:
   781                           
   782                           ; 2 bytes @ 0xA
   783     002A                     	ds	1
   784     002B                     MovieShape@dir:
   785                           
   786                           ; 1 bytes @ 0xB
   787     002B                     	ds	1
   788     002C                     ___simple_search_fl@best:
   789                           
   790                           ; 2 bytes @ 0xC
   791     002C                     	ds	2
   792     002E                     malloc@m:
   793                           
   794                           ; 2 bytes @ 0xE
   795     002E                     	ds	2
   796     0030                     malloc@sz:
   797                           
   798                           ; 2 bytes @ 0x10
   799     0030                     	ds	2
   800     0032                     malloc@size:
   801                           
   802                           ; 2 bytes @ 0x12
   803     0032                     	ds	2
   804     0034                     malloc@p:
   805                           
   806                           ; 2 bytes @ 0x14
   807     0034                     	ds	2
   808     0036                     malloc@new:
   809                           
   810                           ; 2 bytes @ 0x16
   811     0036                     	ds	2
   812     0038                     ?_calloc:
   813     0038                     calloc@nmemb:	
   814                           ; 2 bytes @ 0x18
   815                           
   816                           
   817                           ; 2 bytes @ 0x18
   818     0038                     	ds	2
   819     003A                     calloc@size:
   820                           
   821                           ; 2 bytes @ 0x1A
   822     003A                     	ds	2
   823     003C                     calloc@new_ptr:
   824                           
   825                           ; 2 bytes @ 0x1C
   826     003C                     	ds	2
   827     003E                     ?_Rotate:
   828     003E                     Rotate@array_:	
   829                           ; 1 bytes @ 0x1E
   830                           
   831                           
   832                           ; 1 bytes @ 0x1E
   833     003E                     	ds	1
   834     003F                     Rotate@length:
   835                           
   836                           ; 2 bytes @ 0x1F
   837     003F                     	ds	2
   838     0041                     ??_Rotate:
   839                           
   840                           ; 1 bytes @ 0x21
   841     0041                     	ds	7
   842     0048                     Rotate@x:
   843                           
   844                           ; 2 bytes @ 0x28
   845     0048                     	ds	2
   846     004A                     Rotate@i:
   847                           
   848                           ; 2 bytes @ 0x2A
   849     004A                     	ds	2
   850     004C                     Rotate@y:
   851                           
   852                           ; 2 bytes @ 0x2C
   853     004C                     	ds	2
   854     004E                     Rotate@res:
   855                           
   856                           ; 2 bytes @ 0x2E
   857     004E                     	ds	2
   858     0050                     Rotate@_i:
   859                           
   860                           ; 2 bytes @ 0x30
   861     0050                     	ds	2
   862     0052                     ?_ChangeOfCoordinates:
   863     0052                     ChangeOfCoordinates@_shapePosition:	
   864                           ; 1 bytes @ 0x32
   865                           
   866                           
   867                           ; 2 bytes @ 0x32
   868     0052                     	ds	2
   869     0054                     ChangeOfCoordinates@_figure:
   870                           
   871                           ; 1 bytes @ 0x34
   872     0054                     	ds	1
   873     0055                     ChangeOfCoordinates@_countElemntArray:
   874                           
   875                           ; 2 bytes @ 0x35
   876     0055                     	ds	2
   877     0057                     ??_ChangeOfCoordinates:
   878                           
   879                           ; 1 bytes @ 0x37
   880     0057                     	ds	3
   881     005A                     ChangeOfCoordinates@step:
   882                           
   883                           ; 2 bytes @ 0x3A
   884     005A                     	ds	2
   885     005C                     ChangeOfCoordinates@i:
   886                           
   887                           ; 2 bytes @ 0x3C
   888     005C                     	ds	2
   889     005E                     main@square_1:
   890                           
   891                           ; 3 bytes @ 0x3E
   892     005E                     	ds	3
   893     0061                     main@countElemntArray:
   894                           
   895                           ; 2 bytes @ 0x41
   896     0061                     	ds	2
   897     0063                     main@shapePosition:
   898                           
   899                           ; 4 bytes @ 0x43
   900     0063                     	ds	4
   901                           
   902                           	psect	maintext
   903     01DA                     __pmaintext:	
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 51 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  shapePositio    4   67[BANK0 ] struct .
   914 ;;  square_1        3   62[BANK0 ] unsigned char [3]
   915 ;;  countElemntA    2   65[BANK0 ] int 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       9       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       9       0       0       0
   929 ;;Total ram usage:        9 bytes
   930 ;; Hardware stack levels required when called: 5
   931 ;; This function calls:
   932 ;;		_ChangeOfCoordinates
   933 ;;		_MatrixInit
   934 ;;		_PortBInit
   935 ;;		_SetPosition
   936 ;;		_SpiInit
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     01DA                     _main:	
   943                           ;psect for function _main
   944                           
   945     01DA                     l1546:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main.c: 52:     SpiInit();
   951     01DA  120A  118A  208A  120A  118A  	fcall	_SpiInit
   952                           
   953                           ;main.c: 53:     MatrixInit();
   954     01DF  120A  118A  2152  120A  118A  	fcall	_MatrixInit
   955     01E4                     l1548:
   956                           
   957                           ;main.c: 54:     PortBInit();
   958     01E4  120A  118A  205C  120A  118A  	fcall	_PortBInit
   959                           
   960                           ;main.c: 56:     TCoord shapePosition;;main.c: 57:     char square_1[3] = { 0x07, 0x05, 
      +                          0x02 };
   961     01E9  1683               	bsf	3,5	;RP0=1, select bank1
   962     01EA  1303               	bcf	3,6	;RP1=0, select bank1
   963     01EB  0826               	movf	main@F927^(0+128),w
   964     01EC  1283               	bcf	3,5	;RP0=0, select bank0
   965     01ED  1303               	bcf	3,6	;RP1=0, select bank0
   966     01EE  00DE               	movwf	main@square_1
   967     01EF  1683               	bsf	3,5	;RP0=1, select bank1
   968     01F0  1303               	bcf	3,6	;RP1=0, select bank1
   969     01F1  0827               	movf	(main@F927+1)^(0+128),w
   970     01F2  1283               	bcf	3,5	;RP0=0, select bank0
   971     01F3  1303               	bcf	3,6	;RP1=0, select bank0
   972     01F4  00DF               	movwf	main@square_1+1
   973     01F5  1683               	bsf	3,5	;RP0=1, select bank1
   974     01F6  1303               	bcf	3,6	;RP1=0, select bank1
   975     01F7  0828               	movf	(main@F927+2)^(0+128),w
   976     01F8  1283               	bcf	3,5	;RP0=0, select bank0
   977     01F9  1303               	bcf	3,6	;RP1=0, select bank0
   978     01FA  00E0               	movwf	main@square_1+2
   979                           
   980                           ;main.c: 58:     int countElemntArray = 3;
   981     01FB  3003               	movlw	3
   982     01FC  00E1               	movwf	main@countElemntArray
   983     01FD  3000               	movlw	0
   984     01FE  00E2               	movwf	main@countElemntArray+1
   985     01FF                     l1550:
   986                           
   987                           ;main.c: 62:         SetPosition(&shapePosition, 0, 0);
   988     01FF  3063               	movlw	low main@shapePosition
   989     0200  00F0               	movwf	SetPosition@position
   990     0201  3000               	movlw	high main@shapePosition
   991     0202  00F1               	movwf	SetPosition@position+1
   992     0203  3000               	movlw	0
   993     0204  00F2               	movwf	SetPosition@x
   994     0205  00F3               	movwf	SetPosition@x+1
   995     0206  3000               	movlw	0
   996     0207  00F4               	movwf	SetPosition@y
   997     0208  00F5               	movwf	SetPosition@y+1
   998     0209  120A  118A  20F1  120A  118A  	fcall	_SetPosition
   999     020E                     l1552:
  1000                           
  1001                           ;main.c: 63:         ChangeOfCoordinates(&shapePosition, square_1, countElemntArray);
  1002     020E  3063               	movlw	low main@shapePosition
  1003     020F  1283               	bcf	3,5	;RP0=0, select bank0
  1004     0210  1303               	bcf	3,6	;RP1=0, select bank0
  1005     0211  00D2               	movwf	ChangeOfCoordinates@_shapePosition
  1006     0212  3000               	movlw	high main@shapePosition
  1007     0213  00D3               	movwf	ChangeOfCoordinates@_shapePosition+1
  1008     0214  305E               	movlw	(low (main@square_1| 0))& (0+255)
  1009     0215  00D4               	movwf	ChangeOfCoordinates@_figure
  1010     0216  0862               	movf	main@countElemntArray+1,w
  1011     0217  00D6               	movwf	ChangeOfCoordinates@_countElemntArray+1
  1012     0218  0861               	movf	main@countElemntArray,w
  1013     0219  00D5               	movwf	ChangeOfCoordinates@_countElemntArray
  1014     021A  120A  118A  234D  120A  118A  	fcall	_ChangeOfCoordinates
  1015     021F  29FF               	goto	l1550
  1016     0220  120A  118A  2800   	ljmp	start
  1017     0223                     __end_of_main:
  1018                           
  1019                           	psect	text1
  1020     008A                     __ptext1:	
  1021 ;; *************** function _SpiInit *****************
  1022 ;; Defined at:
  1023 ;;		line 9 in file "spi.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050     008A                     _SpiInit:	
  1051                           ;psect for function _SpiInit
  1052                           
  1053     008A                     l1518:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
  1056                           
  1057                           
  1058                           ;spi.c: 10:     TRISC |= 0x10;
  1059     008A  1683               	bsf	3,5	;RP0=1, select bank1
  1060     008B  1303               	bcf	3,6	;RP1=0, select bank1
  1061     008C  1607               	bsf	7,4	;volatile
  1062     008D                     l1520:
  1063                           
  1064                           ;spi.c: 11:     TRISC &= ~0x28;
  1065     008D  30D7               	movlw	215
  1066     008E  0587               	andwf	7,f	;volatile
  1067                           
  1068                           ;spi.c: 12:     TRISA &= ~0x20;
  1069     008F  30DF               	movlw	223
  1070     0090  0585               	andwf	5,f	;volatile
  1071                           
  1072                           ;spi.c: 13:     PORTA &= ~0x20;
  1073     0091  30DF               	movlw	223
  1074     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0094  0585               	andwf	5,f	;volatile
  1077     0095                     l1522:
  1078                           
  1079                           ;spi.c: 14:     SSPCON = 0x30;
  1080     0095  3030               	movlw	48
  1081     0096  0094               	movwf	20	;volatile
  1082     0097                     l1524:
  1083                           
  1084                           ;spi.c: 15:     SSPSTAT = 0x80;
  1085     0097  3080               	movlw	128
  1086     0098  1683               	bsf	3,5	;RP0=1, select bank1
  1087     0099  1303               	bcf	3,6	;RP1=0, select bank1
  1088     009A  0094               	movwf	20	;volatile
  1089     009B                     l65:
  1090     009B  0008               	return
  1091     009C                     __end_of_SpiInit:
  1092                           
  1093                           	psect	text2
  1094     00F1                     __ptext2:	
  1095 ;; *************** function _SetPosition *****************
  1096 ;; Defined at:
  1097 ;;		line 3 in file "shape.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  position        2    0[COMMON] PTR struct .
  1100 ;;		 -> main@shapePosition(4), 
  1101 ;;  x               2    2[COMMON] int 
  1102 ;;  y               2    4[COMMON] int 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         6       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         8       0       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127     00F1                     _SetPosition:	
  1128                           ;psect for function _SetPosition
  1129                           
  1130     00F1                     l1542:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _SetPosition: [wreg-fsr0h+status,2+status,0]
  1133                           
  1134                           
  1135                           ;shape.c: 4:     position->x = x;
  1136     00F1  0870               	movf	SetPosition@position,w
  1137     00F2  0084               	movwf	4
  1138     00F3  1783               	bsf	3,7
  1139     00F4  1C71               	btfss	SetPosition@position+1,0
  1140     00F5  1383               	bcf	3,7
  1141     00F6  0872               	movf	SetPosition@x,w
  1142     00F7  0080               	movwf	0
  1143     00F8  0A84               	incf	4,f
  1144     00F9  0873               	movf	SetPosition@x+1,w
  1145     00FA  0080               	movwf	0
  1146     00FB                     l1544:
  1147                           
  1148                           ;shape.c: 5:     position->y = y;
  1149     00FB  0870               	movf	SetPosition@position,w
  1150     00FC  3E02               	addlw	2
  1151     00FD  00F6               	movwf	??_SetPosition
  1152     00FE  0871               	movf	SetPosition@position+1,w
  1153     00FF  1803               	skipnc
  1154     0100  3E01               	addlw	1
  1155     0101  3E00               	addlw	0
  1156     0102  00F7               	movwf	??_SetPosition+1
  1157     0103  0876               	movf	??_SetPosition,w
  1158     0104  0084               	movwf	4
  1159     0105  1783               	bsf	3,7
  1160     0106  1C77               	btfss	??_SetPosition+1,0
  1161     0107  1383               	bcf	3,7
  1162     0108  0874               	movf	SetPosition@y,w
  1163     0109  0080               	movwf	0
  1164     010A  0A84               	incf	4,f
  1165     010B  0875               	movf	SetPosition@y+1,w
  1166     010C  0080               	movwf	0
  1167     010D                     l101:
  1168     010D  0008               	return
  1169     010E                     __end_of_SetPosition:
  1170                           
  1171                           	psect	text3
  1172     005C                     __ptext3:	
  1173 ;; *************** function _PortBInit *****************
  1174 ;; Defined at:
  1175 ;;		line 13 in file "portsinit.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		status,2
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202     005C                     _PortBInit:	
  1203                           ;psect for function _PortBInit
  1204                           
  1205     005C                     l1540:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _PortBInit: [status,2]
  1208                           
  1209                           
  1210                           ;portsinit.c: 14:     TRISB = 0x00;
  1211     005C  1683               	bsf	3,5	;RP0=1, select bank1
  1212     005D  1303               	bcf	3,6	;RP1=0, select bank1
  1213     005E  0186               	clrf	6	;volatile
  1214                           
  1215                           ;portsinit.c: 15:     PORTB = 0x00;
  1216     005F  1283               	bcf	3,5	;RP0=0, select bank0
  1217     0060  1303               	bcf	3,6	;RP1=0, select bank0
  1218     0061  0186               	clrf	6	;volatile
  1219     0062                     l48:
  1220     0062  0008               	return
  1221     0063                     __end_of_PortBInit:
  1222                           
  1223                           	psect	text4
  1224     0152                     __ptext4:	
  1225 ;; *************** function _MatrixInit *****************
  1226 ;; Defined at:
  1227 ;;		line 20 in file "matrix.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0
  1243 ;;      Temps:          3       0       0       0       0
  1244 ;;      Totals:         3       0       0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 3
  1248 ;; This function calls:
  1249 ;;		_SendToSegment
  1250 ;;		_SpiClearMatrix
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256     0152                     _MatrixInit:	
  1257                           ;psect for function _MatrixInit
  1258                           
  1259     0152                     l1526:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  1262                           
  1263                           
  1264                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1265     0152  3003               	movlw	3
  1266     0153  00F9               	movwf	??_MatrixInit+2
  1267     0154  3008               	movlw	8
  1268     0155  00F8               	movwf	??_MatrixInit+1
  1269     0156  3077               	movlw	119
  1270     0157  00F7               	movwf	??_MatrixInit
  1271     0158                     u927:
  1272     0158  0BF7               	decfsz	??_MatrixInit,f
  1273     0159  2958               	goto	u927
  1274     015A  0BF8               	decfsz	??_MatrixInit+1,f
  1275     015B  2958               	goto	u927
  1276     015C  0BF9               	decfsz	??_MatrixInit+2,f
  1277     015D  2958               	goto	u927
  1278     015E                     l1528:
  1279                           
  1280                           ;matrix.c: 22:     RA5=1;
  1281     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1282     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1283     0160  1685               	bsf	5,5	;volatile
  1284     0161                     l1530:
  1285                           
  1286                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  1287     0161  3009               	movlw	9
  1288     0162  00F1               	movwf	SendToSegment@segment
  1289     0163  3000               	movlw	0
  1290     0164  00F2               	movwf	SendToSegment@segment+1
  1291     0165  01F3               	clrf	SendToSegment@data
  1292     0166  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  1293     016B                     l1532:
  1294                           
  1295                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  1296     016B  300B               	movlw	11
  1297     016C  00F1               	movwf	SendToSegment@segment
  1298     016D  3000               	movlw	0
  1299     016E  00F2               	movwf	SendToSegment@segment+1
  1300     016F  3007               	movlw	7
  1301     0170  00F3               	movwf	SendToSegment@data
  1302     0171  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  1303     0176                     l1534:
  1304                           
  1305                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  1306     0176  300A               	movlw	10
  1307     0177  00F1               	movwf	SendToSegment@segment
  1308     0178  3000               	movlw	0
  1309     0179  00F2               	movwf	SendToSegment@segment+1
  1310     017A  3002               	movlw	2
  1311     017B  00F3               	movwf	SendToSegment@data
  1312     017C  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  1313     0181                     l1536:
  1314                           
  1315                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  1316     0181  300C               	movlw	12
  1317     0182  00F1               	movwf	SendToSegment@segment
  1318     0183  3000               	movlw	0
  1319     0184  00F2               	movwf	SendToSegment@segment+1
  1320     0185  01F3               	clrf	SendToSegment@data
  1321     0186  0AF3               	incf	SendToSegment@data,f
  1322     0187  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  1323     018C                     l1538:
  1324                           
  1325                           ;matrix.c: 27:     SpiClearMatrix();
  1326     018C  120A  118A  20C2  120A  118A  	fcall	_SpiClearMatrix
  1327     0191                     l87:
  1328     0191  0008               	return
  1329     0192                     __end_of_MatrixInit:
  1330                           
  1331                           	psect	text5
  1332     034D                     __ptext5:	
  1333 ;; *************** function _ChangeOfCoordinates *****************
  1334 ;; Defined at:
  1335 ;;		line 19 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  _shapePositi    2   50[BANK0 ] PTR struct .
  1338 ;;		 -> main@shapePosition(4), 
  1339 ;;  _figure         1   52[BANK0 ] PTR unsigned char 
  1340 ;;		 -> main@square_1(3), 
  1341 ;;  _countElemnt    2   53[BANK0 ] int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  i               2   60[BANK0 ] int 
  1344 ;;  step            2   58[BANK0 ] int 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       5       0       0       0
  1355 ;;      Locals:         0       4       0       0       0
  1356 ;;      Temps:          0       3       0       0       0
  1357 ;;      Totals:         0      12       0       0       0
  1358 ;;Total ram usage:       12 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 4
  1361 ;; This function calls:
  1362 ;;		_MovieShape
  1363 ;;		_Rotate
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     034D                     _ChangeOfCoordinates:	
  1370                           ;psect for function _ChangeOfCoordinates
  1371                           
  1372     034D                     l1486:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _ChangeOfCoordinates: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1375                           
  1376                           
  1377                           ;main.c: 20:     const unsigned long delay = 150;;main.c: 21:     int step = 0;
  1378     034D  1283               	bcf	3,5	;RP0=0, select bank0
  1379     034E  1303               	bcf	3,6	;RP1=0, select bank0
  1380     034F  01DA               	clrf	ChangeOfCoordinates@step
  1381     0350  01DB               	clrf	ChangeOfCoordinates@step+1
  1382     0351                     l19:	
  1383                           ;main.c: 22:         do{
  1384                           
  1385                           
  1386                           ;main.c: 23:             for(int i = 0; i < 5; i++){
  1387     0351  1283               	bcf	3,5	;RP0=0, select bank0
  1388     0352  1303               	bcf	3,6	;RP1=0, select bank0
  1389     0353  01DC               	clrf	ChangeOfCoordinates@i
  1390     0354  01DD               	clrf	ChangeOfCoordinates@i+1
  1391     0355  2B9A               	goto	l1502
  1392     0356                     l1492:
  1393                           
  1394                           ;main.c: 26:                         MovieShape(right, _shapePosition, _figure, _countEl
      +                          emntArray);
  1395     0356  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1396     0357  00A4               	movwf	MovieShape@_shapePosition
  1397     0358  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1398     0359  00A5               	movwf	MovieShape@_shapePosition+1
  1399     035A  0854               	movf	ChangeOfCoordinates@_figure,w
  1400     035B  00A6               	movwf	MovieShape@shapeArray
  1401     035C  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1402     035D  00A8               	movwf	MovieShape@countElemntArray+1
  1403     035E  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1404     035F  00A7               	movwf	MovieShape@countElemntArray
  1405     0360  3003               	movlw	3
  1406     0361  120A  118A  2270  120A  118A  	fcall	_MovieShape
  1407                           
  1408                           ;main.c: 28:                         break;
  1409     0366  2BAF               	goto	l1504
  1410     0367                     l1494:
  1411                           
  1412                           ;main.c: 30:                         MovieShape(down, _shapePosition, _figure, _countEle
      +                          mntArray);
  1413     0367  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1414     0368  00A4               	movwf	MovieShape@_shapePosition
  1415     0369  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1416     036A  00A5               	movwf	MovieShape@_shapePosition+1
  1417     036B  0854               	movf	ChangeOfCoordinates@_figure,w
  1418     036C  00A6               	movwf	MovieShape@shapeArray
  1419     036D  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1420     036E  00A8               	movwf	MovieShape@countElemntArray+1
  1421     036F  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1422     0370  00A7               	movwf	MovieShape@countElemntArray
  1423     0371  3000               	movlw	0
  1424     0372  120A  118A  2270  120A  118A  	fcall	_MovieShape
  1425                           
  1426                           ;main.c: 32:                         break;
  1427     0377  2BAF               	goto	l1504
  1428     0378                     l1496:
  1429                           
  1430                           ;main.c: 34:                         MovieShape(left, _shapePosition, _figure, _countEle
      +                          mntArray);
  1431     0378  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1432     0379  00A4               	movwf	MovieShape@_shapePosition
  1433     037A  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1434     037B  00A5               	movwf	MovieShape@_shapePosition+1
  1435     037C  0854               	movf	ChangeOfCoordinates@_figure,w
  1436     037D  00A6               	movwf	MovieShape@shapeArray
  1437     037E  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1438     037F  00A8               	movwf	MovieShape@countElemntArray+1
  1439     0380  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1440     0381  00A7               	movwf	MovieShape@countElemntArray
  1441     0382  3002               	movlw	2
  1442     0383  120A  118A  2270  120A  118A  	fcall	_MovieShape
  1443                           
  1444                           ;main.c: 36:                         break;
  1445     0388  2BAF               	goto	l1504
  1446     0389                     l1498:
  1447                           
  1448                           ;main.c: 38:                         MovieShape(up, _shapePosition, _figure, _countElemn
      +                          tArray);
  1449     0389  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1450     038A  00A4               	movwf	MovieShape@_shapePosition
  1451     038B  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1452     038C  00A5               	movwf	MovieShape@_shapePosition+1
  1453     038D  0854               	movf	ChangeOfCoordinates@_figure,w
  1454     038E  00A6               	movwf	MovieShape@shapeArray
  1455     038F  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1456     0390  00A8               	movwf	MovieShape@countElemntArray+1
  1457     0391  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1458     0392  00A7               	movwf	MovieShape@countElemntArray
  1459     0393  3001               	movlw	1
  1460     0394  120A  118A  2270  120A  118A  	fcall	_MovieShape
  1461                           
  1462                           ;main.c: 40:                         break;
  1463     0399  2BAF               	goto	l1504
  1464     039A                     l1502:
  1465                           
  1466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1467                           ; Switch size 1, requested type "simple"
  1468                           ; Number of cases is 1, Range of values is 0 to 0
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte            4     3 (average)
  1472                           ; direct_byte           11     8 (fixed)
  1473                           ; jumptable            260     6 (fixed)
  1474                           ;	Chosen strategy is simple_byte
  1475     039A  1283               	bcf	3,5	;RP0=0, select bank0
  1476     039B  1303               	bcf	3,6	;RP1=0, select bank0
  1477     039C  085B               	movf	ChangeOfCoordinates@step+1,w
  1478     039D  3A00               	xorlw	0	; case 0
  1479     039E  1903               	skipnz
  1480     039F  2BA1               	goto	l1604
  1481     03A0  2BAF               	goto	l1504
  1482     03A1                     l1604:
  1483                           
  1484                           ; Switch size 1, requested type "simple"
  1485                           ; Number of cases is 4, Range of values is 0 to 3
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte           13     7 (average)
  1489                           ; direct_byte           20     8 (fixed)
  1490                           ; jumptable            260     6 (fixed)
  1491                           ;	Chosen strategy is simple_byte
  1492     03A1  085A               	movf	ChangeOfCoordinates@step,w
  1493     03A2  3A00               	xorlw	0	; case 0
  1494     03A3  1903               	skipnz
  1495     03A4  2B56               	goto	l1492
  1496     03A5  3A01               	xorlw	1	; case 1
  1497     03A6  1903               	skipnz
  1498     03A7  2B67               	goto	l1494
  1499     03A8  3A03               	xorlw	3	; case 2
  1500     03A9  1903               	skipnz
  1501     03AA  2B78               	goto	l1496
  1502     03AB  3A01               	xorlw	1	; case 3
  1503     03AC  1903               	skipnz
  1504     03AD  2B89               	goto	l1498
  1505     03AE  2BAF               	goto	l1504
  1506     03AF                     l1504:
  1507                           
  1508                           ;main.c: 42:                 _delay((unsigned long)((delay)*(16000000/4000.0)));
  1509     03AF  3004               	movlw	4
  1510     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1511     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1512     03B2  00D9               	movwf	??_ChangeOfCoordinates+2
  1513     03B3  300C               	movlw	12
  1514     03B4  00D8               	movwf	??_ChangeOfCoordinates+1
  1515     03B5  3033               	movlw	51
  1516     03B6  00D7               	movwf	??_ChangeOfCoordinates
  1517     03B7                     u937:
  1518     03B7  0BD7               	decfsz	??_ChangeOfCoordinates,f
  1519     03B8  2BB7               	goto	u937
  1520     03B9  0BD8               	decfsz	??_ChangeOfCoordinates+1,f
  1521     03BA  2BB7               	goto	u937
  1522     03BB  0BD9               	decfsz	??_ChangeOfCoordinates+2,f
  1523     03BC  2BB7               	goto	u937
  1524                           
  1525                           ;main.c: 44:             }
  1526     03BD  3001               	movlw	1
  1527     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1528     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1529     03C0  07DC               	addwf	ChangeOfCoordinates@i,f
  1530     03C1  1803               	skipnc
  1531     03C2  0ADD               	incf	ChangeOfCoordinates@i+1,f
  1532     03C3  3000               	movlw	0
  1533     03C4  07DD               	addwf	ChangeOfCoordinates@i+1,f
  1534     03C5                     l1506:
  1535     03C5  085D               	movf	ChangeOfCoordinates@i+1,w
  1536     03C6  3A80               	xorlw	128
  1537     03C7  00FF               	movwf	btemp+1
  1538     03C8  3080               	movlw	128
  1539     03C9  027F               	subwf	btemp+1,w
  1540     03CA  1D03               	skipz
  1541     03CB  2BCE               	goto	u905
  1542     03CC  3005               	movlw	5
  1543     03CD  025C               	subwf	ChangeOfCoordinates@i,w
  1544     03CE                     u905:
  1545     03CE  1C03               	skipc
  1546     03CF  2BD1               	goto	u901
  1547     03D0  2BD2               	goto	u900
  1548     03D1                     u901:
  1549     03D1  2B9A               	goto	l1502
  1550     03D2                     u900:
  1551     03D2                     l1508:
  1552                           
  1553                           ;main.c: 45:             Rotate(_figure, _countElemntArray);
  1554     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1555     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1556     03D4  0854               	movf	ChangeOfCoordinates@_figure,w
  1557     03D5  00BE               	movwf	Rotate@array_
  1558     03D6  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1559     03D7  00C0               	movwf	Rotate@length+1
  1560     03D8  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1561     03D9  00BF               	movwf	Rotate@length
  1562     03DA  120A  118A  24A7  120A  118A  	fcall	_Rotate
  1563     03DF                     l1510:
  1564                           
  1565                           ;main.c: 46:             step++;
  1566     03DF  3001               	movlw	1
  1567     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1568     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1569     03E2  07DA               	addwf	ChangeOfCoordinates@step,f
  1570     03E3  1803               	skipnc
  1571     03E4  0ADB               	incf	ChangeOfCoordinates@step+1,f
  1572     03E5  3000               	movlw	0
  1573     03E6  07DB               	addwf	ChangeOfCoordinates@step+1,f
  1574     03E7                     l1512:
  1575                           
  1576                           ;main.c: 47:         } while(step < 4);
  1577     03E7  085B               	movf	ChangeOfCoordinates@step+1,w
  1578     03E8  3A80               	xorlw	128
  1579     03E9  00FF               	movwf	btemp+1
  1580     03EA  3080               	movlw	128
  1581     03EB  027F               	subwf	btemp+1,w
  1582     03EC  1D03               	skipz
  1583     03ED  2BF0               	goto	u915
  1584     03EE  3004               	movlw	4
  1585     03EF  025A               	subwf	ChangeOfCoordinates@step,w
  1586     03F0                     u915:
  1587     03F0  1C03               	skipc
  1588     03F1  2BF3               	goto	u911
  1589     03F2  2BF4               	goto	u910
  1590     03F3                     u911:
  1591     03F3  2B51               	goto	l19
  1592     03F4                     u910:
  1593     03F4                     l29:
  1594     03F4  0008               	return
  1595     03F5                     __end_of_ChangeOfCoordinates:
  1596                           
  1597                           	psect	text6
  1598     04A7                     __ptext6:	
  1599 ;; *************** function _Rotate *****************
  1600 ;; Defined at:
  1601 ;;		line 55 in file "shape.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  array_          1   30[BANK0 ] PTR unsigned char 
  1604 ;;		 -> main@square_1(3), 
  1605 ;;  length          2   31[BANK0 ] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  i               2   42[BANK0 ] int 
  1608 ;;  x               2   40[BANK0 ] int 
  1609 ;;  y               2   44[BANK0 ] int 
  1610 ;;  _i              2   48[BANK0 ] int 
  1611 ;;  res             2   46[BANK0 ] PTR unsigned char 
  1612 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       3       0       0       0
  1623 ;;      Locals:         0      10       0       0       0
  1624 ;;      Temps:          0       7       0       0       0
  1625 ;;      Totals:         0      20       0       0       0
  1626 ;;Total ram usage:       20 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 3
  1629 ;; This function calls:
  1630 ;;		_calloc
  1631 ;;		_free
  1632 ;; This function is called by:
  1633 ;;		_ChangeOfCoordinates
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637     04A7                     _Rotate:	
  1638                           ;psect for function _Rotate
  1639                           
  1640     04A7                     l1446:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _Rotate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1643                           
  1644                           
  1645                           ;shape.c: 57:     char * res = calloc((size_t)length, sizeof(char));
  1646     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  1647     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  1648     04A9  0840               	movf	Rotate@length+1,w
  1649     04AA  00B9               	movwf	calloc@nmemb+1
  1650     04AB  083F               	movf	Rotate@length,w
  1651     04AC  00B8               	movwf	calloc@nmemb
  1652     04AD  3001               	movlw	1
  1653     04AE  00BA               	movwf	calloc@size
  1654     04AF  3000               	movlw	0
  1655     04B0  00BB               	movwf	calloc@size+1
  1656     04B1  120A  118A  2192  120A  118A  	fcall	_calloc
  1657     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1658     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1659     04B8  0838               	movf	?_calloc,w
  1660     04B9  00CE               	movwf	Rotate@res
  1661     04BA  0839               	movf	?_calloc+1,w
  1662     04BB  00CF               	movwf	Rotate@res+1
  1663     04BC                     l1448:
  1664                           
  1665                           ;shape.c: 59:     if (res){
  1666     04BC  084E               	movf	Rotate@res,w
  1667     04BD  044F               	iorwf	Rotate@res+1,w
  1668     04BE  1903               	btfsc	3,2
  1669     04BF  2CC1               	goto	u821
  1670     04C0  2CC2               	goto	u820
  1671     04C1                     u821:
  1672     04C1  2D58               	goto	l1484
  1673     04C2                     u820:
  1674     04C2                     l1450:
  1675                           
  1676                           ;shape.c: 60:         for(int _i = length - 1; _i >= 0; _i--){
  1677     04C2  083F               	movf	Rotate@length,w
  1678     04C3  3EFF               	addlw	255
  1679     04C4  00D0               	movwf	Rotate@_i
  1680     04C5  0840               	movf	Rotate@length+1,w
  1681     04C6  1803               	skipnc
  1682     04C7  3E01               	addlw	1
  1683     04C8  3EFF               	addlw	255
  1684     04C9  00D1               	movwf	Rotate@_i+1
  1685     04CA                     l1452:
  1686     04CA  1FD1               	btfss	Rotate@_i+1,7
  1687     04CB  2CCD               	goto	u831
  1688     04CC  2CCE               	goto	u830
  1689     04CD                     u831:
  1690     04CD  2CCF               	goto	l1456
  1691     04CE                     u830:
  1692     04CE  2D22               	goto	l1476
  1693     04CF                     l1456:
  1694                           
  1695                           ;shape.c: 61:             for(int i = length - 1, x = 0; i >= 0; i--, x++){
  1696     04CF  083F               	movf	Rotate@length,w
  1697     04D0  3EFF               	addlw	255
  1698     04D1  00CA               	movwf	Rotate@i
  1699     04D2  0840               	movf	Rotate@length+1,w
  1700     04D3  1803               	skipnc
  1701     04D4  3E01               	addlw	1
  1702     04D5  3EFF               	addlw	255
  1703     04D6  00CB               	movwf	Rotate@i+1
  1704     04D7                     l1458:
  1705     04D7  01C8               	clrf	Rotate@x
  1706     04D8  01C9               	clrf	Rotate@x+1
  1707     04D9                     l1460:
  1708     04D9  1FCB               	btfss	Rotate@i+1,7
  1709     04DA  2CDC               	goto	u841
  1710     04DB  2CDD               	goto	u840
  1711     04DC                     u841:
  1712     04DC  2CDE               	goto	l1464
  1713     04DD                     u840:
  1714     04DD  2D1B               	goto	l1472
  1715     04DE                     l1464:
  1716                           
  1717                           ;shape.c: 62:                 res[_i] |= ((array_[x] >> _i ) & 1) << i;
  1718     04DE  0848               	movf	Rotate@x,w
  1719     04DF  073E               	addwf	Rotate@array_,w
  1720     04E0  00C1               	movwf	??_Rotate
  1721     04E1  0841               	movf	??_Rotate,w
  1722     04E2  0084               	movwf	4
  1723     04E3  1383               	bcf	3,7	;select IRP bank0
  1724     04E4  0800               	movf	0,w
  1725     04E5  00C2               	movwf	??_Rotate+1
  1726     04E6  0A50               	incf	Rotate@_i,w
  1727     04E7  2CEA               	goto	u854
  1728     04E8                     u855:
  1729     04E8  1003               	clrc
  1730     04E9  0CC2               	rrf	??_Rotate+1,f
  1731     04EA                     u854:
  1732     04EA  3EFF               	addlw	-1
  1733     04EB  1D03               	skipz
  1734     04EC  2CE8               	goto	u855
  1735     04ED  0842               	movf	??_Rotate+1,w
  1736     04EE  3901               	andlw	1
  1737     04EF  00C3               	movwf	??_Rotate+2
  1738     04F0  0A4A               	incf	Rotate@i,w
  1739     04F1  2CF4               	goto	u864
  1740     04F2                     u865:
  1741     04F2  1003               	clrc
  1742     04F3  0DC3               	rlf	??_Rotate+2,f
  1743     04F4                     u864:
  1744     04F4  3EFF               	addlw	-1
  1745     04F5  1D03               	skipz
  1746     04F6  2CF2               	goto	u865
  1747     04F7  0843               	movf	??_Rotate+2,w
  1748     04F8  00C4               	movwf	??_Rotate+3
  1749     04F9  0850               	movf	Rotate@_i,w
  1750     04FA  074E               	addwf	Rotate@res,w
  1751     04FB  00C6               	movwf	??_Rotate+5
  1752     04FC  084F               	movf	Rotate@res+1,w
  1753     04FD  00C5               	movwf	??_Rotate+4
  1754     04FE  1803               	skipnc
  1755     04FF  0AC5               	incf	??_Rotate+4,f
  1756     0500  1FD0               	btfss	Rotate@_i,7
  1757     0501  2D03               	goto	u870
  1758     0502  03C5               	decf	??_Rotate+4,f
  1759     0503                     u870:
  1760     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1761     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1762     0505  0845               	movf	??_Rotate+4,w
  1763     0506  00C7               	movwf	??_Rotate+6
  1764     0507  0846               	movf	??_Rotate+5,w
  1765     0508  0084               	movwf	4
  1766     0509  1783               	bsf	3,7
  1767     050A  1C47               	btfss	??_Rotate+6,0
  1768     050B  1383               	bcf	3,7
  1769     050C  0844               	movf	??_Rotate+3,w
  1770     050D  0480               	iorwf	0,f
  1771     050E                     l1466:
  1772                           
  1773                           ;shape.c: 63:             }
  1774     050E  30FF               	movlw	255
  1775     050F  07CA               	addwf	Rotate@i,f
  1776     0510  1803               	skipnc
  1777     0511  0ACB               	incf	Rotate@i+1,f
  1778     0512  30FF               	movlw	255
  1779     0513  07CB               	addwf	Rotate@i+1,f
  1780     0514                     l1468:
  1781     0514  3001               	movlw	1
  1782     0515  07C8               	addwf	Rotate@x,f
  1783     0516  1803               	skipnc
  1784     0517  0AC9               	incf	Rotate@x+1,f
  1785     0518  3000               	movlw	0
  1786     0519  07C9               	addwf	Rotate@x+1,f
  1787     051A  2CD9               	goto	l1460
  1788     051B                     l1472:
  1789                           
  1790                           ;shape.c: 64:         }
  1791     051B  30FF               	movlw	255
  1792     051C  07D0               	addwf	Rotate@_i,f
  1793     051D  1803               	skipnc
  1794     051E  0AD1               	incf	Rotate@_i+1,f
  1795     051F  30FF               	movlw	255
  1796     0520  07D1               	addwf	Rotate@_i+1,f
  1797     0521  2CCA               	goto	l1452
  1798     0522                     l1476:
  1799                           
  1800                           ;shape.c: 66:         for(int y = 0; y < length; y++){
  1801     0522  01CC               	clrf	Rotate@y
  1802     0523  01CD               	clrf	Rotate@y+1
  1803     0524  2D4A               	goto	l1482
  1804     0525                     l1478:
  1805                           
  1806                           ;shape.c: 67:             array_[y] = res[y];
  1807     0525  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0526  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0527  084C               	movf	Rotate@y,w
  1810     0528  074E               	addwf	Rotate@res,w
  1811     0529  00C2               	movwf	??_Rotate+1
  1812     052A  084F               	movf	Rotate@res+1,w
  1813     052B  00C1               	movwf	??_Rotate
  1814     052C  1803               	skipnc
  1815     052D  0AC1               	incf	??_Rotate,f
  1816     052E  1FCC               	btfss	Rotate@y,7
  1817     052F  2D31               	goto	u880
  1818     0530  03C1               	decf	??_Rotate,f
  1819     0531                     u880:
  1820     0531  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0532  1303               	bcf	3,6	;RP1=0, select bank0
  1822     0533  0841               	movf	??_Rotate,w
  1823     0534  00C3               	movwf	??_Rotate+2
  1824     0535  0842               	movf	??_Rotate+1,w
  1825     0536  0084               	movwf	4
  1826     0537  1783               	bsf	3,7
  1827     0538  1C43               	btfss	??_Rotate+2,0
  1828     0539  1383               	bcf	3,7
  1829     053A  0800               	movf	0,w
  1830     053B  00C4               	movwf	??_Rotate+3
  1831     053C  084C               	movf	Rotate@y,w
  1832     053D  073E               	addwf	Rotate@array_,w
  1833     053E  00C5               	movwf	??_Rotate+4
  1834     053F  0845               	movf	??_Rotate+4,w
  1835     0540  0084               	movwf	4
  1836     0541  0844               	movf	??_Rotate+3,w
  1837     0542  1383               	bcf	3,7	;select IRP bank0
  1838     0543  0080               	movwf	0
  1839     0544                     l1480:
  1840                           
  1841                           ;shape.c: 68:         }
  1842     0544  3001               	movlw	1
  1843     0545  07CC               	addwf	Rotate@y,f
  1844     0546  1803               	skipnc
  1845     0547  0ACD               	incf	Rotate@y+1,f
  1846     0548  3000               	movlw	0
  1847     0549  07CD               	addwf	Rotate@y+1,f
  1848     054A                     l1482:
  1849     054A  084D               	movf	Rotate@y+1,w
  1850     054B  3A80               	xorlw	128
  1851     054C  00C1               	movwf	??_Rotate
  1852     054D  0840               	movf	Rotate@length+1,w
  1853     054E  3A80               	xorlw	128
  1854     054F  0241               	subwf	??_Rotate,w
  1855     0550  1D03               	skipz
  1856     0551  2D54               	goto	u895
  1857     0552  083F               	movf	Rotate@length,w
  1858     0553  024C               	subwf	Rotate@y,w
  1859     0554                     u895:
  1860     0554  1C03               	skipc
  1861     0555  2D57               	goto	u891
  1862     0556  2D58               	goto	u890
  1863     0557                     u891:
  1864     0557  2D25               	goto	l1478
  1865     0558                     u890:
  1866     0558                     l1484:
  1867                           
  1868                           ;shape.c: 70:     free(res);
  1869     0558  1283               	bcf	3,5	;RP0=0, select bank0
  1870     0559  1303               	bcf	3,6	;RP1=0, select bank0
  1871     055A  084E               	movf	Rotate@res,w
  1872     055B  00F0               	movwf	free@ptr
  1873     055C  084F               	movf	Rotate@res+1,w
  1874     055D  00F1               	movwf	free@ptr+1
  1875     055E  120A  118A  2564  120A  118A  	fcall	_free
  1876     0563                     l140:
  1877     0563  0008               	return
  1878     0564                     __end_of_Rotate:
  1879                           
  1880                           	psect	text7
  1881     0564                     __ptext7:	
  1882 ;; *************** function _free *****************
  1883 ;; Defined at:
  1884 ;;		line 67 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  ptr             2    0[COMMON] PTR void 
  1887 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  c               2   10[COMMON] PTR struct chunk
  1890 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1891 ;;  cptr            2    8[COMMON] PTR unsigned char 
  1892 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         2       0       0       0       0
  1903 ;;      Locals:         4       0       0       0       0
  1904 ;;      Temps:          6       0       0       0       0
  1905 ;;      Totals:        12       0       0       0       0
  1906 ;;Total ram usage:       12 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_Rotate
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     0564                     _free:	
  1916                           ;psect for function _free
  1917                           
  1918     0564                     l1392:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _free: [wreg-fsr0h+status,2+status,0+btemp+1]
  1921                           
  1922     0564  0870               	movf	free@ptr,w
  1923     0565  00F8               	movwf	free@cptr
  1924     0566  0871               	movf	free@ptr+1,w
  1925     0567  00F9               	movwf	free@cptr+1
  1926     0568  0870               	movf	free@ptr,w
  1927     0569  0471               	iorwf	free@ptr+1,w
  1928     056A  1D03               	btfss	3,2
  1929     056B  2D6D               	goto	u781
  1930     056C  2D6E               	goto	u780
  1931     056D                     u781:
  1932     056D  2D6F               	goto	l1396
  1933     056E                     u780:
  1934     056E  2E51               	goto	l719
  1935     056F                     l1396:
  1936     056F  30FE               	movlw	254
  1937     0570  00F2               	movwf	??_free
  1938     0571  0872               	movf	??_free,w
  1939     0572  0778               	addwf	free@cptr,w
  1940     0573  00FA               	movwf	free@c
  1941     0574  0879               	movf	free@cptr+1,w
  1942     0575  00F3               	movwf	??_free+1
  1943     0576  1803               	skipnc
  1944     0577  0AF3               	incf	??_free+1,f
  1945     0578  1BF2               	btfsc	??_free,7
  1946     0579  03F3               	decf	??_free+1,f
  1947     057A  0873               	movf	??_free+1,w
  1948     057B  00FB               	movwf	free@c+1
  1949     057C  1283               	bcf	3,5	;RP0=0, select bank0
  1950     057D  1303               	bcf	3,6	;RP1=0, select bank0
  1951     057E  086D               	movf	___freelist,w
  1952     057F  046E               	iorwf	___freelist+1,w
  1953     0580  1903               	btfsc	3,2
  1954     0581  2D83               	goto	u791
  1955     0582  2D84               	goto	u790
  1956     0583                     u791:
  1957     0583  2E40               	goto	l1418
  1958     0584                     u790:
  1959     0584                     l1398:
  1960     0584  087A               	movf	free@c,w
  1961     0585  0084               	movwf	4
  1962     0586  1783               	bsf	3,7
  1963     0587  1C7B               	btfss	free@c+1,0
  1964     0588  1383               	bcf	3,7
  1965     0589  0800               	movf	0,w
  1966     058A  0778               	addwf	free@cptr,w
  1967     058B  00F2               	movwf	??_free
  1968     058C  0879               	movf	free@cptr+1,w
  1969     058D  1803               	skipnc
  1970     058E  3E01               	addlw	1
  1971     058F  00F3               	movwf	??_free+1
  1972     0590  0873               	movf	??_free+1,w
  1973     0591  066E               	xorwf	___freelist+1,w
  1974     0592  1D03               	skipz
  1975     0593  2D96               	goto	u805
  1976     0594  0872               	movf	??_free,w
  1977     0595  066D               	xorwf	___freelist,w
  1978     0596                     u805:
  1979     0596  1D03               	skipz
  1980     0597  2D99               	goto	u801
  1981     0598  2D9A               	goto	u800
  1982     0599                     u801:
  1983     0599  2DE6               	goto	l1410
  1984     059A                     u800:
  1985     059A                     l1400:
  1986     059A  086D               	movf	___freelist,w
  1987     059B  3E02               	addlw	2
  1988     059C  00F2               	movwf	??_free
  1989     059D  086E               	movf	___freelist+1,w
  1990     059E  1803               	skipnc
  1991     059F  3E01               	addlw	1
  1992     05A0  3E00               	addlw	0
  1993     05A1  00F3               	movwf	??_free+1
  1994     05A2  0872               	movf	??_free,w
  1995     05A3  0084               	movwf	4
  1996     05A4  1783               	bsf	3,7
  1997     05A5  1C73               	btfss	??_free+1,0
  1998     05A6  1383               	bcf	3,7
  1999     05A7  0800               	movf	0,w
  2000     05A8  00F4               	movwf	??_free+2
  2001     05A9  0A84               	incf	4,f
  2002     05AA  0800               	movf	0,w
  2003     05AB  00F5               	movwf	??_free+3
  2004     05AC  087A               	movf	free@c,w
  2005     05AD  3E02               	addlw	2
  2006     05AE  00F6               	movwf	??_free+4
  2007     05AF  087B               	movf	free@c+1,w
  2008     05B0  1803               	skipnc
  2009     05B1  3E01               	addlw	1
  2010     05B2  3E00               	addlw	0
  2011     05B3  00F7               	movwf	??_free+5
  2012     05B4  0876               	movf	??_free+4,w
  2013     05B5  0084               	movwf	4
  2014     05B6  1783               	bsf	3,7
  2015     05B7  1C77               	btfss	??_free+5,0
  2016     05B8  1383               	bcf	3,7
  2017     05B9  0874               	movf	??_free+2,w
  2018     05BA  0080               	movwf	0
  2019     05BB  0875               	movf	??_free+3,w
  2020     05BC  0A84               	incf	4,f
  2021     05BD  0080               	movwf	0
  2022     05BE  0384               	decf	4,f
  2023     05BF                     l1402:
  2024     05BF  086D               	movf	___freelist,w
  2025     05C0  0084               	movwf	4
  2026     05C1  1783               	bsf	3,7
  2027     05C2  1C6E               	btfss	___freelist+1,0
  2028     05C3  1383               	bcf	3,7
  2029     05C4  0800               	movf	0,w
  2030     05C5  00F2               	movwf	??_free
  2031     05C6  0A84               	incf	4,f
  2032     05C7  0800               	movf	0,w
  2033     05C8  00F3               	movwf	??_free+1
  2034     05C9  0872               	movf	??_free,w
  2035     05CA  3E02               	addlw	2
  2036     05CB  00F4               	movwf	??_free+2
  2037     05CC  0873               	movf	??_free+1,w
  2038     05CD  1803               	skipnc
  2039     05CE  3E01               	addlw	1
  2040     05CF  3E00               	addlw	0
  2041     05D0  00F5               	movwf	??_free+3
  2042     05D1  087A               	movf	free@c,w
  2043     05D2  0084               	movwf	4
  2044     05D3  1783               	bsf	3,7
  2045     05D4  1C7B               	btfss	free@c+1,0
  2046     05D5  1383               	bcf	3,7
  2047     05D6  0874               	movf	??_free+2,w
  2048     05D7  0780               	addwf	0,f
  2049     05D8  0F84               	incfsz	4,f
  2050     05D9  0800               	movf	0,w
  2051     05DA  1803               	skipnc
  2052     05DB  0A00               	incf	0,w
  2053     05DC  00FF               	movwf	btemp+1
  2054     05DD  0875               	movf	??_free+3,w
  2055     05DE  077F               	addwf	btemp+1,w
  2056     05DF  0080               	movwf	0
  2057     05E0  0384               	decf	4,f
  2058     05E1                     l1404:
  2059     05E1  087A               	movf	free@c,w
  2060     05E2  00ED               	movwf	___freelist
  2061     05E3  087B               	movf	free@c+1,w
  2062     05E4  00EE               	movwf	___freelist+1
  2063     05E5  2E51               	goto	l719
  2064     05E6                     l1410:
  2065     05E6  086D               	movf	___freelist,w
  2066     05E7  0084               	movwf	4
  2067     05E8  1783               	bsf	3,7
  2068     05E9  1C6E               	btfss	___freelist+1,0
  2069     05EA  1383               	bcf	3,7
  2070     05EB  0800               	movf	0,w
  2071     05EC  00F2               	movwf	??_free
  2072     05ED  0A84               	incf	4,f
  2073     05EE  0800               	movf	0,w
  2074     05EF  00F3               	movwf	??_free+1
  2075     05F0  0872               	movf	??_free,w
  2076     05F1  076D               	addwf	___freelist,w
  2077     05F2  00F4               	movwf	??_free+2
  2078     05F3  0873               	movf	??_free+1,w
  2079     05F4  1803               	skipnc
  2080     05F5  0A73               	incf	??_free+1,w
  2081     05F6  076E               	addwf	___freelist+1,w
  2082     05F7  00F5               	movwf	??_free+3
  2083     05F8  0874               	movf	??_free+2,w
  2084     05F9  3E02               	addlw	2
  2085     05FA  00F6               	movwf	??_free+4
  2086     05FB  0875               	movf	??_free+3,w
  2087     05FC  1803               	skipnc
  2088     05FD  3E01               	addlw	1
  2089     05FE  3E00               	addlw	0
  2090     05FF  00F7               	movwf	??_free+5
  2091     0600  087B               	movf	free@c+1,w
  2092     0601  0677               	xorwf	??_free+5,w
  2093     0602  1D03               	skipz
  2094     0603  2E06               	goto	u815
  2095     0604  087A               	movf	free@c,w
  2096     0605  0676               	xorwf	??_free+4,w
  2097     0606                     u815:
  2098     0606  1D03               	skipz
  2099     0607  2E09               	goto	u811
  2100     0608  2E0A               	goto	u810
  2101     0609                     u811:
  2102     0609  2E2D               	goto	l1416
  2103     060A                     u810:
  2104     060A                     l1412:
  2105     060A  087A               	movf	free@c,w
  2106     060B  0084               	movwf	4
  2107     060C  1783               	bsf	3,7
  2108     060D  1C7B               	btfss	free@c+1,0
  2109     060E  1383               	bcf	3,7
  2110     060F  0800               	movf	0,w
  2111     0610  00F2               	movwf	??_free
  2112     0611  0A84               	incf	4,f
  2113     0612  0800               	movf	0,w
  2114     0613  00F3               	movwf	??_free+1
  2115     0614  0872               	movf	??_free,w
  2116     0615  3E02               	addlw	2
  2117     0616  00F4               	movwf	??_free+2
  2118     0617  0873               	movf	??_free+1,w
  2119     0618  1803               	skipnc
  2120     0619  3E01               	addlw	1
  2121     061A  3E00               	addlw	0
  2122     061B  00F5               	movwf	??_free+3
  2123     061C  086D               	movf	___freelist,w
  2124     061D  0084               	movwf	4
  2125     061E  1783               	bsf	3,7
  2126     061F  1C6E               	btfss	___freelist+1,0
  2127     0620  1383               	bcf	3,7
  2128     0621  0874               	movf	??_free+2,w
  2129     0622  0780               	addwf	0,f
  2130     0623  0F84               	incfsz	4,f
  2131     0624  0800               	movf	0,w
  2132     0625  1803               	skipnc
  2133     0626  0A00               	incf	0,w
  2134     0627  00FF               	movwf	btemp+1
  2135     0628  0875               	movf	??_free+3,w
  2136     0629  077F               	addwf	btemp+1,w
  2137     062A  0080               	movwf	0
  2138     062B  0384               	decf	4,f
  2139     062C  2E51               	goto	l719
  2140     062D                     l1416:
  2141     062D  087A               	movf	free@c,w
  2142     062E  3E02               	addlw	2
  2143     062F  00F2               	movwf	??_free
  2144     0630  087B               	movf	free@c+1,w
  2145     0631  1803               	skipnc
  2146     0632  3E01               	addlw	1
  2147     0633  3E00               	addlw	0
  2148     0634  00F3               	movwf	??_free+1
  2149     0635  0872               	movf	??_free,w
  2150     0636  0084               	movwf	4
  2151     0637  1783               	bsf	3,7
  2152     0638  1C73               	btfss	??_free+1,0
  2153     0639  1383               	bcf	3,7
  2154     063A  086D               	movf	___freelist,w
  2155     063B  0080               	movwf	0
  2156     063C  0A84               	incf	4,f
  2157     063D  086E               	movf	___freelist+1,w
  2158     063E  0080               	movwf	0
  2159     063F  2DE1               	goto	l1404
  2160     0640                     l1418:
  2161     0640  087A               	movf	free@c,w
  2162     0641  3E02               	addlw	2
  2163     0642  00F2               	movwf	??_free
  2164     0643  087B               	movf	free@c+1,w
  2165     0644  1803               	skipnc
  2166     0645  3E01               	addlw	1
  2167     0646  3E00               	addlw	0
  2168     0647  00F3               	movwf	??_free+1
  2169     0648  0872               	movf	??_free,w
  2170     0649  0084               	movwf	4
  2171     064A  1783               	bsf	3,7
  2172     064B  1C73               	btfss	??_free+1,0
  2173     064C  1383               	bcf	3,7
  2174     064D  0180               	clrf	0
  2175     064E  0A84               	incf	4,f
  2176     064F  0180               	clrf	0
  2177     0650  2DE1               	goto	l1404
  2178     0651                     l719:
  2179     0651  0008               	return
  2180     0652                     __end_of_free:
  2181                           
  2182                           	psect	text8
  2183     0192                     __ptext8:	
  2184 ;; *************** function _calloc *****************
  2185 ;; Defined at:
  2186 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_calloc.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  nmemb           2   24[BANK0 ] unsigned int 
  2189 ;;  size            2   26[BANK0 ] unsigned int 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  new_ptr         2   28[BANK0 ] PTR void 
  2192 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2   24[BANK0 ] PTR void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       4       0       0       0
  2203 ;;      Locals:         0       2       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         0       6       0       0       0
  2206 ;;Total ram usage:        6 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 2
  2209 ;; This function calls:
  2210 ;;		___wmul
  2211 ;;		_malloc
  2212 ;;		_memset
  2213 ;; This function is called by:
  2214 ;;		_Rotate
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218     0192                     _calloc:	
  2219                           ;psect for function _calloc
  2220                           
  2221     0192                     l1382:	
  2222                           ;incstack = 0
  2223                           ; Regs used in _calloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2224                           
  2225     0192  1283               	bcf	3,5	;RP0=0, select bank0
  2226     0193  1303               	bcf	3,6	;RP1=0, select bank0
  2227     0194  0839               	movf	calloc@nmemb+1,w
  2228     0195  00F1               	movwf	___wmul@multiplier+1
  2229     0196  0838               	movf	calloc@nmemb,w
  2230     0197  00F0               	movwf	___wmul@multiplier
  2231     0198  083B               	movf	calloc@size+1,w
  2232     0199  00F3               	movwf	___wmul@multiplicand+1
  2233     019A  083A               	movf	calloc@size,w
  2234     019B  00F2               	movwf	___wmul@multiplicand
  2235     019C  120A  118A  212D  120A  118A  	fcall	___wmul
  2236     01A1  0871               	movf	?___wmul+1,w
  2237     01A2  00F9               	movwf	malloc@n+1
  2238     01A3  0870               	movf	?___wmul,w
  2239     01A4  00F8               	movwf	malloc@n
  2240     01A5  120A  118A  23F5  120A  118A  	fcall	_malloc
  2241     01AA  0878               	movf	?_malloc,w
  2242     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2243     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2244     01AD  00BC               	movwf	calloc@new_ptr
  2245     01AE  0879               	movf	?_malloc+1,w
  2246     01AF  00BD               	movwf	calloc@new_ptr+1
  2247     01B0                     l1384:
  2248     01B0  083C               	movf	calloc@new_ptr,w
  2249     01B1  043D               	iorwf	calloc@new_ptr+1,w
  2250     01B2  1903               	btfsc	3,2
  2251     01B3  29B5               	goto	u771
  2252     01B4  29B6               	goto	u770
  2253     01B5                     u771:
  2254     01B5  29D3               	goto	l1388
  2255     01B6                     u770:
  2256     01B6                     l1386:
  2257     01B6  083C               	movf	calloc@new_ptr,w
  2258     01B7  00F6               	movwf	memset@dest
  2259     01B8  083D               	movf	calloc@new_ptr+1,w
  2260     01B9  00F7               	movwf	memset@dest+1
  2261     01BA  3000               	movlw	0
  2262     01BB  00F8               	movwf	memset@c
  2263     01BC  00F9               	movwf	memset@c+1
  2264     01BD  0839               	movf	calloc@nmemb+1,w
  2265     01BE  00F1               	movwf	___wmul@multiplier+1
  2266     01BF  0838               	movf	calloc@nmemb,w
  2267     01C0  00F0               	movwf	___wmul@multiplier
  2268     01C1  083B               	movf	calloc@size+1,w
  2269     01C2  00F3               	movwf	___wmul@multiplicand+1
  2270     01C3  083A               	movf	calloc@size,w
  2271     01C4  00F2               	movwf	___wmul@multiplicand
  2272     01C5  120A  118A  212D  120A  118A  	fcall	___wmul
  2273     01CA  0871               	movf	?___wmul+1,w
  2274     01CB  00FB               	movwf	memset@n+1
  2275     01CC  0870               	movf	?___wmul,w
  2276     01CD  00FA               	movwf	memset@n
  2277     01CE  120A  118A  210E  120A  118A  	fcall	_memset
  2278     01D3                     l1388:
  2279     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2280     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2281     01D5  083C               	movf	calloc@new_ptr,w
  2282     01D6  00B8               	movwf	?_calloc
  2283     01D7  083D               	movf	calloc@new_ptr+1,w
  2284     01D8  00B9               	movwf	?_calloc+1
  2285     01D9                     l696:
  2286     01D9  0008               	return
  2287     01DA                     __end_of_calloc:
  2288                           
  2289                           	psect	text9
  2290     010E                     __ptext9:	
  2291 ;; *************** function _memset *****************
  2292 ;; Defined at:
  2293 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  dest            2    6[COMMON] PTR void 
  2296 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2297 ;;  c               2    8[COMMON] int 
  2298 ;;  n               2   10[COMMON] unsigned int 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  p               2   12[COMMON] PTR unsigned char 
  2301 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    6[COMMON] PTR void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         6       0       0       0       0
  2312 ;;      Locals:         2       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0
  2314 ;;      Totals:         8       0       0       0       0
  2315 ;;Total ram usage:        8 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_calloc
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324     010E                     _memset:	
  2325                           ;psect for function _memset
  2326                           
  2327     010E                     l1348:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2330                           
  2331     010E  0876               	movf	memset@dest,w
  2332     010F  00FC               	movwf	memset@p
  2333     0110  0877               	movf	memset@dest+1,w
  2334     0111  00FD               	movwf	memset@p+1
  2335     0112  291E               	goto	l1354
  2336     0113                     l1350:
  2337     0113  087C               	movf	memset@p,w
  2338     0114  0084               	movwf	4
  2339     0115  1783               	bsf	3,7
  2340     0116  1C7D               	btfss	memset@p+1,0
  2341     0117  1383               	bcf	3,7
  2342     0118  0878               	movf	memset@c,w
  2343     0119  0080               	movwf	0
  2344     011A                     l1352:
  2345     011A  3001               	movlw	1
  2346     011B  07FC               	addwf	memset@p,f
  2347     011C  1803               	skipnc
  2348     011D  0AFD               	incf	memset@p+1,f
  2349     011E                     l1354:
  2350     011E  3001               	movlw	1
  2351     011F  02FA               	subwf	memset@n,f
  2352     0120  3000               	movlw	0
  2353     0121  1C03               	skipc
  2354     0122  03FB               	decf	memset@n+1,f
  2355     0123  02FB               	subwf	memset@n+1,f
  2356     0124  0A7A               	incf	memset@n,w
  2357     0125  1D03               	skipz
  2358     0126  292B               	goto	u731
  2359     0127  0A7B               	incf	memset@n+1,w
  2360     0128  1D03               	btfss	3,2
  2361     0129  292B               	goto	u731
  2362     012A  292C               	goto	u730
  2363     012B                     u731:
  2364     012B  2913               	goto	l1350
  2365     012C                     u730:
  2366     012C                     l772:
  2367     012C  0008               	return
  2368     012D                     __end_of_memset:
  2369                           
  2370                           	psect	text10
  2371     03F5                     __ptext10:	
  2372 ;; *************** function _malloc *****************
  2373 ;; Defined at:
  2374 ;;		line 16 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_malloc.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  n               2    8[COMMON] unsigned int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  sz              2   16[BANK0 ] PTR unsigned int 
  2379 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2380 ;;  new             2   22[BANK0 ] PTR unsigned char 
  2381 ;;		 -> __heap_hi(0), NULL(0), 
  2382 ;;  m               2   14[BANK0 ] unsigned int 
  2383 ;;  p               2   20[BANK0 ] PTR void 
  2384 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2385 ;;  size            2   18[BANK0 ] unsigned int 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2    8[COMMON] PTR void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         2       0       0       0       0
  2396 ;;      Locals:         0      10       0       0       0
  2397 ;;      Temps:          2       0       0       0       0
  2398 ;;      Totals:         4      10       0       0       0
  2399 ;;Total ram usage:       14 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		___expand_heap
  2404 ;;		___simple_search_fl
  2405 ;; This function is called by:
  2406 ;;		_calloc
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     03F5                     _malloc:	
  2411                           ;psect for function _malloc
  2412                           
  2413     03F5                     l1296:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2416                           
  2417     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2418     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2419     03F7  01B2               	clrf	malloc@size
  2420     03F8  01B3               	clrf	malloc@size+1
  2421     03F9                     l1298:
  2422     03F9  0878               	movf	malloc@n,w
  2423     03FA  0479               	iorwf	malloc@n+1,w
  2424     03FB  1D03               	btfss	3,2
  2425     03FC  2BFE               	goto	u661
  2426     03FD  2BFF               	goto	u660
  2427     03FE                     u661:
  2428     03FE  2C05               	goto	l739
  2429     03FF                     u660:
  2430     03FF                     l1300:
  2431     03FF  3001               	movlw	1
  2432     0400  07F8               	addwf	malloc@n,f
  2433     0401  1803               	skipnc
  2434     0402  0AF9               	incf	malloc@n+1,f
  2435     0403  3000               	movlw	0
  2436     0404  07F9               	addwf	malloc@n+1,f
  2437     0405                     l739:
  2438     0405  3000               	movlw	0
  2439     0406  0279               	subwf	malloc@n+1,w
  2440     0407  3002               	movlw	2
  2441     0408  1903               	skipnz
  2442     0409  0278               	subwf	malloc@n,w
  2443     040A  1803               	skipnc
  2444     040B  2C0D               	goto	u671
  2445     040C  2C0E               	goto	u670
  2446     040D                     u671:
  2447     040D  2C13               	goto	l1304
  2448     040E                     u670:
  2449     040E                     l1302:
  2450     040E  3002               	movlw	2
  2451     040F  00F8               	movwf	malloc@n
  2452     0410  3000               	movlw	0
  2453     0411  00F9               	movwf	malloc@n+1
  2454     0412  2C2B               	goto	l1312
  2455     0413                     l1304:
  2456     0413  0879               	movf	malloc@n+1,w
  2457     0414  00FB               	movwf	??_malloc+1
  2458     0415  0878               	movf	malloc@n,w
  2459     0416  00FA               	movwf	??_malloc
  2460     0417  09FA               	comf	??_malloc,f
  2461     0418  09FB               	comf	??_malloc+1,f
  2462     0419  3000               	movlw	0
  2463     041A  027B               	subwf	??_malloc+1,w
  2464     041B  3002               	movlw	2
  2465     041C  1903               	skipnz
  2466     041D  027A               	subwf	??_malloc,w
  2467     041E  1803               	skipnc
  2468     041F  2C21               	goto	u681
  2469     0420  2C22               	goto	u680
  2470     0421                     u681:
  2471     0421  2C2B               	goto	l1312
  2472     0422                     u680:
  2473     0422                     l1306:
  2474     0422  300C               	movlw	12
  2475     0423  1683               	bsf	3,5	;RP0=1, select bank1
  2476     0424  1303               	bcf	3,6	;RP1=0, select bank1
  2477     0425  00A4               	movwf	_errno^(0+128)
  2478     0426  3000               	movlw	0
  2479     0427  00A5               	movwf	(_errno^(0+128)+1)
  2480     0428                     l1308:
  2481     0428  01F8               	clrf	?_malloc
  2482     0429  01F9               	clrf	?_malloc+1
  2483     042A  2CA6               	goto	l743
  2484     042B                     l1312:
  2485     042B                     l1314:
  2486     042B  0879               	movf	malloc@n+1,w
  2487     042C  00F1               	movwf	___simple_search_fl@n+1
  2488     042D  0878               	movf	malloc@n,w
  2489     042E  00F0               	movwf	___simple_search_fl@n
  2490     042F  120A  118A  2652  120A  118A  	fcall	___simple_search_fl
  2491     0434  0870               	movf	?___simple_search_fl,w
  2492     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2493     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2494     0437  00B4               	movwf	malloc@p
  2495     0438  0871               	movf	?___simple_search_fl+1,w
  2496     0439  00B5               	movwf	malloc@p+1
  2497     043A                     l1316:
  2498     043A  0834               	movf	malloc@p,w
  2499     043B  0435               	iorwf	malloc@p+1,w
  2500     043C  1D03               	btfss	3,2
  2501     043D  2C3F               	goto	u691
  2502     043E  2C40               	goto	u690
  2503     043F                     u691:
  2504     043F  2CA2               	goto	l1344
  2505     0440                     u690:
  2506     0440                     l1318:
  2507     0440  086B               	movf	malloc@cur,w
  2508     0441  0269               	subwf	malloc@end,w
  2509     0442  00FA               	movwf	??_malloc
  2510     0443  086C               	movf	malloc@cur+1,w
  2511     0444  1C03               	skipc
  2512     0445  0A6C               	incf	malloc@cur+1,w
  2513     0446  026A               	subwf	malloc@end+1,w
  2514     0447  00FB               	movwf	??_malloc+1
  2515     0448  0879               	movf	malloc@n+1,w
  2516     0449  027B               	subwf	??_malloc+1,w
  2517     044A  1D03               	skipz
  2518     044B  2C4E               	goto	u705
  2519     044C  0878               	movf	malloc@n,w
  2520     044D  027A               	subwf	??_malloc,w
  2521     044E                     u705:
  2522     044E  1803               	skipnc
  2523     044F  2C51               	goto	u701
  2524     0450  2C52               	goto	u700
  2525     0451                     u701:
  2526     0451  2C83               	goto	l745
  2527     0452                     u700:
  2528     0452                     l1320:
  2529     0452  0878               	movf	malloc@n,w
  2530     0453  3E02               	addlw	2
  2531     0454  00AE               	movwf	malloc@m
  2532     0455  0879               	movf	malloc@n+1,w
  2533     0456  1803               	skipnc
  2534     0457  3E01               	addlw	1
  2535     0458  3E00               	addlw	0
  2536     0459  00AF               	movwf	malloc@m+1
  2537     045A                     l1322:
  2538     045A  302E               	movlw	(low (malloc@m| 0))& (0+255)
  2539     045B  00F0               	movwf	___expand_heap@pn
  2540     045C  120A  118A  2223  120A  118A  	fcall	___expand_heap
  2541     0461  0870               	movf	?___expand_heap,w
  2542     0462  1283               	bcf	3,5	;RP0=0, select bank0
  2543     0463  1303               	bcf	3,6	;RP1=0, select bank0
  2544     0464  00B6               	movwf	malloc@new
  2545     0465  0871               	movf	?___expand_heap+1,w
  2546     0466  00B7               	movwf	malloc@new+1
  2547     0467                     l1324:
  2548     0467  0836               	movf	malloc@new,w
  2549     0468  0437               	iorwf	malloc@new+1,w
  2550     0469  1D03               	btfss	3,2
  2551     046A  2C6C               	goto	u711
  2552     046B  2C6D               	goto	u710
  2553     046C                     u711:
  2554     046C  2C6E               	goto	l1330
  2555     046D                     u710:
  2556     046D  2C28               	goto	l1308
  2557     046E                     l1330:
  2558     046E  086A               	movf	malloc@end+1,w
  2559     046F  0637               	xorwf	malloc@new+1,w
  2560     0470  1D03               	skipz
  2561     0471  2C74               	goto	u725
  2562     0472  0869               	movf	malloc@end,w
  2563     0473  0636               	xorwf	malloc@new,w
  2564     0474                     u725:
  2565     0474  1903               	skipnz
  2566     0475  2C77               	goto	u721
  2567     0476  2C78               	goto	u720
  2568     0477                     u721:
  2569     0477  2C7C               	goto	l747
  2570     0478                     u720:
  2571     0478                     l1332:
  2572     0478  0836               	movf	malloc@new,w
  2573     0479  00EB               	movwf	malloc@cur
  2574     047A  0837               	movf	malloc@new+1,w
  2575     047B  00EC               	movwf	malloc@cur+1
  2576     047C                     l747:
  2577     047C  082E               	movf	malloc@m,w
  2578     047D  0736               	addwf	malloc@new,w
  2579     047E  00E9               	movwf	malloc@end
  2580     047F  0837               	movf	malloc@new+1,w
  2581     0480  1803               	skipnc
  2582     0481  3E01               	addlw	1
  2583     0482  00EA               	movwf	malloc@end+1
  2584     0483                     l745:
  2585     0483  086B               	movf	malloc@cur,w
  2586     0484  00B4               	movwf	malloc@p
  2587     0485  086C               	movf	malloc@cur+1,w
  2588     0486  00B5               	movwf	malloc@p+1
  2589     0487                     l1334:
  2590     0487  0834               	movf	malloc@p,w
  2591     0488  00B0               	movwf	malloc@sz
  2592     0489  0835               	movf	malloc@p+1,w
  2593     048A  00B1               	movwf	malloc@sz+1
  2594     048B                     l1336:
  2595     048B  0830               	movf	malloc@sz,w
  2596     048C  0084               	movwf	4
  2597     048D  1783               	bsf	3,7
  2598     048E  1C31               	btfss	malloc@sz+1,0
  2599     048F  1383               	bcf	3,7
  2600     0490  0878               	movf	malloc@n,w
  2601     0491  0080               	movwf	0
  2602     0492  0A84               	incf	4,f
  2603     0493  0879               	movf	malloc@n+1,w
  2604     0494  0080               	movwf	0
  2605     0495                     l1338:
  2606     0495  3002               	movlw	2
  2607     0496  07B0               	addwf	malloc@sz,f
  2608     0497  1803               	skipnc
  2609     0498  0AB1               	incf	malloc@sz+1,f
  2610     0499                     l1340:
  2611     0499  0830               	movf	malloc@sz,w
  2612     049A  00B4               	movwf	malloc@p
  2613     049B  0831               	movf	malloc@sz+1,w
  2614     049C  00B5               	movwf	malloc@p+1
  2615     049D                     l1342:
  2616     049D  0878               	movf	malloc@n,w
  2617     049E  3E02               	addlw	2
  2618     049F  07EB               	addwf	malloc@cur,f
  2619     04A0  1803               	skipnc
  2620     04A1  0AEC               	incf	malloc@cur+1,f
  2621     04A2                     l1344:
  2622     04A2  0834               	movf	malloc@p,w
  2623     04A3  00F8               	movwf	?_malloc
  2624     04A4  0835               	movf	malloc@p+1,w
  2625     04A5  00F9               	movwf	?_malloc+1
  2626     04A6                     l743:
  2627     04A6  0008               	return
  2628     04A7                     __end_of_malloc:
  2629                           
  2630                           	psect	text11
  2631     0652                     __ptext11:	
  2632 ;; *************** function ___simple_search_fl *****************
  2633 ;; Defined at:
  2634 ;;		line 19 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  n               2    0[COMMON] unsigned int 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  split           2    4[BANK0 ] PTR struct chunk
  2639 ;;		 -> __heap_hi$.$next(2), NULL(0), 
  2640 ;;  remaining_si    2    0[BANK0 ] unsigned int 
  2641 ;;  next            2    8[BANK0 ] PTR struct chunk
  2642 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2643 ;;  best            2   12[BANK0 ] PTR struct chunk
  2644 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2645 ;;  c               2   10[BANK0 ] PTR struct chunk
  2646 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2647 ;;  last            2    6[BANK0 ] PTR struct chunk
  2648 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2649 ;;  best_last       2    2[BANK0 ] PTR struct chunk
  2650 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2    0[COMMON] PTR void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         2       0       0       0       0
  2661 ;;      Locals:         0      14       0       0       0
  2662 ;;      Temps:          6       0       0       0       0
  2663 ;;      Totals:         8      14       0       0       0
  2664 ;;Total ram usage:       22 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_malloc
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     0652                     ___simple_search_fl:	
  2674                           ;psect for function ___simple_search_fl
  2675                           
  2676     0652                     l1190:	
  2677                           ;incstack = 0
  2678                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0]
  2679                           
  2680     0652  1283               	bcf	3,5	;RP0=0, select bank0
  2681     0653  1303               	bcf	3,6	;RP1=0, select bank0
  2682     0654  01AC               	clrf	___simple_search_fl@best
  2683     0655  01AD               	clrf	___simple_search_fl@best+1
  2684     0656  01A2               	clrf	___simple_search_fl@best_last
  2685     0657  01A3               	clrf	___simple_search_fl@best_last+1
  2686     0658  01A6               	clrf	___simple_search_fl@last
  2687     0659  01A7               	clrf	___simple_search_fl@last+1
  2688     065A                     l1192:
  2689     065A  086D               	movf	___freelist,w
  2690     065B  046E               	iorwf	___freelist+1,w
  2691     065C  1D03               	btfss	3,2
  2692     065D  2E5F               	goto	u481
  2693     065E  2E60               	goto	u480
  2694     065F                     u481:
  2695     065F  2E63               	goto	l1198
  2696     0660                     u480:
  2697     0660                     l1194:
  2698     0660  01F0               	clrf	?___simple_search_fl
  2699     0661  01F1               	clrf	?___simple_search_fl+1
  2700     0662  2FD7               	goto	l702
  2701     0663                     l1198:
  2702     0663  086D               	movf	___freelist,w
  2703     0664  00AA               	movwf	___simple_search_fl@c
  2704     0665  086E               	movf	___freelist+1,w
  2705     0666  00AB               	movwf	___simple_search_fl@c+1
  2706     0667  2F1C               	goto	l1224
  2707     0668                     l1200:
  2708     0668  082A               	movf	___simple_search_fl@c,w
  2709     0669  0084               	movwf	4
  2710     066A  1783               	bsf	3,7
  2711     066B  1C2B               	btfss	___simple_search_fl@c+1,0
  2712     066C  1383               	bcf	3,7
  2713     066D  0800               	movf	0,w
  2714     066E  00F2               	movwf	??___simple_search_fl
  2715     066F  0A84               	incf	4,f
  2716     0670  0800               	movf	0,w
  2717     0671  00F3               	movwf	??___simple_search_fl+1
  2718     0672  0871               	movf	___simple_search_fl@n+1,w
  2719     0673  0673               	xorwf	??___simple_search_fl+1,w
  2720     0674  1D03               	skipz
  2721     0675  2E78               	goto	u495
  2722     0676  0870               	movf	___simple_search_fl@n,w
  2723     0677  0672               	xorwf	??___simple_search_fl,w
  2724     0678                     u495:
  2725     0678  1D03               	skipz
  2726     0679  2E7B               	goto	u491
  2727     067A  2E7C               	goto	u490
  2728     067B                     u491:
  2729     067B  2EC4               	goto	l1212
  2730     067C                     u490:
  2731     067C                     l1202:
  2732     067C  0826               	movf	___simple_search_fl@last,w
  2733     067D  0427               	iorwf	___simple_search_fl@last+1,w
  2734     067E  1903               	btfsc	3,2
  2735     067F  2E81               	goto	u501
  2736     0680  2E82               	goto	u500
  2737     0681                     u501:
  2738     0681  2EA8               	goto	l1206
  2739     0682                     u500:
  2740     0682                     l1204:
  2741     0682  082A               	movf	___simple_search_fl@c,w
  2742     0683  3E02               	addlw	2
  2743     0684  00F2               	movwf	??___simple_search_fl
  2744     0685  082B               	movf	___simple_search_fl@c+1,w
  2745     0686  1803               	skipnc
  2746     0687  3E01               	addlw	1
  2747     0688  3E00               	addlw	0
  2748     0689  00F3               	movwf	??___simple_search_fl+1
  2749     068A  0872               	movf	??___simple_search_fl,w
  2750     068B  0084               	movwf	4
  2751     068C  1783               	bsf	3,7
  2752     068D  1C73               	btfss	??___simple_search_fl+1,0
  2753     068E  1383               	bcf	3,7
  2754     068F  0800               	movf	0,w
  2755     0690  00F4               	movwf	??___simple_search_fl+2
  2756     0691  0A84               	incf	4,f
  2757     0692  0800               	movf	0,w
  2758     0693  00F5               	movwf	??___simple_search_fl+3
  2759     0694  0826               	movf	___simple_search_fl@last,w
  2760     0695  3E02               	addlw	2
  2761     0696  00F6               	movwf	??___simple_search_fl+4
  2762     0697  0827               	movf	___simple_search_fl@last+1,w
  2763     0698  1803               	skipnc
  2764     0699  3E01               	addlw	1
  2765     069A  3E00               	addlw	0
  2766     069B  00F7               	movwf	??___simple_search_fl+5
  2767     069C  0876               	movf	??___simple_search_fl+4,w
  2768     069D  0084               	movwf	4
  2769     069E  1783               	bsf	3,7
  2770     069F  1C77               	btfss	??___simple_search_fl+5,0
  2771     06A0  1383               	bcf	3,7
  2772     06A1  0874               	movf	??___simple_search_fl+2,w
  2773     06A2  0080               	movwf	0
  2774     06A3  0875               	movf	??___simple_search_fl+3,w
  2775     06A4  0A84               	incf	4,f
  2776     06A5  0080               	movwf	0
  2777     06A6  0384               	decf	4,f
  2778     06A7  2EBB               	goto	l1208
  2779     06A8                     l1206:
  2780     06A8  082A               	movf	___simple_search_fl@c,w
  2781     06A9  3E02               	addlw	2
  2782     06AA  00F2               	movwf	??___simple_search_fl
  2783     06AB  082B               	movf	___simple_search_fl@c+1,w
  2784     06AC  1803               	skipnc
  2785     06AD  3E01               	addlw	1
  2786     06AE  3E00               	addlw	0
  2787     06AF  00F3               	movwf	??___simple_search_fl+1
  2788     06B0  0872               	movf	??___simple_search_fl,w
  2789     06B1  0084               	movwf	4
  2790     06B2  1783               	bsf	3,7
  2791     06B3  1C73               	btfss	??___simple_search_fl+1,0
  2792     06B4  1383               	bcf	3,7
  2793     06B5  0800               	movf	0,w
  2794     06B6  00ED               	movwf	___freelist
  2795     06B7  0A84               	incf	4,f
  2796     06B8  0800               	movf	0,w
  2797     06B9  0384               	decf	4,f
  2798     06BA  00EE               	movwf	___freelist+1
  2799     06BB                     l1208:
  2800     06BB  082A               	movf	___simple_search_fl@c,w
  2801     06BC  3E02               	addlw	2
  2802     06BD  00F0               	movwf	?___simple_search_fl
  2803     06BE  082B               	movf	___simple_search_fl@c+1,w
  2804     06BF  1803               	skipnc
  2805     06C0  3E01               	addlw	1
  2806     06C1  3E00               	addlw	0
  2807     06C2  00F1               	movwf	?___simple_search_fl+1
  2808     06C3  2FD7               	goto	l702
  2809     06C4                     l1212:
  2810     06C4  082A               	movf	___simple_search_fl@c,w
  2811     06C5  0084               	movwf	4
  2812     06C6  1783               	bsf	3,7
  2813     06C7  1C2B               	btfss	___simple_search_fl@c+1,0
  2814     06C8  1383               	bcf	3,7
  2815     06C9  0800               	movf	0,w
  2816     06CA  00F2               	movwf	??___simple_search_fl
  2817     06CB  0A84               	incf	4,f
  2818     06CC  0800               	movf	0,w
  2819     06CD  00F3               	movwf	??___simple_search_fl+1
  2820     06CE  0873               	movf	??___simple_search_fl+1,w
  2821     06CF  0271               	subwf	___simple_search_fl@n+1,w
  2822     06D0  1D03               	skipz
  2823     06D1  2ED4               	goto	u515
  2824     06D2  0872               	movf	??___simple_search_fl,w
  2825     06D3  0270               	subwf	___simple_search_fl@n,w
  2826     06D4                     u515:
  2827     06D4  1803               	skipnc
  2828     06D5  2ED7               	goto	u511
  2829     06D6  2ED8               	goto	u510
  2830     06D7                     u511:
  2831     06D7  2F05               	goto	l710
  2832     06D8                     u510:
  2833     06D8                     l1214:
  2834     06D8  082C               	movf	___simple_search_fl@best,w
  2835     06D9  042D               	iorwf	___simple_search_fl@best+1,w
  2836     06DA  1903               	btfsc	3,2
  2837     06DB  2EDD               	goto	u521
  2838     06DC  2EDE               	goto	u520
  2839     06DD                     u521:
  2840     06DD  2EFD               	goto	l1220
  2841     06DE                     u520:
  2842     06DE                     l1216:
  2843     06DE  082C               	movf	___simple_search_fl@best,w
  2844     06DF  0084               	movwf	4
  2845     06E0  1783               	bsf	3,7
  2846     06E1  1C2D               	btfss	___simple_search_fl@best+1,0
  2847     06E2  1383               	bcf	3,7
  2848     06E3  0800               	movf	0,w
  2849     06E4  00F2               	movwf	??___simple_search_fl
  2850     06E5  0A84               	incf	4,f
  2851     06E6  0800               	movf	0,w
  2852     06E7  00F3               	movwf	??___simple_search_fl+1
  2853     06E8  082A               	movf	___simple_search_fl@c,w
  2854     06E9  0084               	movwf	4
  2855     06EA  1783               	bsf	3,7
  2856     06EB  1C2B               	btfss	___simple_search_fl@c+1,0
  2857     06EC  1383               	bcf	3,7
  2858     06ED  0800               	movf	0,w
  2859     06EE  00F4               	movwf	??___simple_search_fl+2
  2860     06EF  0A84               	incf	4,f
  2861     06F0  0800               	movf	0,w
  2862     06F1  00F5               	movwf	??___simple_search_fl+3
  2863     06F2  0873               	movf	??___simple_search_fl+1,w
  2864     06F3  0275               	subwf	??___simple_search_fl+3,w
  2865     06F4  1D03               	skipz
  2866     06F5  2EF8               	goto	u535
  2867     06F6  0872               	movf	??___simple_search_fl,w
  2868     06F7  0274               	subwf	??___simple_search_fl+2,w
  2869     06F8                     u535:
  2870     06F8  1C03               	skipc
  2871     06F9  2EFB               	goto	u531
  2872     06FA  2EFC               	goto	u530
  2873     06FB                     u531:
  2874     06FB  2EFD               	goto	l1220
  2875     06FC                     u530:
  2876     06FC  2F05               	goto	l710
  2877     06FD                     l1220:
  2878     06FD  082A               	movf	___simple_search_fl@c,w
  2879     06FE  00AC               	movwf	___simple_search_fl@best
  2880     06FF  082B               	movf	___simple_search_fl@c+1,w
  2881     0700  00AD               	movwf	___simple_search_fl@best+1
  2882     0701  0826               	movf	___simple_search_fl@last,w
  2883     0702  00A2               	movwf	___simple_search_fl@best_last
  2884     0703  0827               	movf	___simple_search_fl@last+1,w
  2885     0704  00A3               	movwf	___simple_search_fl@best_last+1
  2886     0705                     l710:
  2887     0705  082A               	movf	___simple_search_fl@c,w
  2888     0706  00A6               	movwf	___simple_search_fl@last
  2889     0707  082B               	movf	___simple_search_fl@c+1,w
  2890     0708  00A7               	movwf	___simple_search_fl@last+1
  2891     0709                     l1222:
  2892     0709  082A               	movf	___simple_search_fl@c,w
  2893     070A  3E02               	addlw	2
  2894     070B  00F2               	movwf	??___simple_search_fl
  2895     070C  082B               	movf	___simple_search_fl@c+1,w
  2896     070D  1803               	skipnc
  2897     070E  3E01               	addlw	1
  2898     070F  3E00               	addlw	0
  2899     0710  00F3               	movwf	??___simple_search_fl+1
  2900     0711  0872               	movf	??___simple_search_fl,w
  2901     0712  0084               	movwf	4
  2902     0713  1783               	bsf	3,7
  2903     0714  1C73               	btfss	??___simple_search_fl+1,0
  2904     0715  1383               	bcf	3,7
  2905     0716  0800               	movf	0,w
  2906     0717  00AA               	movwf	___simple_search_fl@c
  2907     0718  0A84               	incf	4,f
  2908     0719  0800               	movf	0,w
  2909     071A  0384               	decf	4,f
  2910     071B  00AB               	movwf	___simple_search_fl@c+1
  2911     071C                     l1224:
  2912     071C  082A               	movf	___simple_search_fl@c,w
  2913     071D  042B               	iorwf	___simple_search_fl@c+1,w
  2914     071E  1D03               	btfss	3,2
  2915     071F  2F21               	goto	u541
  2916     0720  2F22               	goto	u540
  2917     0721                     u541:
  2918     0721  2E68               	goto	l1200
  2919     0722                     u540:
  2920     0722                     l1226:
  2921     0722  082C               	movf	___simple_search_fl@best,w
  2922     0723  042D               	iorwf	___simple_search_fl@best+1,w
  2923     0724  1903               	btfsc	3,2
  2924     0725  2F27               	goto	u551
  2925     0726  2F28               	goto	u550
  2926     0727                     u551:
  2927     0727  2E60               	goto	l1194
  2928     0728                     u550:
  2929     0728                     l1228:
  2930     0728  082C               	movf	___simple_search_fl@best,w
  2931     0729  3E02               	addlw	2
  2932     072A  00F2               	movwf	??___simple_search_fl
  2933     072B  082D               	movf	___simple_search_fl@best+1,w
  2934     072C  1803               	skipnc
  2935     072D  3E01               	addlw	1
  2936     072E  3E00               	addlw	0
  2937     072F  00F3               	movwf	??___simple_search_fl+1
  2938     0730  0872               	movf	??___simple_search_fl,w
  2939     0731  0084               	movwf	4
  2940     0732  1783               	bsf	3,7
  2941     0733  1C73               	btfss	??___simple_search_fl+1,0
  2942     0734  1383               	bcf	3,7
  2943     0735  0800               	movf	0,w
  2944     0736  00A8               	movwf	___simple_search_fl@next
  2945     0737  0A84               	incf	4,f
  2946     0738  0800               	movf	0,w
  2947     0739  0384               	decf	4,f
  2948     073A  00A9               	movwf	___simple_search_fl@next+1
  2949     073B  082C               	movf	___simple_search_fl@best,w
  2950     073C  0084               	movwf	4
  2951     073D  1783               	bsf	3,7
  2952     073E  1C2D               	btfss	___simple_search_fl@best+1,0
  2953     073F  1383               	bcf	3,7
  2954     0740  0800               	movf	0,w
  2955     0741  00F2               	movwf	??___simple_search_fl
  2956     0742  0A84               	incf	4,f
  2957     0743  0800               	movf	0,w
  2958     0744  00F3               	movwf	??___simple_search_fl+1
  2959     0745  0870               	movf	___simple_search_fl@n,w
  2960     0746  0272               	subwf	??___simple_search_fl,w
  2961     0747  00F4               	movwf	??___simple_search_fl+2
  2962     0748  0871               	movf	___simple_search_fl@n+1,w
  2963     0749  1C03               	skipc
  2964     074A  0A71               	incf	___simple_search_fl@n+1,w
  2965     074B  0273               	subwf	??___simple_search_fl+1,w
  2966     074C  00F5               	movwf	??___simple_search_fl+3
  2967     074D  3000               	movlw	0
  2968     074E  0275               	subwf	??___simple_search_fl+3,w
  2969     074F  3005               	movlw	5
  2970     0750  1903               	skipnz
  2971     0751  0274               	subwf	??___simple_search_fl+2,w
  2972     0752  1C03               	skipc
  2973     0753  2F55               	goto	u561
  2974     0754  2F56               	goto	u560
  2975     0755                     u561:
  2976     0755  2FAE               	goto	l713
  2977     0756                     u560:
  2978     0756                     l1230:
  2979     0756  082C               	movf	___simple_search_fl@best,w
  2980     0757  0084               	movwf	4
  2981     0758  1783               	bsf	3,7
  2982     0759  1C2D               	btfss	___simple_search_fl@best+1,0
  2983     075A  1383               	bcf	3,7
  2984     075B  0800               	movf	0,w
  2985     075C  00F2               	movwf	??___simple_search_fl
  2986     075D  0A84               	incf	4,f
  2987     075E  0800               	movf	0,w
  2988     075F  00F3               	movwf	??___simple_search_fl+1
  2989     0760  0870               	movf	___simple_search_fl@n,w
  2990     0761  0272               	subwf	??___simple_search_fl,w
  2991     0762  00F4               	movwf	??___simple_search_fl+2
  2992     0763  0871               	movf	___simple_search_fl@n+1,w
  2993     0764  1C03               	skipc
  2994     0765  0A71               	incf	___simple_search_fl@n+1,w
  2995     0766  0273               	subwf	??___simple_search_fl+1,w
  2996     0767  00F5               	movwf	??___simple_search_fl+3
  2997     0768  0874               	movf	??___simple_search_fl+2,w
  2998     0769  3EFE               	addlw	254
  2999     076A  00A0               	movwf	___simple_search_fl@remaining_size
  3000     076B  0875               	movf	??___simple_search_fl+3,w
  3001     076C  1803               	skipnc
  3002     076D  3E01               	addlw	1
  3003     076E  3EFF               	addlw	255
  3004     076F  00A1               	movwf	___simple_search_fl@remaining_size+1
  3005     0770                     l1232:
  3006     0770  082C               	movf	___simple_search_fl@best,w
  3007     0771  0084               	movwf	4
  3008     0772  1783               	bsf	3,7
  3009     0773  1C2D               	btfss	___simple_search_fl@best+1,0
  3010     0774  1383               	bcf	3,7
  3011     0775  0870               	movf	___simple_search_fl@n,w
  3012     0776  0080               	movwf	0
  3013     0777  0A84               	incf	4,f
  3014     0778  0871               	movf	___simple_search_fl@n+1,w
  3015     0779  0080               	movwf	0
  3016     077A                     l1234:
  3017     077A  082C               	movf	___simple_search_fl@best,w
  3018     077B  0084               	movwf	4
  3019     077C  1783               	bsf	3,7
  3020     077D  1C2D               	btfss	___simple_search_fl@best+1,0
  3021     077E  1383               	bcf	3,7
  3022     077F  0800               	movf	0,w
  3023     0780  072C               	addwf	___simple_search_fl@best,w
  3024     0781  00F2               	movwf	??___simple_search_fl
  3025     0782  082D               	movf	___simple_search_fl@best+1,w
  3026     0783  1803               	skipnc
  3027     0784  3E01               	addlw	1
  3028     0785  00F3               	movwf	??___simple_search_fl+1
  3029     0786  0872               	movf	??___simple_search_fl,w
  3030     0787  3E02               	addlw	2
  3031     0788  00A4               	movwf	___simple_search_fl@split
  3032     0789  0873               	movf	??___simple_search_fl+1,w
  3033     078A  1803               	skipnc
  3034     078B  3E01               	addlw	1
  3035     078C  3E00               	addlw	0
  3036     078D  00A5               	movwf	___simple_search_fl@split+1
  3037     078E  0824               	movf	___simple_search_fl@split,w
  3038     078F  0084               	movwf	4
  3039     0790  1783               	bsf	3,7
  3040     0791  1C25               	btfss	___simple_search_fl@split+1,0
  3041     0792  1383               	bcf	3,7
  3042     0793  0820               	movf	___simple_search_fl@remaining_size,w
  3043     0794  0080               	movwf	0
  3044     0795  0A84               	incf	4,f
  3045     0796  0821               	movf	___simple_search_fl@remaining_size+1,w
  3046     0797  0080               	movwf	0
  3047     0798                     l1236:
  3048     0798  0824               	movf	___simple_search_fl@split,w
  3049     0799  3E02               	addlw	2
  3050     079A  00F2               	movwf	??___simple_search_fl
  3051     079B  0825               	movf	___simple_search_fl@split+1,w
  3052     079C  1803               	skipnc
  3053     079D  3E01               	addlw	1
  3054     079E  3E00               	addlw	0
  3055     079F  00F3               	movwf	??___simple_search_fl+1
  3056     07A0  0872               	movf	??___simple_search_fl,w
  3057     07A1  0084               	movwf	4
  3058     07A2  1783               	bsf	3,7
  3059     07A3  1C73               	btfss	??___simple_search_fl+1,0
  3060     07A4  1383               	bcf	3,7
  3061     07A5  0828               	movf	___simple_search_fl@next,w
  3062     07A6  0080               	movwf	0
  3063     07A7  0A84               	incf	4,f
  3064     07A8  0829               	movf	___simple_search_fl@next+1,w
  3065     07A9  0080               	movwf	0
  3066     07AA                     l1238:
  3067     07AA  0824               	movf	___simple_search_fl@split,w
  3068     07AB  00A8               	movwf	___simple_search_fl@next
  3069     07AC  0825               	movf	___simple_search_fl@split+1,w
  3070     07AD  00A9               	movwf	___simple_search_fl@next+1
  3071     07AE                     l713:
  3072     07AE  082D               	movf	___simple_search_fl@best+1,w
  3073     07AF  066E               	xorwf	___freelist+1,w
  3074     07B0  1D03               	skipz
  3075     07B1  2FB4               	goto	u575
  3076     07B2  082C               	movf	___simple_search_fl@best,w
  3077     07B3  066D               	xorwf	___freelist,w
  3078     07B4                     u575:
  3079     07B4  1D03               	skipz
  3080     07B5  2FB7               	goto	u571
  3081     07B6  2FB8               	goto	u570
  3082     07B7                     u571:
  3083     07B7  2FBD               	goto	l1242
  3084     07B8                     u570:
  3085     07B8                     l1240:
  3086     07B8  0828               	movf	___simple_search_fl@next,w
  3087     07B9  00ED               	movwf	___freelist
  3088     07BA  0829               	movf	___simple_search_fl@next+1,w
  3089     07BB  00EE               	movwf	___freelist+1
  3090     07BC  2FCF               	goto	l1244
  3091     07BD                     l1242:
  3092     07BD  0822               	movf	___simple_search_fl@best_last,w
  3093     07BE  3E02               	addlw	2
  3094     07BF  00F2               	movwf	??___simple_search_fl
  3095     07C0  0823               	movf	___simple_search_fl@best_last+1,w
  3096     07C1  1803               	skipnc
  3097     07C2  3E01               	addlw	1
  3098     07C3  3E00               	addlw	0
  3099     07C4  00F3               	movwf	??___simple_search_fl+1
  3100     07C5  0872               	movf	??___simple_search_fl,w
  3101     07C6  0084               	movwf	4
  3102     07C7  1783               	bsf	3,7
  3103     07C8  1C73               	btfss	??___simple_search_fl+1,0
  3104     07C9  1383               	bcf	3,7
  3105     07CA  0828               	movf	___simple_search_fl@next,w
  3106     07CB  0080               	movwf	0
  3107     07CC  0A84               	incf	4,f
  3108     07CD  0829               	movf	___simple_search_fl@next+1,w
  3109     07CE  0080               	movwf	0
  3110     07CF                     l1244:
  3111     07CF  082C               	movf	___simple_search_fl@best,w
  3112     07D0  3E02               	addlw	2
  3113     07D1  00F0               	movwf	?___simple_search_fl
  3114     07D2  082D               	movf	___simple_search_fl@best+1,w
  3115     07D3  1803               	skipnc
  3116     07D4  3E01               	addlw	1
  3117     07D5  3E00               	addlw	0
  3118     07D6  00F1               	movwf	?___simple_search_fl+1
  3119     07D7                     l702:
  3120     07D7  0008               	return
  3121     07D8                     __end_of___simple_search_fl:
  3122                           
  3123                           	psect	text12
  3124     0223                     __ptext12:	
  3125 ;; *************** function ___expand_heap *****************
  3126 ;; Defined at:
  3127 ;;		line 14 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/expand_heap.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  pn              1    0[COMMON] PTR unsigned int 
  3130 ;;		 -> malloc@m(2), 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  3133 ;;		 -> __heap_hi(0), NULL(0), 
  3134 ;;  n               2    1[COMMON] unsigned int 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2    0[COMMON] PTR void 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         1       0       0       0       0
  3145 ;;      Locals:         4       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         5       0       0       0       0
  3148 ;;Total ram usage:        5 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_malloc
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157     0223                     ___expand_heap:	
  3158                           ;psect for function ___expand_heap
  3159                           
  3160     0223                     l1252:	
  3161                           ;incstack = 0
  3162                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  3163                           
  3164     0223  0870               	movf	___expand_heap@pn,w
  3165     0224  0084               	movwf	4
  3166     0225  1383               	bcf	3,7	;select IRP bank0
  3167     0226  0800               	movf	0,w
  3168     0227  00F1               	movwf	___expand_heap@n
  3169     0228  0A84               	incf	4,f
  3170     0229  0800               	movf	0,w
  3171     022A  00F2               	movwf	___expand_heap@n+1
  3172     022B                     l1254:
  3173     022B  1283               	bcf	3,5	;RP0=0, select bank0
  3174     022C  1303               	bcf	3,6	;RP1=0, select bank0
  3175     022D  0867               	movf	_brkp,w
  3176     022E  0468               	iorwf	_brkp+1,w
  3177     022F  1D03               	btfss	3,2
  3178     0230  2A32               	goto	u581
  3179     0231  2A33               	goto	u580
  3180     0232                     u581:
  3181     0232  2A37               	goto	l761
  3182     0233                     u580:
  3183     0233                     l1256:
  3184     0233  3070               	movlw	low ___heap_hi
  3185     0234  00E7               	movwf	_brkp
  3186     0235  3001               	movlw	high ___heap_hi
  3187     0236  00E8               	movwf	_brkp+1
  3188     0237                     l761:
  3189     0237  3000               	movlw	0
  3190     0238  0272               	subwf	___expand_heap@n+1,w
  3191     0239  3004               	movlw	4
  3192     023A  1903               	skipnz
  3193     023B  0271               	subwf	___expand_heap@n,w
  3194     023C  1803               	skipnc
  3195     023D  2A3F               	goto	u591
  3196     023E  2A40               	goto	u590
  3197     023F                     u591:
  3198     023F  2A44               	goto	l1260
  3199     0240                     u590:
  3200     0240                     l1258:
  3201     0240  3004               	movlw	4
  3202     0241  00F1               	movwf	___expand_heap@n
  3203     0242  3000               	movlw	0
  3204     0243  00F2               	movwf	___expand_heap@n+1
  3205     0244                     l1260:
  3206     0244  0871               	movf	___expand_heap@n,w
  3207     0245  0267               	subwf	_brkp,w
  3208     0246  00F3               	movwf	___expand_heap@new_brkp
  3209     0247  0868               	movf	_brkp+1,w
  3210     0248  1C03               	skipc
  3211     0249  0368               	decf	_brkp+1,w
  3212     024A  00F4               	movwf	___expand_heap@new_brkp+1
  3213     024B                     l1262:
  3214     024B  3001               	movlw	high ___heap_lo
  3215     024C  0274               	subwf	___expand_heap@new_brkp+1,w
  3216     024D  3010               	movlw	low ___heap_lo
  3217     024E  1903               	skipnz
  3218     024F  0273               	subwf	___expand_heap@new_brkp,w
  3219     0250  1C03               	skipc
  3220     0251  2A53               	goto	u601
  3221     0252  2A54               	goto	u600
  3222     0253                     u601:
  3223     0253  2A5E               	goto	l1266
  3224     0254                     u600:
  3225     0254                     l1264:
  3226     0254  0868               	movf	_brkp+1,w
  3227     0255  0274               	subwf	___expand_heap@new_brkp+1,w
  3228     0256  1D03               	skipz
  3229     0257  2A5A               	goto	u615
  3230     0258  0867               	movf	_brkp,w
  3231     0259  0273               	subwf	___expand_heap@new_brkp,w
  3232     025A                     u615:
  3233     025A  1C03               	skipc
  3234     025B  2A5D               	goto	u611
  3235     025C  2A5E               	goto	u610
  3236     025D                     u611:
  3237     025D  2A67               	goto	l1272
  3238     025E                     u610:
  3239     025E                     l1266:
  3240     025E  300C               	movlw	12
  3241     025F  1683               	bsf	3,5	;RP0=1, select bank1
  3242     0260  1303               	bcf	3,6	;RP1=0, select bank1
  3243     0261  00A4               	movwf	_errno^(0+128)
  3244     0262  3000               	movlw	0
  3245     0263  00A5               	movwf	(_errno^(0+128)+1)
  3246     0264                     l1268:
  3247     0264  01F0               	clrf	?___expand_heap
  3248     0265  01F1               	clrf	?___expand_heap+1
  3249     0266  2A6F               	goto	l766
  3250     0267                     l1272:
  3251     0267  0873               	movf	___expand_heap@new_brkp,w
  3252     0268  00E7               	movwf	_brkp
  3253     0269  0874               	movf	___expand_heap@new_brkp+1,w
  3254     026A  00E8               	movwf	_brkp+1
  3255     026B  0867               	movf	_brkp,w
  3256     026C  00F0               	movwf	?___expand_heap
  3257     026D  0868               	movf	_brkp+1,w
  3258     026E  00F1               	movwf	?___expand_heap+1
  3259     026F                     l766:
  3260     026F  0008               	return
  3261     0270                     __end_of___expand_heap:
  3262                           
  3263                           	psect	text13
  3264     012D                     __ptext13:	
  3265 ;; *************** function ___wmul *****************
  3266 ;; Defined at:
  3267 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  multiplier      2    0[COMMON] unsigned int 
  3270 ;;  multiplicand    2    2[COMMON] unsigned int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  product         2    4[COMMON] unsigned int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  2    0[COMMON] unsigned int 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         4       0       0       0       0
  3283 ;;      Locals:         2       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0
  3285 ;;      Totals:         6       0       0       0       0
  3286 ;;Total ram usage:        6 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_calloc
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295     012D                     ___wmul:	
  3296                           ;psect for function ___wmul
  3297                           
  3298     012D                     l1282:	
  3299                           ;incstack = 0
  3300                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3301                           
  3302     012D  01F4               	clrf	___wmul@product
  3303     012E  01F5               	clrf	___wmul@product+1
  3304     012F                     l1284:
  3305     012F  1C70               	btfss	___wmul@multiplier,0
  3306     0130  2932               	goto	u621
  3307     0131  2933               	goto	u620
  3308     0132                     u621:
  3309     0132  2939               	goto	l232
  3310     0133                     u620:
  3311     0133                     l1286:
  3312     0133  0872               	movf	___wmul@multiplicand,w
  3313     0134  07F4               	addwf	___wmul@product,f
  3314     0135  1803               	skipnc
  3315     0136  0AF5               	incf	___wmul@product+1,f
  3316     0137  0873               	movf	___wmul@multiplicand+1,w
  3317     0138  07F5               	addwf	___wmul@product+1,f
  3318     0139                     l232:
  3319     0139  3001               	movlw	1
  3320     013A                     u635:
  3321     013A  1003               	clrc
  3322     013B  0DF2               	rlf	___wmul@multiplicand,f
  3323     013C  0DF3               	rlf	___wmul@multiplicand+1,f
  3324     013D  3EFF               	addlw	-1
  3325     013E  1D03               	skipz
  3326     013F  293A               	goto	u635
  3327     0140                     l1288:
  3328     0140  3001               	movlw	1
  3329     0141                     u645:
  3330     0141  1003               	clrc
  3331     0142  0CF1               	rrf	___wmul@multiplier+1,f
  3332     0143  0CF0               	rrf	___wmul@multiplier,f
  3333     0144  3EFF               	addlw	-1
  3334     0145  1D03               	skipz
  3335     0146  2941               	goto	u645
  3336     0147                     l1290:
  3337     0147  0870               	movf	___wmul@multiplier,w
  3338     0148  0471               	iorwf	___wmul@multiplier+1,w
  3339     0149  1D03               	btfss	3,2
  3340     014A  294C               	goto	u651
  3341     014B  294D               	goto	u650
  3342     014C                     u651:
  3343     014C  292F               	goto	l1284
  3344     014D                     u650:
  3345     014D                     l1292:
  3346     014D  0875               	movf	___wmul@product+1,w
  3347     014E  00F1               	movwf	?___wmul+1
  3348     014F  0874               	movf	___wmul@product,w
  3349     0150  00F0               	movwf	?___wmul
  3350     0151                     l234:
  3351     0151  0008               	return
  3352     0152                     __end_of___wmul:
  3353                           
  3354                           	psect	text14
  3355     0270                     __ptext14:	
  3356 ;; *************** function _MovieShape *****************
  3357 ;; Defined at:
  3358 ;;		line 32 in file "shape.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  dir             1    wreg     enum E885
  3361 ;;  _shapePositi    2    4[BANK0 ] PTR struct .
  3362 ;;		 -> main@shapePosition(4), 
  3363 ;;  shapeArray      1    6[BANK0 ] PTR unsigned char 
  3364 ;;		 -> main@square_1(3), 
  3365 ;;  countElemntA    2    7[BANK0 ] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  dir             1   11[BANK0 ] enum E885
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       5       0       0       0
  3378 ;;      Locals:         0       1       0       0       0
  3379 ;;      Temps:          0       2       0       0       0
  3380 ;;      Totals:         0       8       0       0       0
  3381 ;;Total ram usage:        8 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 3
  3384 ;; This function calls:
  3385 ;;		_MovieDown
  3386 ;;		_MovieLeft
  3387 ;;		_MovieRigth
  3388 ;;		_MovieUp
  3389 ;;		_ShowShape
  3390 ;;		_SpiClearMatrix
  3391 ;; This function is called by:
  3392 ;;		_ChangeOfCoordinates
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396     0270                     _MovieShape:	
  3397                           ;psect for function _MovieShape
  3398                           
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _MovieShape: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3402                           ;MovieShape@dir stored from wreg
  3403     0270  1283               	bcf	3,5	;RP0=0, select bank0
  3404     0271  1303               	bcf	3,6	;RP1=0, select bank0
  3405     0272  00AB               	movwf	MovieShape@dir
  3406     0273                     l1422:
  3407                           
  3408                           ;shape.c: 34:     switch (dir){
  3409     0273  2A9C               	goto	l1434
  3410     0274                     l1424:
  3411                           
  3412                           ;shape.c: 36:             MovieDown(_shapePosition);
  3413     0274  0824               	movf	MovieShape@_shapePosition,w
  3414     0275  00F0               	movwf	MovieDown@_shapePosition
  3415     0276  0825               	movf	MovieShape@_shapePosition+1,w
  3416     0277  00F1               	movwf	MovieDown@_shapePosition+1
  3417     0278  120A  118A  209C  120A  118A  	fcall	_MovieDown
  3418                           
  3419                           ;shape.c: 37:             break;
  3420     027D  2AB5               	goto	l1436
  3421     027E                     l1426:
  3422                           
  3423                           ;shape.c: 39:             MovieUp(_shapePosition);
  3424     027E  0824               	movf	MovieShape@_shapePosition,w
  3425     027F  00F0               	movwf	MovieUp@_shapePosition
  3426     0280  0825               	movf	MovieShape@_shapePosition+1,w
  3427     0281  00F1               	movwf	MovieUp@_shapePosition+1
  3428     0282  120A  118A  20D8  120A  118A  	fcall	_MovieUp
  3429                           
  3430                           ;shape.c: 40:             break;
  3431     0287  2AB5               	goto	l1436
  3432     0288                     l1428:
  3433                           
  3434                           ;shape.c: 42:             MovieLeft(_shapePosition);
  3435     0288  0824               	movf	MovieShape@_shapePosition,w
  3436     0289  00F0               	movwf	MovieLeft@_shapePosition
  3437     028A  0825               	movf	MovieShape@_shapePosition+1,w
  3438     028B  00F1               	movwf	MovieLeft@_shapePosition+1
  3439     028C  120A  118A  2079  120A  118A  	fcall	_MovieLeft
  3440                           
  3441                           ;shape.c: 43:             break;
  3442     0291  2AB5               	goto	l1436
  3443     0292                     l1430:
  3444                           
  3445                           ;shape.c: 45:             MovieRigth(_shapePosition);
  3446     0292  0824               	movf	MovieShape@_shapePosition,w
  3447     0293  00F0               	movwf	MovieRigth@_shapePosition
  3448     0294  0825               	movf	MovieShape@_shapePosition+1,w
  3449     0295  00F1               	movwf	MovieRigth@_shapePosition+1
  3450     0296  120A  118A  2063  120A  118A  	fcall	_MovieRigth
  3451                           
  3452                           ;shape.c: 46:             break;
  3453     029B  2AB5               	goto	l1436
  3454     029C                     l1434:
  3455     029C  082B               	movf	MovieShape@dir,w
  3456     029D  00A9               	movwf	??_MovieShape
  3457     029E  01AA               	clrf	??_MovieShape+1
  3458                           
  3459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3460                           ; Switch size 1, requested type "simple"
  3461                           ; Number of cases is 1, Range of values is 0 to 0
  3462                           ; switch strategies available:
  3463                           ; Name         Instructions Cycles
  3464                           ; simple_byte            4     3 (average)
  3465                           ; direct_byte           11     8 (fixed)
  3466                           ; jumptable            260     6 (fixed)
  3467                           ;	Chosen strategy is simple_byte
  3468     029F  082A               	movf	??_MovieShape+1,w
  3469     02A0  3A00               	xorlw	0	; case 0
  3470     02A1  1903               	skipnz
  3471     02A2  2AA4               	goto	l1606
  3472     02A3  2AB5               	goto	l1436
  3473     02A4                     l1606:
  3474                           
  3475                           ; Switch size 1, requested type "simple"
  3476                           ; Number of cases is 5, Range of values is 0 to 4
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte           16     9 (average)
  3480                           ; direct_byte           23     8 (fixed)
  3481                           ; jumptable            260     6 (fixed)
  3482                           ;	Chosen strategy is simple_byte
  3483     02A4  0829               	movf	??_MovieShape,w
  3484     02A5  3A00               	xorlw	0	; case 0
  3485     02A6  1903               	skipnz
  3486     02A7  2A74               	goto	l1424
  3487     02A8  3A01               	xorlw	1	; case 1
  3488     02A9  1903               	skipnz
  3489     02AA  2A7E               	goto	l1426
  3490     02AB  3A03               	xorlw	3	; case 2
  3491     02AC  1903               	skipnz
  3492     02AD  2A88               	goto	l1428
  3493     02AE  3A01               	xorlw	1	; case 3
  3494     02AF  1903               	skipnz
  3495     02B0  2A92               	goto	l1430
  3496     02B1  3A07               	xorlw	7	; case 4
  3497     02B2  1903               	skipnz
  3498     02B3  2AB5               	goto	l1436
  3499     02B4  2AB5               	goto	l1436
  3500     02B5                     l1436:
  3501                           
  3502                           ;shape.c: 51:     SpiClearMatrix();
  3503     02B5  120A  118A  20C2  120A  118A  	fcall	_SpiClearMatrix
  3504     02BA                     l1438:
  3505                           
  3506                           ;shape.c: 52:     ShowShape(_shapePosition, countElemntArray, shapeArray);
  3507     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3508     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3509     02BC  0824               	movf	MovieShape@_shapePosition,w
  3510     02BD  00F4               	movwf	ShowShape@coord
  3511     02BE  0825               	movf	MovieShape@_shapePosition+1,w
  3512     02BF  00F5               	movwf	ShowShape@coord+1
  3513     02C0  0828               	movf	MovieShape@countElemntArray+1,w
  3514     02C1  00F7               	movwf	ShowShape@countElemntArray+1
  3515     02C2  0827               	movf	MovieShape@countElemntArray,w
  3516     02C3  00F6               	movwf	ShowShape@countElemntArray
  3517     02C4  0826               	movf	MovieShape@shapeArray,w
  3518     02C5  00F8               	movwf	ShowShape@shapeArray
  3519     02C6  120A  118A  22CC  120A  118A  	fcall	_ShowShape
  3520     02CB                     l129:
  3521     02CB  0008               	return
  3522     02CC                     __end_of_MovieShape:
  3523                           
  3524                           	psect	text15
  3525     00C2                     __ptext15:	
  3526 ;; *************** function _SpiClearMatrix *****************
  3527 ;; Defined at:
  3528 ;;		line 10 in file "matrix.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  i               1    6[COMMON] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       0       0       0       0
  3543 ;;      Locals:         1       0       0       0       0
  3544 ;;      Temps:          2       0       0       0       0
  3545 ;;      Totals:         3       0       0       0       0
  3546 ;;Total ram usage:        3 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 2
  3549 ;; This function calls:
  3550 ;;		_SendToSegment
  3551 ;; This function is called by:
  3552 ;;		_MatrixInit
  3553 ;;		_MovieShape
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557     00C2                     _SpiClearMatrix:	
  3558                           ;psect for function _SpiClearMatrix
  3559                           
  3560     00C2                     l1356:	
  3561                           ;incstack = 0
  3562                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  3563                           
  3564                           
  3565                           ;matrix.c: 12:   char i = 8;
  3566     00C2  3008               	movlw	8
  3567     00C3  00F6               	movwf	SpiClearMatrix@i
  3568     00C4                     l1358:
  3569                           
  3570                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  3571     00C4  0876               	movf	SpiClearMatrix@i,w
  3572     00C5  00F4               	movwf	??_SpiClearMatrix
  3573     00C6  01F5               	clrf	??_SpiClearMatrix+1
  3574     00C7  0874               	movf	??_SpiClearMatrix,w
  3575     00C8  00F1               	movwf	SendToSegment@segment
  3576     00C9  0875               	movf	??_SpiClearMatrix+1,w
  3577     00CA  00F2               	movwf	SendToSegment@segment+1
  3578     00CB  01F3               	clrf	SendToSegment@data
  3579     00CC  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  3580     00D1                     l1360:
  3581                           
  3582                           ;matrix.c: 16:   } while (--i);
  3583     00D1  3001               	movlw	1
  3584     00D2  02F6               	subwf	SpiClearMatrix@i,f
  3585     00D3  1D03               	btfss	3,2
  3586     00D4  28D6               	goto	u741
  3587     00D5  28D7               	goto	u740
  3588     00D6                     u741:
  3589     00D6  28C4               	goto	l1358
  3590     00D7                     u740:
  3591     00D7                     l84:
  3592     00D7  0008               	return
  3593     00D8                     __end_of_SpiClearMatrix:
  3594                           
  3595                           	psect	text16
  3596     02CC                     __ptext16:	
  3597 ;; *************** function _ShowShape *****************
  3598 ;; Defined at:
  3599 ;;		line 8 in file "shape.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  coord           2    4[COMMON] PTR struct .
  3602 ;;		 -> main@shapePosition(4), 
  3603 ;;  countElemntA    2    6[COMMON] int 
  3604 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
  3605 ;;		 -> main@square_1(3), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  pos             2    2[BANK0 ] int 
  3608 ;;  _pos            2    0[BANK0 ] int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         5       0       0       0       0
  3619 ;;      Locals:         0       4       0       0       0
  3620 ;;      Temps:          5       0       0       0       0
  3621 ;;      Totals:        10       4       0       0       0
  3622 ;;Total ram usage:       14 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 2
  3625 ;; This function calls:
  3626 ;;		_SendToSegment
  3627 ;; This function is called by:
  3628 ;;		_MovieShape
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632     02CC                     _ShowShape:	
  3633                           ;psect for function _ShowShape
  3634                           
  3635     02CC                     l1362:	
  3636                           ;incstack = 0
  3637                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3638                           
  3639     02CC                     l1364:
  3640                           
  3641                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  3642     02CC  0874               	movf	ShowShape@coord,w
  3643     02CD  0084               	movwf	4
  3644     02CE  1783               	bsf	3,7
  3645     02CF  1C75               	btfss	ShowShape@coord+1,0
  3646     02D0  1383               	bcf	3,7
  3647     02D1  0800               	movf	0,w
  3648     02D2  00F9               	movwf	??_ShowShape
  3649     02D3  0A84               	incf	4,f
  3650     02D4  0800               	movf	0,w
  3651     02D5  00FA               	movwf	??_ShowShape+1
  3652     02D6  0879               	movf	??_ShowShape,w
  3653     02D7  3E01               	addlw	1
  3654     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3655     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3656     02DA  00A2               	movwf	ShowShape@pos
  3657     02DB  087A               	movf	??_ShowShape+1,w
  3658     02DC  1803               	skipnc
  3659     02DD  3E01               	addlw	1
  3660     02DE  3E00               	addlw	0
  3661     02DF  00A3               	movwf	ShowShape@pos+1
  3662     02E0  2B2C               	goto	l1372
  3663     02E1                     l1366:
  3664                           
  3665                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  3666     02E1  0874               	movf	ShowShape@coord,w
  3667     02E2  0084               	movwf	4
  3668     02E3  1783               	bsf	3,7
  3669     02E4  1C75               	btfss	ShowShape@coord+1,0
  3670     02E5  1383               	bcf	3,7
  3671     02E6  0800               	movf	0,w
  3672     02E7  00F9               	movwf	??_ShowShape
  3673     02E8  0A84               	incf	4,f
  3674     02E9  0800               	movf	0,w
  3675     02EA  00FA               	movwf	??_ShowShape+1
  3676     02EB  0879               	movf	??_ShowShape,w
  3677     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3678     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3679     02EE  0222               	subwf	ShowShape@pos,w
  3680     02EF  00FB               	movwf	??_ShowShape+2
  3681     02F0  087A               	movf	??_ShowShape+1,w
  3682     02F1  1C03               	skipc
  3683     02F2  0A7A               	incf	??_ShowShape+1,w
  3684     02F3  0223               	subwf	ShowShape@pos+1,w
  3685     02F4  00FC               	movwf	??_ShowShape+3
  3686     02F5  087B               	movf	??_ShowShape+2,w
  3687     02F6  3EFF               	addlw	255
  3688     02F7  00A0               	movwf	ShowShape@_pos
  3689     02F8  087C               	movf	??_ShowShape+3,w
  3690     02F9  1803               	skipnc
  3691     02FA  3E01               	addlw	1
  3692     02FB  3EFF               	addlw	255
  3693     02FC  00A1               	movwf	ShowShape@_pos+1
  3694     02FD                     l1368:
  3695                           
  3696                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  3697     02FD  0823               	movf	ShowShape@pos+1,w
  3698     02FE  00F2               	movwf	SendToSegment@segment+1
  3699     02FF  0822               	movf	ShowShape@pos,w
  3700     0300  00F1               	movwf	SendToSegment@segment
  3701     0301  0820               	movf	ShowShape@_pos,w
  3702     0302  0778               	addwf	ShowShape@shapeArray,w
  3703     0303  00F9               	movwf	??_ShowShape
  3704     0304  0879               	movf	??_ShowShape,w
  3705     0305  0084               	movwf	4
  3706     0306  1383               	bcf	3,7	;select IRP bank0
  3707     0307  0800               	movf	0,w
  3708     0308  00FA               	movwf	??_ShowShape+1
  3709     0309  0874               	movf	ShowShape@coord,w
  3710     030A  3E02               	addlw	2
  3711     030B  00FB               	movwf	??_ShowShape+2
  3712     030C  0875               	movf	ShowShape@coord+1,w
  3713     030D  1803               	skipnc
  3714     030E  3E01               	addlw	1
  3715     030F  3E00               	addlw	0
  3716     0310  00FC               	movwf	??_ShowShape+3
  3717     0311  087B               	movf	??_ShowShape+2,w
  3718     0312  0084               	movwf	4
  3719     0313  1783               	bsf	3,7
  3720     0314  1C7C               	btfss	??_ShowShape+3,0
  3721     0315  1383               	bcf	3,7
  3722     0316  0A00               	incf	0,w
  3723     0317  2B1A               	goto	u754
  3724     0318                     u755:
  3725     0318  1003               	clrc
  3726     0319  0DFA               	rlf	??_ShowShape+1,f
  3727     031A                     u754:
  3728     031A  3EFF               	addlw	-1
  3729     031B  1D03               	skipz
  3730     031C  2B18               	goto	u755
  3731     031D  087A               	movf	??_ShowShape+1,w
  3732     031E  00F3               	movwf	SendToSegment@data
  3733     031F  120A  118A  20AF  120A  118A  	fcall	_SendToSegment
  3734     0324                     l1370:
  3735                           
  3736                           ;shape.c: 13:     }
  3737     0324  3001               	movlw	1
  3738     0325  1283               	bcf	3,5	;RP0=0, select bank0
  3739     0326  1303               	bcf	3,6	;RP1=0, select bank0
  3740     0327  07A2               	addwf	ShowShape@pos,f
  3741     0328  1803               	skipnc
  3742     0329  0AA3               	incf	ShowShape@pos+1,f
  3743     032A  3000               	movlw	0
  3744     032B  07A3               	addwf	ShowShape@pos+1,f
  3745     032C                     l1372:
  3746     032C  0874               	movf	ShowShape@coord,w
  3747     032D  0084               	movwf	4
  3748     032E  1783               	bsf	3,7
  3749     032F  1C75               	btfss	ShowShape@coord+1,0
  3750     0330  1383               	bcf	3,7
  3751     0331  0800               	movf	0,w
  3752     0332  00F9               	movwf	??_ShowShape
  3753     0333  0A84               	incf	4,f
  3754     0334  0800               	movf	0,w
  3755     0335  00FA               	movwf	??_ShowShape+1
  3756     0336  0876               	movf	ShowShape@countElemntArray,w
  3757     0337  0779               	addwf	??_ShowShape,w
  3758     0338  00FB               	movwf	??_ShowShape+2
  3759     0339  0877               	movf	ShowShape@countElemntArray+1,w
  3760     033A  1803               	skipnc
  3761     033B  0A77               	incf	ShowShape@countElemntArray+1,w
  3762     033C  077A               	addwf	??_ShowShape+1,w
  3763     033D  00FC               	movwf	??_ShowShape+3
  3764     033E  087C               	movf	??_ShowShape+3,w
  3765     033F  3A80               	xorlw	128
  3766     0340  00FD               	movwf	??_ShowShape+4
  3767     0341  0823               	movf	ShowShape@pos+1,w
  3768     0342  3A80               	xorlw	128
  3769     0343  027D               	subwf	??_ShowShape+4,w
  3770     0344  1D03               	skipz
  3771     0345  2B48               	goto	u765
  3772     0346  0822               	movf	ShowShape@pos,w
  3773     0347  027B               	subwf	??_ShowShape+2,w
  3774     0348                     u765:
  3775     0348  1803               	skipnc
  3776     0349  2B4B               	goto	u761
  3777     034A  2B4C               	goto	u760
  3778     034B                     u761:
  3779     034B  2AE1               	goto	l1366
  3780     034C                     u760:
  3781     034C                     l107:
  3782     034C  0008               	return
  3783     034D                     __end_of_ShowShape:
  3784                           
  3785                           	psect	text17
  3786     00AF                     __ptext17:	
  3787 ;; *************** function _SendToSegment *****************
  3788 ;; Defined at:
  3789 ;;		line 34 in file "matrix.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  segment         2    1[COMMON] int 
  3792 ;;  data            1    3[COMMON] unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         3       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         3       0       0       0       0
  3808 ;;Total ram usage:        3 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 1
  3811 ;; This function calls:
  3812 ;;		_SpiSendByte
  3813 ;; This function is called by:
  3814 ;;		_SpiClearMatrix
  3815 ;;		_MatrixInit
  3816 ;;		_ShowShape
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820     00AF                     _SendToSegment:	
  3821                           ;psect for function _SendToSegment
  3822                           
  3823     00AF                     l1276:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  3826                           
  3827                           
  3828                           ;matrix.c: 35:     RA5 = 0;
  3829     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  3830     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  3831     00B1  1285               	bcf	5,5	;volatile
  3832     00B2                     l1278:
  3833                           
  3834                           ;matrix.c: 36:     SpiSendByte((char)segment);
  3835     00B2  0871               	movf	SendToSegment@segment,w
  3836     00B3  120A  118A  206E  120A  118A  	fcall	_SpiSendByte
  3837                           
  3838                           ;matrix.c: 37:     SpiSendByte(data);
  3839     00B8  0873               	movf	SendToSegment@data,w
  3840     00B9  120A  118A  206E  120A  118A  	fcall	_SpiSendByte
  3841     00BE                     l1280:
  3842                           
  3843                           ;matrix.c: 38:     RA5 = 1;
  3844     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3845     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3846     00C0  1685               	bsf	5,5	;volatile
  3847     00C1                     l90:
  3848     00C1  0008               	return
  3849     00C2                     __end_of_SendToSegment:
  3850                           
  3851                           	psect	text18
  3852     006E                     __ptext18:	
  3853 ;; *************** function _SpiSendByte *****************
  3854 ;; Defined at:
  3855 ;;		line 18 in file "spi.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  data            1    wreg     unsigned char 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  data            1    0[COMMON] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       0       0       0
  3870 ;;      Locals:         1       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0
  3872 ;;      Totals:         1       0       0       0       0
  3873 ;;Total ram usage:        1 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_SendToSegment
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882     006E                     _SpiSendByte:	
  3883                           ;psect for function _SpiSendByte
  3884                           
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _SpiSendByte: [wreg]
  3888                           ;SpiSendByte@data stored from wreg
  3889     006E  00F0               	movwf	SpiSendByte@data
  3890     006F                     l1188:
  3891                           
  3892                           ;spi.c: 19:     SSPBUF = data;
  3893     006F  0870               	movf	SpiSendByte@data,w
  3894     0070  1283               	bcf	3,5	;RP0=0, select bank0
  3895     0071  1303               	bcf	3,6	;RP1=0, select bank0
  3896     0072  0093               	movwf	19	;volatile
  3897     0073                     l68:	
  3898                           ;spi.c: 20:     while (!SSPIF);
  3899                           
  3900     0073  1D8C               	btfss	12,3	;volatile
  3901     0074  2876               	goto	u471
  3902     0075  2877               	goto	u470
  3903     0076                     u471:
  3904     0076  2873               	goto	l68
  3905     0077                     u470:
  3906     0077                     l70:
  3907                           
  3908                           ;spi.c: 21:     SSPIF = 0;
  3909     0077  118C               	bcf	12,3	;volatile
  3910     0078                     l71:
  3911     0078  0008               	return
  3912     0079                     __end_of_SpiSendByte:
  3913                           
  3914                           	psect	text19
  3915     00D8                     __ptext19:	
  3916 ;; *************** function _MovieUp *****************
  3917 ;; Defined at:
  3918 ;;		line 20 in file "shape.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3921 ;;		 -> main@shapePosition(4), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         2       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0
  3935 ;;      Temps:          2       0       0       0       0
  3936 ;;      Totals:         4       0       0       0       0
  3937 ;;Total ram usage:        4 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_MovieShape
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946     00D8                     _MovieUp:	
  3947                           ;psect for function _MovieUp
  3948                           
  3949     00D8                     l1376:	
  3950                           ;incstack = 0
  3951                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3952                           
  3953                           
  3954                           ;shape.c: 21:     _shapePosition->y--;
  3955     00D8  0870               	movf	MovieUp@_shapePosition,w
  3956     00D9  3E02               	addlw	2
  3957     00DA  00F2               	movwf	??_MovieUp
  3958     00DB  0871               	movf	MovieUp@_shapePosition+1,w
  3959     00DC  1803               	skipnc
  3960     00DD  3E01               	addlw	1
  3961     00DE  3E00               	addlw	0
  3962     00DF  00F3               	movwf	??_MovieUp+1
  3963     00E0  0872               	movf	??_MovieUp,w
  3964     00E1  0084               	movwf	4
  3965     00E2  1783               	bsf	3,7
  3966     00E3  1C73               	btfss	??_MovieUp+1,0
  3967     00E4  1383               	bcf	3,7
  3968     00E5  30FF               	movlw	255
  3969     00E6  0780               	addwf	0,f
  3970     00E7  0F84               	incfsz	4,f
  3971     00E8  0800               	movf	0,w
  3972     00E9  1803               	skipnc
  3973     00EA  0A00               	incf	0,w
  3974     00EB  00FF               	movwf	btemp+1
  3975     00EC  30FF               	movlw	255
  3976     00ED  077F               	addwf	btemp+1,w
  3977     00EE  0080               	movwf	0
  3978     00EF  0384               	decf	4,f
  3979     00F0                     l113:
  3980     00F0  0008               	return
  3981     00F1                     __end_of_MovieUp:
  3982                           
  3983                           	psect	text20
  3984     0063                     __ptext20:	
  3985 ;; *************** function _MovieRigth *****************
  3986 ;; Defined at:
  3987 ;;		line 28 in file "shape.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3990 ;;		 -> main@shapePosition(4), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         2       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0
  4005 ;;      Totals:         2       0       0       0       0
  4006 ;;Total ram usage:        2 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_MovieShape
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     0063                     _MovieRigth:	
  4016                           ;psect for function _MovieRigth
  4017                           
  4018     0063                     l1380:	
  4019                           ;incstack = 0
  4020                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  4021                           
  4022                           
  4023                           ;shape.c: 29:     _shapePosition->x++;
  4024     0063  0870               	movf	MovieRigth@_shapePosition,w
  4025     0064  0084               	movwf	4
  4026     0065  1783               	bsf	3,7
  4027     0066  1C71               	btfss	MovieRigth@_shapePosition+1,0
  4028     0067  1383               	bcf	3,7
  4029     0068  3001               	movlw	1
  4030     0069  0780               	addwf	0,f
  4031     006A  0A84               	incf	4,f
  4032     006B  1803               	skipnc
  4033     006C  0A80               	incf	0,f
  4034     006D                     l119:
  4035     006D  0008               	return
  4036     006E                     __end_of_MovieRigth:
  4037                           
  4038                           	psect	text21
  4039     0079                     __ptext21:	
  4040 ;; *************** function _MovieLeft *****************
  4041 ;; Defined at:
  4042 ;;		line 24 in file "shape.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4045 ;;		 -> main@shapePosition(4), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr0l, fsr0h, btemp+1
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         2       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0
  4060 ;;      Totals:         2       0       0       0       0
  4061 ;;Total ram usage:        2 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_MovieShape
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070     0079                     _MovieLeft:	
  4071                           ;psect for function _MovieLeft
  4072                           
  4073     0079                     l1378:	
  4074                           ;incstack = 0
  4075                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  4076                           
  4077                           
  4078                           ;shape.c: 25:     _shapePosition->x--;
  4079     0079  0870               	movf	MovieLeft@_shapePosition,w
  4080     007A  0084               	movwf	4
  4081     007B  1783               	bsf	3,7
  4082     007C  1C71               	btfss	MovieLeft@_shapePosition+1,0
  4083     007D  1383               	bcf	3,7
  4084     007E  30FF               	movlw	255
  4085     007F  0780               	addwf	0,f
  4086     0080  0F84               	incfsz	4,f
  4087     0081  0800               	movf	0,w
  4088     0082  1803               	skipnc
  4089     0083  0A00               	incf	0,w
  4090     0084  00FF               	movwf	btemp+1
  4091     0085  30FF               	movlw	255
  4092     0086  077F               	addwf	btemp+1,w
  4093     0087  0080               	movwf	0
  4094     0088  0384               	decf	4,f
  4095     0089                     l116:
  4096     0089  0008               	return
  4097     008A                     __end_of_MovieLeft:
  4098                           
  4099                           	psect	text22
  4100     009C                     __ptext22:	
  4101 ;; *************** function _MovieDown *****************
  4102 ;; Defined at:
  4103 ;;		line 16 in file "shape.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4106 ;;		 -> main@shapePosition(4), 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         2       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0
  4120 ;;      Temps:          2       0       0       0       0
  4121 ;;      Totals:         4       0       0       0       0
  4122 ;;Total ram usage:        4 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_MovieShape
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131     009C                     _MovieDown:	
  4132                           ;psect for function _MovieDown
  4133                           
  4134     009C                     l1374:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  4137                           
  4138                           
  4139                           ;shape.c: 17:     _shapePosition->y++;
  4140     009C  0870               	movf	MovieDown@_shapePosition,w
  4141     009D  3E02               	addlw	2
  4142     009E  00F2               	movwf	??_MovieDown
  4143     009F  0871               	movf	MovieDown@_shapePosition+1,w
  4144     00A0  1803               	skipnc
  4145     00A1  3E01               	addlw	1
  4146     00A2  3E00               	addlw	0
  4147     00A3  00F3               	movwf	??_MovieDown+1
  4148     00A4  0872               	movf	??_MovieDown,w
  4149     00A5  0084               	movwf	4
  4150     00A6  1783               	bsf	3,7
  4151     00A7  1C73               	btfss	??_MovieDown+1,0
  4152     00A8  1383               	bcf	3,7
  4153     00A9  3001               	movlw	1
  4154     00AA  0780               	addwf	0,f
  4155     00AB  0A84               	incf	4,f
  4156     00AC  1803               	skipnc
  4157     00AD  0A80               	incf	0,f
  4158     00AE                     l110:
  4159     00AE  0008               	return
  4160     00AF                     __end_of_MovieDown:
  4161     0002                     ___latbits      equ	2
  4162     007E                     btemp           set	126	;btemp
  4163     007E                     wtemp0          set	126
  4164                           
  4165                           	psect	config
  4166                           
  4167                           ;Config register CONFIG @ 0x2007
  4168                           ;	Oscillator Selection bits
  4169                           ;	FOSC = HS, HS oscillator
  4170                           ;	Watchdog Timer Enable bit
  4171                           ;	WDTE = OFF, WDT disabled
  4172                           ;	Power-up Timer Enable bit
  4173                           ;	PWRTE = OFF, PWRT disabled
  4174                           ;	FLASH Program Memory Code Protection bits
  4175                           ;	CP = OFF, Code protection off
  4176                           ;	Brown-out Reset Enable bit
  4177                           ;	BOREN = OFF, BOR disabled
  4178                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  4179                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4180                           ;	Data EE Memory Code Protection
  4181                           ;	CPD = OFF, Code Protection off
  4182                           ;	FLASH Program Memory Write Enable
  4183                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  4184                           ;	In-Circuit Debugger Mode bit
  4185                           ;	DEBUG = 0x1, unprogrammed default
  4186     2007                     	org	8199
  4187     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    8
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      79
    BANK1            80      0       9
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    calloc@new_ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    ChangeOfCoordinates@_figure	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ChangeOfCoordinates@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    Rotate@array_	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@res	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    S655$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    SetPosition@position	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__calloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _MatrixInit->_SpiClearMatrix
    _calloc->_memset
    _memset->___wmul
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape
    _SpiClearMatrix->_SendToSegment
    _ShowShape->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_ChangeOfCoordinates
    _ChangeOfCoordinates->_Rotate
    _Rotate->_calloc
    _calloc->_malloc
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4123
                                             62 BANK0      9     9      0
                _ChangeOfCoordinates
                         _MatrixInit
                          _PortBInit
                        _SetPosition
                            _SpiInit
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPosition                                          8     2      6      91
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _ChangeOfCoordinates                                 12     7      5    3707
                                             50 BANK0     12     7      5
                         _MovieShape
                             _Rotate
 ---------------------------------------------------------------------------------
 (2) _Rotate                                              20    17      3    2575
                                             30 BANK0     20    17      3
                             _calloc
                               _free
 ---------------------------------------------------------------------------------
 (3) _free                                                12    10      2     289
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (3) _calloc                                               6     2      4    1813
                                             24 BANK0      6     2      4
                             ___wmul
                             _malloc
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6      99
                                              6 COMMON     8     2      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _malloc                                              14    12      2    1461
                                              8 COMMON     4     2      2
                                             14 BANK0     10    10      0
                      ___expand_heap
                 ___simple_search_fl
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___simple_search_fl                                  22    20      2     827
                                              0 COMMON     8     6      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (5) ___expand_heap                                        5     4      1     136
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MovieShape                                           8     3      5     729
                                              4 BANK0      8     3      5
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _ShowShape
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (2) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _ShowShape                                           14     9      5     312
                                              4 COMMON    10     5      5
                                              0 BANK0      4     4      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (4) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeOfCoordinates
     _MovieShape
       _MovieDown
       _MovieLeft
       _MovieRigth
       _MovieUp
       _ShowShape
         _SendToSegment
           _SpiSendByte
       _SpiClearMatrix
         _SendToSegment
     _Rotate
       _calloc
         ___wmul
         _malloc
           ___expand_heap
           ___simple_search_fl
           ___wmul (ARG)
         _memset
           ___wmul (ARG)
       _free
   _MatrixInit
     _SendToSegment
     _SpiClearMatrix
   _PortBInit
   _SetPosition
   _SpiInit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       9     11.2%
BITBANK1            80      0       0      0.0%
BANK0               80     71      79     98.8%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     102      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 18 10:57:19 2024

                      _SpiClearMatrix 00C2                                     pc 0002  
                                  l19 0351                                    l29 03F4  
                                  l70 0077                                    l71 0078  
                                  l48 0062                                    l65 009B  
                                  l90 00C1                                    l68 0073  
                                  l84 00D7                                    l87 0191  
                                  fsr 0004                   ___wmul@multiplicand 0072  
                     SpiSendByte@data 0070                                   l101 010D  
                                 l110 00AE                                   l113 00F0  
                                 l107 034C                                   l116 0089  
                                 l140 0563                                   l119 006D  
                                 l232 0139                                   l129 02CB  
                                 l234 0151                                   l710 0705  
                                 l702 07D7                                   l713 07AE  
                                 l743 04A6                                   l719 0651  
                                 l761 0237                                   l745 0483  
                                 l747 047C                                   l739 0405  
                                 l772 012C                                   l766 026F  
                                 l696 01D9                                   _RA5 002D  
                                 u500 0682                                   u501 0681  
                                 u510 06D8                                   u511 06D7  
                                 u600 0254                                   u520 06DE  
                                 u601 0253                                   u521 06DD  
                                 u610 025E                                   u530 06FC  
                                 u611 025D                                   u531 06FB  
                                 u515 06D4                                   u620 0133  
                                 u540 0722                                   u700 0452  
                                 u621 0132                                   u541 0721  
                                 u701 0451                                   u470 0077  
                                 u550 0728                                   u710 046D  
                                 u471 0076                                   u615 025A  
                                 u551 0727                                   u535 06F8  
                                 u711 046C                                   u560 0756  
                                 u480 0660                                   u720 0478  
                                 u800 059A                                   u561 0755  
                                 u481 065F                                   u721 0477  
                                 u705 044E                                   u801 0599  
                                 u650 014D                                   u570 07B8  
                                 u490 067C                                   u730 012C  
                                 u810 060A                                   u651 014C  
                                 u635 013A                                   u571 07B7  
                                 u491 067B                                   u731 012B  
                                 u811 0609                                   u740 00D7  
                                 u580 0233                                   u660 03FF  
                                 u820 04C2                                   u900 03D2  
                                 u741 00D6                                   u645 0141  
                                 u581 0232                                   u725 0474  
                                 u661 03FE                                   u805 0596  
                                 u821 04C1                                   u901 03D1  
                                 u590 0240                                   u670 040E  
                                 u830 04CE                                   u910 03F4  
                                 u591 023F                                   u575 07B4  
                                 u495 0678                                   u671 040D  
                                 u815 0606                                   u831 04CD  
                                 u911 03F3                                   u760 034C  
                                 u680 0422                                   u840 04DD  
                                 u761 034B                                   u681 0421  
                                 u841 04DC                                   u905 03CE  
                                 u754 031A                                   u690 0440  
                                 u770 01B6                                   u755 0318  
                                 u691 043F                                   u771 01B5  
                                 u915 03F0                                   u780 056E  
                                 u765 0348                                   u781 056D  
                                 u790 0584                                   u870 0503  
                                 u854 04EA                                   u791 0583  
                                 u855 04E8                                   u927 0158  
                                 u880 0531                                   u864 04F4  
                                 u865 04F2                                   u937 03B7  
                                 u890 0558                                   u891 0557  
                                 u895 0554                                   fsr0 0004  
                                 indf 0000                                  l1200 0668  
                                l1202 067C                                  l1220 06FD  
                                l1204 0682                                  l1212 06C4  
                                l1300 03FF                                  l1230 0756  
                                l1222 0709                                  l1214 06D8  
                                l1206 06A8                                  l1302 040E  
                                l1240 07B8                                  l1232 0770  
                                l1216 06DE                                  l1208 06BB  
                                l1224 071C                                  l1320 0452  
                                l1312 042B                                  l1304 0413  
                                l1400 059A                                  l1242 07BD  
                                l1234 077A                                  l1226 0722  
                                l1330 046E                                  l1322 045A  
                                l1314 042B                                  l1306 0422  
                                l1402 05BF                                  l1410 05E6  
                                l1260 0244                                  l1252 0223  
                                l1244 07CF                                  l1236 0798  
                                l1228 0728                                  l1340 0499  
                                l1332 0478                                  l1324 0467  
                                l1316 043A                                  l1308 0428  
                                l1412 060A                                  l1404 05E1  
                                l1430 0292                                  l1422 0273  
                                l1262 024B                                  l1254 022B  
                                l1238 07AA                                  l1190 0652  
                                l1342 049D                                  l1334 0487  
                                l1318 0440                                  l1350 0113  
                                l1510 03DF                                  l1502 039A  
                                l1280 00BE                                  l1360 00D1  
                                l1424 0274                                  l1272 0267  
                                l1264 0254                                  l1256 0233  
                                l1192 065A                                  l1336 048B  
                                l1344 04A2                                  l1352 011A  
                                l1416 062D                                  l1512 03E7  
                                l1504 03AF                                  l1520 008D  
                                l1370 0324                                  l1362 02CC  
                                l1426 027E                                  l1434 029C  
                                l1290 0147                                  l1282 012D  
                                l1266 025E                                  l1258 0240  
                                l1194 0660                                  l1338 0495  
                                l1354 011E                                  l1418 0640  
                                l1450 04C2                                  l1506 03C5  
                                l1530 0161                                  l1522 0095  
                                l1380 0063                                  l1188 006F  
                                l1276 00AF                                  l1372 032C  
                                l1364 02CC                                  l1356 00C2  
                                l1428 0288                                  l1436 02B5  
                                l1292 014D                                  l1284 012F  
                                l1268 0264                                  l1348 010E  
                                l1460 04D9                                  l1452 04CA  
                                l1508 03D2                                  l1604 03A1  
                                l1532 016B                                  l1540 005C  
                                l1524 0097                                  l1374 009C  
                                l1278 00B2                                  l1366 02E1  
                                l1358 00C4                                  l1438 02BA  
                                l1606 02A4                                  l1286 0133  
                                l1198 0663                                  l1382 0192  
                                l1446 04A7                                  l1534 0176  
                                l1526 0152                                  l1542 00F1  
                                l1518 008A                                  l1550 01FF  
                                l1376 00D8                                  l1368 02FD  
                                l1288 0140                                  l1296 03F5  
                                l1384 01B0                                  l1392 0564  
                                l1480 0544                                  l1472 051B  
                                l1464 04DE                                  l1456 04CF  
                                l1448 04BC                                  l1536 0181  
                                l1528 015E                                  l1544 00FB  
                                l1552 020E                                  l1378 0079  
                                l1298 03F9                                  l1386 01B6  
                                l1482 054A                                  l1466 050E  
                                l1458 04D7                                  l1538 018C  
                                l1546 01DA                                  l1388 01D3  
                                l1396 056F                                  l1468 0514  
                                l1476 0522                                  l1484 0558  
                                l1492 0356                                  l1548 01E4  
                                l1398 0584                                  l1478 0525  
                                l1494 0367                                  l1486 034D  
                                l1496 0378                                  l1498 0389  
                                _brkp 0067                                  _free 0564  
                                _main 01DA                                  btemp 007E  
                                start 0000                __end_of_SpiClearMatrix 00D8  
                     __end_of_MovieUp 00F1                       __end_of_SpiInit 009C  
                               ?_free 0070                                 ?_main 0070  
                 _ChangeOfCoordinates 034D                                 _PORTA 0005  
                               _PORTB 0006                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _SSPIF 0063                       SpiClearMatrix@i 0076  
                   SendToSegment@data 0073                                 _errno 00A4  
                               free@c 007A                                 pclath 000A  
                    ___expand_heap@pn 0070                                 status 0003  
                               wtemp0 007E                          main@square_1 005E  
                ?_ChangeOfCoordinates 0052                       ?_SpiClearMatrix 0070  
                     __initialization 07D8                          __end_of_free 0652  
                        __end_of_main 0223                         ___expand_heap 0223  
                          _MatrixInit 0152                                ??_free 0072  
                              ??_main 007E                         ??_SetPosition 0076  
                       calloc@new_ptr 003C                 ??_ChangeOfCoordinates 0057  
                              _SSPCON 0014                                _SSPBUF 0013  
                          _MovieShape 0270                            _MovieRigth 0063  
                MovieShape@shapeArray 0026                             ??_MovieUp 0072  
                           ??_SpiInit 0070                         ??_SpiSendByte 0070  
                              _Rotate 04A7                        ?___expand_heap 0070  
             ___simple_search_fl@best 002C               ___simple_search_fl@last 0026  
             ___simple_search_fl@next 0028                                ___wmul 012D  
                              _calloc 0192                                _malloc 03F5  
                              _memset 010E                        ShowShape@coord 0074  
             __end_of__initialization 07FC                   __end_of_SetPosition 010E  
                          ___freelist 006D                        __pcstackCOMMON 0070  
                        __pidataBANK1 0059                           ?_MatrixInit 0070  
                 __end_of_SpiSendByte 0079     ChangeOfCoordinates@_shapePosition 0052  
ChangeOfCoordinates@_countElemntArray 0055            __end_of___simple_search_fl 07D8  
                          __pbssBANK0 0067                            __pbssBANK1 00A0  
                   __end_of_MovieLeft 008A                     __end_of_MovieDown 00AF  
            MovieShape@_shapePosition 0024                     __end_of_PortBInit 0063  
                   __end_of_ShowShape 034D                           ?_MovieShape 0024  
                   main@shapePosition 0063                           ?_MovieRigth 0070  
                     ??___expand_heap 0071                            __pmaintext 01DA  
                             ?_Rotate 003E                               ?___wmul 0070  
                             ?_calloc 0038                               ?_malloc 0078  
                             ?_memset 0076                         MovieShape@dir 002B  
           ShowShape@countElemntArray 0076                           _SetPosition 00F1  
                             _SSPSTAT 0094                            __stringtab 0003  
                    ??_SpiClearMatrix 0074                            calloc@size 003A  
                             _MovieUp 00D8                               _SpiInit 008A  
                       _SendToSegment 00AF                  ___simple_search_fl@c 002A  
                ___simple_search_fl@n 0070                           _SpiSendByte 006E  
                             Rotate@i 004A                               Rotate@x 0048  
                             Rotate@y 004C              ___simple_search_fl@split 0024  
                             __ptext1 008A                               __ptext2 00F1  
                             __ptext3 005C                               __ptext4 0152  
                             __ptext5 034D                               __ptext6 04A7  
                             __ptext7 0564                               __ptext8 0192  
                             __ptext9 010E               ChangeOfCoordinates@step 005A  
                             free@ptr 0070                  end_of_initialization 07FC  
                             malloc@m 002E                               malloc@n 0078  
                             malloc@p 0034                ___expand_heap@new_brkp 0073  
                             memset@c 0078                               memset@n 007A  
                             memset@p 007C                        ?_SendToSegment 0071  
                   __end_ofmain@delay 000D                   SetPosition@position 0070  
         __end_of_ChangeOfCoordinates 03F5               MovieLeft@_shapePosition 0070  
          ChangeOfCoordinates@_figure 0054                        __end_of_Rotate 0564  
                      __end_of___wmul 0152                          ??_MatrixInit 0077  
                      __end_of_calloc 01DA                        __end_of_malloc 04A7  
                      __end_of_memset 012D                       ___expand_heap@n 0071  
                 start_initialization 07D8                            malloc@lock 00A0  
                          malloc@size 0032                    __end_of_MatrixInit 0192  
                     ??_SendToSegment 0074                          ??_MovieShape 0029  
                        ??_MovieRigth 0072                             _MovieLeft 0079  
                           _MovieDown 009C                    ___simple_search_fl 0652  
                           _PortBInit 005C                              ??_Rotate 0041  
                           _ShowShape 02CC          ___simple_search_fl@best_last 0022  
                            ??___wmul 0074                              ??_calloc 007E  
                         __pdataBANK1 00A6                              ??_malloc 007A  
                            ??_memset 007C                   ?___simple_search_fl 0070  
                          memset@dest 0076                         ShowShape@_pos 0020  
                        SetPosition@x 0072                          SetPosition@y 0074  
                           Rotate@res 004E                             ___heap_hi 0170  
                           ___heap_lo 0110                             ___latbits 0002  
                       __pcstackBANK0 0020                    __end_of_MovieShape 02CC  
                  __end_of_MovieRigth 006E                          ?_SetPosition 0070  
                main@countElemntArray 0061                   ShowShape@shapeArray 0078  
                ??___simple_search_fl 0072                            ?_MovieLeft 0070  
                          ?_MovieDown 0070                              ?_MovieUp 0070  
                            ?_SpiInit 0070                            ?_PortBInit 0070  
               __end_of___expand_heap 0270                          ?_SpiSendByte 0070  
                          ?_ShowShape 0074                             __pstrings 0003  
             MovieDown@_shapePosition 0070      __end_ofChangeOfCoordinates@delay 0011  
               MovieUp@_shapePosition 0070                        ___wmul@product 0074  
                         __stringbase 0008                     ___wmul@multiplier 0070  
                           main@delay 0009                             malloc@end 0069  
                           malloc@cur 006B                             malloc@new 0036  
                         ??_MovieLeft 0072                           ??_MovieDown 0072  
                         calloc@nmemb 0038                           ??_PortBInit 0070  
                         ??_ShowShape 0079                          ShowShape@pos 0022  
                            Rotate@_i 0050                    __end_of__stringtab 0009  
                            __ptext10 03F5                              __ptext11 0652  
                            __ptext20 0063                              __ptext12 0223  
                            __ptext21 0079                              __ptext13 012D  
                            __ptext22 009C                              __ptext14 0270  
                            __ptext15 00C2                              __ptext16 02CC  
                            __ptext17 00AF                              __ptext18 006E  
                            __ptext19 00D8              ChangeOfCoordinates@delay 000D  
                            main@F927 00A6                  SendToSegment@segment 0071  
                            free@cptr 0078                              malloc@sz 0030  
   ___simple_search_fl@remaining_size 0020                  ChangeOfCoordinates@i 005C  
                           stringcode 0003                 __end_of_SendToSegment 00C2  
            MovieRigth@_shapePosition 0070            MovieShape@countElemntArray 0027  
                            stringdir 0003                              stringtab 0003  
                        Rotate@array_ 003E                          Rotate@length 003F  
