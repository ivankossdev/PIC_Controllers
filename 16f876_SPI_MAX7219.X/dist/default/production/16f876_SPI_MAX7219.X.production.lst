

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec  4 13:49:19 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F876 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     000A                     PCLATH          equ	10	;# 
   121     000B                     INTCON          equ	11	;# 
   122     000C                     PIR1            equ	12	;# 
   123     000D                     PIR2            equ	13	;# 
   124     000E                     TMR1            equ	14	;# 
   125     000E                     TMR1L           equ	14	;# 
   126     000F                     TMR1H           equ	15	;# 
   127     0010                     T1CON           equ	16	;# 
   128     0011                     TMR2            equ	17	;# 
   129     0012                     T2CON           equ	18	;# 
   130     0013                     SSPBUF          equ	19	;# 
   131     0014                     SSPCON          equ	20	;# 
   132     0015                     CCPR1           equ	21	;# 
   133     0015                     CCPR1L          equ	21	;# 
   134     0016                     CCPR1H          equ	22	;# 
   135     0017                     CCP1CON         equ	23	;# 
   136     0018                     RCSTA           equ	24	;# 
   137     0019                     TXREG           equ	25	;# 
   138     001A                     RCREG           equ	26	;# 
   139     001B                     CCPR2           equ	27	;# 
   140     001B                     CCPR2L          equ	27	;# 
   141     001C                     CCPR2H          equ	28	;# 
   142     001D                     CCP2CON         equ	29	;# 
   143     001E                     ADRESH          equ	30	;# 
   144     001F                     ADCON0          equ	31	;# 
   145     0081                     OPTION_REG      equ	129	;# 
   146     0085                     TRISA           equ	133	;# 
   147     0086                     TRISB           equ	134	;# 
   148     0087                     TRISC           equ	135	;# 
   149     008C                     PIE1            equ	140	;# 
   150     008D                     PIE2            equ	141	;# 
   151     008E                     PCON            equ	142	;# 
   152     0091                     SSPCON2         equ	145	;# 
   153     0092                     PR2             equ	146	;# 
   154     0093                     SSPADD          equ	147	;# 
   155     0094                     SSPSTAT         equ	148	;# 
   156     0098                     TXSTA           equ	152	;# 
   157     0099                     SPBRG           equ	153	;# 
   158     009E                     ADRESL          equ	158	;# 
   159     009F                     ADCON1          equ	159	;# 
   160     010C                     EEDATA          equ	268	;# 
   161     010D                     EEADR           equ	269	;# 
   162     010E                     EEDATH          equ	270	;# 
   163     010F                     EEADRH          equ	271	;# 
   164     018C                     EECON1          equ	396	;# 
   165     018D                     EECON2          equ	397	;# 
   166     0000                     INDF            equ	0	;# 
   167     0001                     TMR0            equ	1	;# 
   168     0002                     PCL             equ	2	;# 
   169     0003                     STATUS          equ	3	;# 
   170     0004                     FSR             equ	4	;# 
   171     0005                     PORTA           equ	5	;# 
   172     0006                     PORTB           equ	6	;# 
   173     0007                     PORTC           equ	7	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PIR1            equ	12	;# 
   177     000D                     PIR2            equ	13	;# 
   178     000E                     TMR1            equ	14	;# 
   179     000E                     TMR1L           equ	14	;# 
   180     000F                     TMR1H           equ	15	;# 
   181     0010                     T1CON           equ	16	;# 
   182     0011                     TMR2            equ	17	;# 
   183     0012                     T2CON           equ	18	;# 
   184     0013                     SSPBUF          equ	19	;# 
   185     0014                     SSPCON          equ	20	;# 
   186     0015                     CCPR1           equ	21	;# 
   187     0015                     CCPR1L          equ	21	;# 
   188     0016                     CCPR1H          equ	22	;# 
   189     0017                     CCP1CON         equ	23	;# 
   190     0018                     RCSTA           equ	24	;# 
   191     0019                     TXREG           equ	25	;# 
   192     001A                     RCREG           equ	26	;# 
   193     001B                     CCPR2           equ	27	;# 
   194     001B                     CCPR2L          equ	27	;# 
   195     001C                     CCPR2H          equ	28	;# 
   196     001D                     CCP2CON         equ	29	;# 
   197     001E                     ADRESH          equ	30	;# 
   198     001F                     ADCON0          equ	31	;# 
   199     0081                     OPTION_REG      equ	129	;# 
   200     0085                     TRISA           equ	133	;# 
   201     0086                     TRISB           equ	134	;# 
   202     0087                     TRISC           equ	135	;# 
   203     008C                     PIE1            equ	140	;# 
   204     008D                     PIE2            equ	141	;# 
   205     008E                     PCON            equ	142	;# 
   206     0091                     SSPCON2         equ	145	;# 
   207     0092                     PR2             equ	146	;# 
   208     0093                     SSPADD          equ	147	;# 
   209     0094                     SSPSTAT         equ	148	;# 
   210     0098                     TXSTA           equ	152	;# 
   211     0099                     SPBRG           equ	153	;# 
   212     009E                     ADRESL          equ	158	;# 
   213     009F                     ADCON1          equ	159	;# 
   214     010C                     EEDATA          equ	268	;# 
   215     010D                     EEADR           equ	269	;# 
   216     010E                     EEDATH          equ	270	;# 
   217     010F                     EEADRH          equ	271	;# 
   218     018C                     EECON1          equ	396	;# 
   219     018D                     EECON2          equ	397	;# 
   220     0000                     INDF            equ	0	;# 
   221     0001                     TMR0            equ	1	;# 
   222     0002                     PCL             equ	2	;# 
   223     0003                     STATUS          equ	3	;# 
   224     0004                     FSR             equ	4	;# 
   225     0005                     PORTA           equ	5	;# 
   226     0006                     PORTB           equ	6	;# 
   227     0007                     PORTC           equ	7	;# 
   228     000A                     PCLATH          equ	10	;# 
   229     000B                     INTCON          equ	11	;# 
   230     000C                     PIR1            equ	12	;# 
   231     000D                     PIR2            equ	13	;# 
   232     000E                     TMR1            equ	14	;# 
   233     000E                     TMR1L           equ	14	;# 
   234     000F                     TMR1H           equ	15	;# 
   235     0010                     T1CON           equ	16	;# 
   236     0011                     TMR2            equ	17	;# 
   237     0012                     T2CON           equ	18	;# 
   238     0013                     SSPBUF          equ	19	;# 
   239     0014                     SSPCON          equ	20	;# 
   240     0015                     CCPR1           equ	21	;# 
   241     0015                     CCPR1L          equ	21	;# 
   242     0016                     CCPR1H          equ	22	;# 
   243     0017                     CCP1CON         equ	23	;# 
   244     0018                     RCSTA           equ	24	;# 
   245     0019                     TXREG           equ	25	;# 
   246     001A                     RCREG           equ	26	;# 
   247     001B                     CCPR2           equ	27	;# 
   248     001B                     CCPR2L          equ	27	;# 
   249     001C                     CCPR2H          equ	28	;# 
   250     001D                     CCP2CON         equ	29	;# 
   251     001E                     ADRESH          equ	30	;# 
   252     001F                     ADCON0          equ	31	;# 
   253     0081                     OPTION_REG      equ	129	;# 
   254     0085                     TRISA           equ	133	;# 
   255     0086                     TRISB           equ	134	;# 
   256     0087                     TRISC           equ	135	;# 
   257     008C                     PIE1            equ	140	;# 
   258     008D                     PIE2            equ	141	;# 
   259     008E                     PCON            equ	142	;# 
   260     0091                     SSPCON2         equ	145	;# 
   261     0092                     PR2             equ	146	;# 
   262     0093                     SSPADD          equ	147	;# 
   263     0094                     SSPSTAT         equ	148	;# 
   264     0098                     TXSTA           equ	152	;# 
   265     0099                     SPBRG           equ	153	;# 
   266     009E                     ADRESL          equ	158	;# 
   267     009F                     ADCON1          equ	159	;# 
   268     010C                     EEDATA          equ	268	;# 
   269     010D                     EEADR           equ	269	;# 
   270     010E                     EEDATH          equ	270	;# 
   271     010F                     EEADRH          equ	271	;# 
   272     018C                     EECON1          equ	396	;# 
   273     018D                     EECON2          equ	397	;# 
   274     0013                     _SSPBUF         set	19
   275     0014                     _SSPCON         set	20
   276     0005                     _PORTA          set	5
   277     0006                     _PORTB          set	6
   278     002D                     _RA5            set	45
   279     0063                     _SSPIF          set	99
   280     0094                     _SSPSTAT        set	148
   281     0085                     _TRISA          set	133
   282     0087                     _TRISC          set	135
   283     0086                     _TRISB          set	134
   284                           
   285                           	psect	cinit
   286     07FC                     start_initialization:	
   287                           ; #config settings
   288                           
   289     07FC                     __initialization:
   290     07FC                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293     07FC                     __end_of__initialization:
   294     07FC  0183               	clrf	3
   295     07FD  120A  118A  2F6C   	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	cstackCOMMON
   298     0070                     __pcstackCOMMON:
   299     0070                     ?_SpiInit:
   300     0070                     ?_MATR_7219_init:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_PortBInit:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_SpiClearMatrix:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_SpiSendByte:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     SpiSendByte@data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_SpiInit:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ??_PortBInit:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_SpiSendByte:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329     0070                     	ds	1
   330     0071                     ?_SpiSendBus:
   331     0071                     SpiSendBus@dt:	
   332                           ; 1 bytes @ 0x1
   333                           
   334                           
   335                           ; 1 bytes @ 0x1
   336     0071                     	ds	1
   337     0072                     SpiSendBus@rg:
   338     0072                     ??_SpiSendBus:	
   339                           ; 1 bytes @ 0x2
   340                           
   341                           
   342                           ; 1 bytes @ 0x2
   343     0072                     	ds	1
   344     0073                     SpiClearMatrix@i:
   345     0073                     ??_SpiClearMatrix:	
   346                           ; 1 bytes @ 0x3
   347                           
   348                           
   349                           ; 1 bytes @ 0x3
   350     0073                     	ds	1
   351     0074                     ??_MATR_7219_init:
   352                           
   353                           ; 1 bytes @ 0x4
   354     0074                     	ds	3
   355     0077                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x7
   358     0077                     	ds	3
   359     007A                     main@sh:
   360                           
   361                           ; 2 bytes @ 0xA
   362     007A                     	ds	2
   363     007C                     main@i:
   364                           
   365                           ; 2 bytes @ 0xC
   366     007C                     	ds	2
   367                           
   368                           	psect	maintext
   369     076C                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 16 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  i               2   12[COMMON] int 
   380 ;;  sh              2   10[COMMON] int 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         4       0       0       0       0
   392 ;;      Temps:          3       0       0       0       0
   393 ;;      Totals:         7       0       0       0       0
   394 ;;Total ram usage:        7 bytes
   395 ;; Hardware stack levels required when called: 4
   396 ;; This function calls:
   397 ;;		_MATR_7219_init
   398 ;;		_PortBInit
   399 ;;		_SpiClearMatrix
   400 ;;		_SpiInit
   401 ;;		_SpiSendBus
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     076C                     _main:	
   408                           ;psect for function _main
   409                           
   410     076C                     l715:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   413                           
   414                           
   415                           ;main.c: 17:     SpiInit();
   416     076C  120A  118A  2712  120A  118A  	fcall	_SpiInit
   417                           
   418                           ;main.c: 18:     MATR_7219_init();
   419     0771  120A  118A  2738  120A  118A  	fcall	_MATR_7219_init
   420     0776                     l717:
   421                           
   422                           ;main.c: 19:     PortBInit();
   423     0776  120A  118A  26F0  120A  118A  	fcall	_PortBInit
   424     077B                     l719:
   425                           
   426                           ;main.c: 20:     int sh = 0;
   427     077B  01FA               	clrf	main@sh
   428     077C  01FB               	clrf	main@sh+1
   429     077D                     l721:
   430                           
   431                           ;main.c: 22:         for(int i = 1; i < 9; i++){
   432     077D  3001               	movlw	1
   433     077E  00FC               	movwf	main@i
   434     077F  3000               	movlw	0
   435     0780  00FD               	movwf	main@i+1
   436     0781                     l723:
   437     0781  087D               	movf	main@i+1,w
   438     0782  3A80               	xorlw	128
   439     0783  00FF               	movwf	btemp+1
   440     0784  3080               	movlw	128
   441     0785  027F               	subwf	btemp+1,w
   442     0786  1D03               	skipz
   443     0787  2F8A               	goto	u95
   444     0788  3009               	movlw	9
   445     0789  027C               	subwf	main@i,w
   446     078A                     u95:
   447     078A  1C03               	skipc
   448     078B  2F8D               	goto	u91
   449     078C  2F8E               	goto	u90
   450     078D                     u91:
   451     078D  2F8F               	goto	l727
   452     078E                     u90:
   453     078E  2FCF               	goto	l739
   454     078F                     l727:
   455                           
   456                           ;main.c: 23:             if(i <= 5){
   457     078F  087D               	movf	main@i+1,w
   458     0790  3A80               	xorlw	128
   459     0791  00FF               	movwf	btemp+1
   460     0792  3080               	movlw	128
   461     0793  027F               	subwf	btemp+1,w
   462     0794  1D03               	skipz
   463     0795  2F98               	goto	u105
   464     0796  3006               	movlw	6
   465     0797  027C               	subwf	main@i,w
   466     0798                     u105:
   467     0798  1803               	skipnc
   468     0799  2F9B               	goto	u101
   469     079A  2F9C               	goto	u100
   470     079B                     u101:
   471     079B  2FAB               	goto	l731
   472     079C                     u100:
   473     079C                     l729:
   474                           
   475                           ;main.c: 24:                 PORTB = 0x01 << (i - 1);
   476     079C  3001               	movlw	1
   477     079D  00F7               	movwf	??_main
   478     079E  087C               	movf	main@i,w
   479     079F  3EFF               	addlw	-1
   480     07A0  3E01               	addlw	1
   481     07A1  2FA4               	goto	u114
   482     07A2                     u115:
   483     07A2  1003               	clrc
   484     07A3  0DF7               	rlf	??_main,f
   485     07A4                     u114:
   486     07A4  3EFF               	addlw	-1
   487     07A5  1D03               	skipz
   488     07A6  2FA2               	goto	u115
   489     07A7  0877               	movf	??_main,w
   490     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   491     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   492     07AA  0086               	movwf	6	;volatile
   493     07AB                     l731:
   494                           
   495                           ;main.c: 26:             SpiSendBus(i, (1 << sh));
   496     07AB  3001               	movlw	1
   497     07AC  00F7               	movwf	??_main
   498     07AD  0A7A               	incf	main@sh,w
   499     07AE  2FB1               	goto	u124
   500     07AF                     u125:
   501     07AF  1003               	clrc
   502     07B0  0DF7               	rlf	??_main,f
   503     07B1                     u124:
   504     07B1  3EFF               	addlw	-1
   505     07B2  1D03               	skipz
   506     07B3  2FAF               	goto	u125
   507     07B4  0877               	movf	??_main,w
   508     07B5  00F1               	movwf	SpiSendBus@dt
   509     07B6  087C               	movf	main@i,w
   510     07B7  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   511     07BC                     l733:
   512                           
   513                           ;main.c: 27:             _delay((unsigned long)((100)*(16000000/4000.0)));
   514     07BC  3003               	movlw	3
   515     07BD  00F9               	movwf	??_main+2
   516     07BE  3008               	movlw	8
   517     07BF  00F8               	movwf	??_main+1
   518     07C0  3077               	movlw	119
   519     07C1  00F7               	movwf	??_main
   520     07C2                     u147:
   521     07C2  0BF7               	decfsz	??_main,f
   522     07C3  2FC2               	goto	u147
   523     07C4  0BF8               	decfsz	??_main+1,f
   524     07C5  2FC2               	goto	u147
   525     07C6  0BF9               	decfsz	??_main+2,f
   526     07C7  2FC2               	goto	u147
   527     07C8                     l735:
   528                           
   529                           ;main.c: 28:         }
   530     07C8  3001               	movlw	1
   531     07C9  07FC               	addwf	main@i,f
   532     07CA  1803               	skipnc
   533     07CB  0AFD               	incf	main@i+1,f
   534     07CC  3000               	movlw	0
   535     07CD  07FD               	addwf	main@i+1,f
   536     07CE  2F81               	goto	l723
   537     07CF                     l739:
   538                           
   539                           ;main.c: 29:         sh++;
   540     07CF  3001               	movlw	1
   541     07D0  07FA               	addwf	main@sh,f
   542     07D1  1803               	skipnc
   543     07D2  0AFB               	incf	main@sh+1,f
   544     07D3  3000               	movlw	0
   545     07D4  07FB               	addwf	main@sh+1,f
   546     07D5                     l741:
   547                           
   548                           ;main.c: 30:         if(sh > 7){
   549     07D5  087B               	movf	main@sh+1,w
   550     07D6  3A80               	xorlw	128
   551     07D7  00FF               	movwf	btemp+1
   552     07D8  3080               	movlw	128
   553     07D9  027F               	subwf	btemp+1,w
   554     07DA  1D03               	skipz
   555     07DB  2FDE               	goto	u135
   556     07DC  3008               	movlw	8
   557     07DD  027A               	subwf	main@sh,w
   558     07DE                     u135:
   559     07DE  1C03               	skipc
   560     07DF  2FE1               	goto	u131
   561     07E0  2FE2               	goto	u130
   562     07E1                     u131:
   563     07E1  2FE9               	goto	l747
   564     07E2                     u130:
   565     07E2                     l743:
   566                           
   567                           ;main.c: 31:             sh = 0;
   568     07E2  01FA               	clrf	main@sh
   569     07E3  01FB               	clrf	main@sh+1
   570     07E4                     l745:
   571                           
   572                           ;main.c: 32:             SpiClearMatrix();
   573     07E4  120A  118A  2702  120A  118A  	fcall	_SpiClearMatrix
   574     07E9                     l747:
   575                           
   576                           ;main.c: 34:         PORTB = 0x00;
   577     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   578     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   579     07EB  0186               	clrf	6	;volatile
   580     07EC                     l749:
   581                           
   582                           ;main.c: 35:         _delay((unsigned long)((100)*(16000000/4000.0)));
   583     07EC  3003               	movlw	3
   584     07ED  00F9               	movwf	??_main+2
   585     07EE  3008               	movlw	8
   586     07EF  00F8               	movwf	??_main+1
   587     07F0  3077               	movlw	119
   588     07F1  00F7               	movwf	??_main
   589     07F2                     u157:
   590     07F2  0BF7               	decfsz	??_main,f
   591     07F3  2FF2               	goto	u157
   592     07F4  0BF8               	decfsz	??_main+1,f
   593     07F5  2FF2               	goto	u157
   594     07F6  0BF9               	decfsz	??_main+2,f
   595     07F7  2FF2               	goto	u157
   596     07F8  2F7D               	goto	l721
   597     07F9  120A  118A  2800   	ljmp	start
   598     07FC                     __end_of_main:
   599                           
   600                           	psect	text1
   601     0712                     __ptext1:	
   602 ;; *************** function _SpiInit *****************
   603 ;; Defined at:
   604 ;;		line 10 in file "spi.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631     0712                     _SpiInit:	
   632                           ;psect for function _SpiInit
   633                           
   634     0712                     l629:	
   635                           ;incstack = 0
   636                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
   637                           
   638                           
   639                           ;spi.c: 12:     TRISC |= 0x10;
   640     0712  1683               	bsf	3,5	;RP0=1, select bank1
   641     0713  1303               	bcf	3,6	;RP1=0, select bank1
   642     0714  1607               	bsf	7,4	;volatile
   643     0715                     l631:
   644                           
   645                           ;spi.c: 13:     TRISC &= ~0x28;
   646     0715  30D7               	movlw	215
   647     0716  0587               	andwf	7,f	;volatile
   648                           
   649                           ;spi.c: 14:     TRISA &= ~0x20;
   650     0717  30DF               	movlw	223
   651     0718  0585               	andwf	5,f	;volatile
   652                           
   653                           ;spi.c: 15:     PORTA &= ~0x20;
   654     0719  30DF               	movlw	223
   655     071A  1283               	bcf	3,5	;RP0=0, select bank0
   656     071B  1303               	bcf	3,6	;RP1=0, select bank0
   657     071C  0585               	andwf	5,f	;volatile
   658     071D                     l633:
   659                           
   660                           ;spi.c: 16:     SSPCON = 0x30;
   661     071D  3030               	movlw	48
   662     071E  0094               	movwf	20	;volatile
   663     071F                     l635:
   664                           
   665                           ;spi.c: 17:     SSPSTAT = 0x80;
   666     071F  3080               	movlw	128
   667     0720  1683               	bsf	3,5	;RP0=1, select bank1
   668     0721  1303               	bcf	3,6	;RP1=0, select bank1
   669     0722  0094               	movwf	20	;volatile
   670     0723                     l54:
   671     0723  0008               	return
   672     0724                     __end_of_SpiInit:
   673                           
   674                           	psect	text2
   675     06F0                     __ptext2:	
   676 ;; *************** function _PortBInit *****************
   677 ;; Defined at:
   678 ;;		line 13 in file "portsinit.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     06F0                     _PortBInit:	
   706                           ;psect for function _PortBInit
   707                           
   708     06F0                     l651:	
   709                           ;incstack = 0
   710                           ; Regs used in _PortBInit: [status,2]
   711                           
   712                           
   713                           ;portsinit.c: 14:     TRISB = 0x00;
   714     06F0  1683               	bsf	3,5	;RP0=1, select bank1
   715     06F1  1303               	bcf	3,6	;RP1=0, select bank1
   716     06F2  0186               	clrf	6	;volatile
   717                           
   718                           ;portsinit.c: 15:     PORTB = 0x00;
   719     06F3  1283               	bcf	3,5	;RP0=0, select bank0
   720     06F4  1303               	bcf	3,6	;RP1=0, select bank0
   721     06F5  0186               	clrf	6	;volatile
   722     06F6                     l33:
   723     06F6  0008               	return
   724     06F7                     __end_of_PortBInit:
   725                           
   726                           	psect	text3
   727     0738                     __ptext3:	
   728 ;; *************** function _MATR_7219_init *****************
   729 ;; Defined at:
   730 ;;		line 40 in file "spi.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          3       0       0       0       0
   747 ;;      Totals:         3       0       0       0       0
   748 ;;Total ram usage:        3 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 3
   751 ;; This function calls:
   752 ;;		_SpiClearMatrix
   753 ;;		_SpiSendBus
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759     0738                     _MATR_7219_init:	
   760                           ;psect for function _MATR_7219_init
   761                           
   762     0738                     l701:	
   763                           ;incstack = 0
   764                           ; Regs used in _MATR_7219_init: [wreg+status,2+status,0+pclath+cstack]
   765                           
   766                           
   767                           ;spi.c: 41:     _delay((unsigned long)((100)*(16000000/4000.0)));
   768     0738  3003               	movlw	3
   769     0739  00F6               	movwf	??_MATR_7219_init+2
   770     073A  3008               	movlw	8
   771     073B  00F5               	movwf	??_MATR_7219_init+1
   772     073C  3077               	movlw	119
   773     073D  00F4               	movwf	??_MATR_7219_init
   774     073E                     u167:
   775     073E  0BF4               	decfsz	??_MATR_7219_init,f
   776     073F  2F3E               	goto	u167
   777     0740  0BF5               	decfsz	??_MATR_7219_init+1,f
   778     0741  2F3E               	goto	u167
   779     0742  0BF6               	decfsz	??_MATR_7219_init+2,f
   780     0743  2F3E               	goto	u167
   781     0744                     l703:
   782                           
   783                           ;spi.c: 42:     RA5=1;
   784     0744  1283               	bcf	3,5	;RP0=0, select bank0
   785     0745  1303               	bcf	3,6	;RP1=0, select bank0
   786     0746  1685               	bsf	5,5	;volatile
   787     0747                     l705:
   788                           
   789                           ;spi.c: 43:     SpiSendBus(0x09, 0x00);
   790     0747  01F1               	clrf	SpiSendBus@dt
   791     0748  3009               	movlw	9
   792     0749  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   793     074E                     l707:
   794                           
   795                           ;spi.c: 44:     SpiSendBus(0x0b, 0x07);
   796     074E  3007               	movlw	7
   797     074F  00F1               	movwf	SpiSendBus@dt
   798     0750  300B               	movlw	11
   799     0751  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   800     0756                     l709:
   801                           
   802                           ;spi.c: 45:     SpiSendBus(0x0A, 0x02);
   803     0756  3002               	movlw	2
   804     0757  00F1               	movwf	SpiSendBus@dt
   805     0758  300A               	movlw	10
   806     0759  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   807     075E                     l711:
   808                           
   809                           ;spi.c: 46:     SpiSendBus(0x0c, 0x01);
   810     075E  01F1               	clrf	SpiSendBus@dt
   811     075F  0AF1               	incf	SpiSendBus@dt,f
   812     0760  300C               	movlw	12
   813     0761  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   814     0766                     l713:
   815                           
   816                           ;spi.c: 47:     SpiClearMatrix();
   817     0766  120A  118A  2702  120A  118A  	fcall	_SpiClearMatrix
   818     076B                     l71:
   819     076B  0008               	return
   820     076C                     __end_of_MATR_7219_init:
   821                           
   822                           	psect	text4
   823     0702                     __ptext4:	
   824 ;; *************** function _SpiClearMatrix *****************
   825 ;; Defined at:
   826 ;;		line 32 in file "spi.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  i               1    3[COMMON] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         1       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         1       0       0       0       0
   844 ;;Total ram usage:        1 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 2
   847 ;; This function calls:
   848 ;;		_SpiSendBus
   849 ;; This function is called by:
   850 ;;		_main
   851 ;;		_MATR_7219_init
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855     0702                     _SpiClearMatrix:	
   856                           ;psect for function _SpiClearMatrix
   857                           
   858     0702                     l695:	
   859                           ;incstack = 0
   860                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
   861                           
   862                           
   863                           ;spi.c: 34:   char i=8;
   864     0702  3008               	movlw	8
   865     0703  00F3               	movwf	SpiClearMatrix@i
   866     0704                     l697:
   867                           
   868                           ;spi.c: 36:   {;spi.c: 37:     SpiSendBus(i,0x00);
   869     0704  01F1               	clrf	SpiSendBus@dt
   870     0705  0873               	movf	SpiClearMatrix@i,w
   871     0706  120A  118A  2724  120A  118A  	fcall	_SpiSendBus
   872     070B                     l699:
   873                           
   874                           ;spi.c: 38:   } while (--i);
   875     070B  3001               	movlw	1
   876     070C  02F3               	subwf	SpiClearMatrix@i,f
   877     070D  1D03               	btfss	3,2
   878     070E  2F10               	goto	u81
   879     070F  2F11               	goto	u80
   880     0710                     u81:
   881     0710  2F04               	goto	l697
   882     0711                     u80:
   883     0711                     l68:
   884     0711  0008               	return
   885     0712                     __end_of_SpiClearMatrix:
   886                           
   887                           	psect	text5
   888     0724                     __ptext5:	
   889 ;; *************** function _SpiSendBus *****************
   890 ;; Defined at:
   891 ;;		line 26 in file "spi.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  rg              1    wreg     unsigned char 
   894 ;;  dt              1    1[COMMON] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  rg              1    2[COMMON] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         1       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         2       0       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 1
   913 ;; This function calls:
   914 ;;		_SpiSendByte
   915 ;; This function is called by:
   916 ;;		_main
   917 ;;		_SpiClearMatrix
   918 ;;		_MATR_7219_init
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922     0724                     _SpiSendBus:	
   923                           ;psect for function _SpiSendBus
   924                           
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _SpiSendBus: [wreg+status,2+status,0+pclath+cstack]
   928                           ;SpiSendBus@rg stored from wreg
   929     0724  00F2               	movwf	SpiSendBus@rg
   930     0725                     l689:
   931                           
   932                           ;spi.c: 27:     RA5 = 0;
   933     0725  1283               	bcf	3,5	;RP0=0, select bank0
   934     0726  1303               	bcf	3,6	;RP1=0, select bank0
   935     0727  1285               	bcf	5,5	;volatile
   936     0728                     l691:
   937                           
   938                           ;spi.c: 28:     SpiSendByte(rg);
   939     0728  0872               	movf	SpiSendBus@rg,w
   940     0729  120A  118A  26F7  120A  118A  	fcall	_SpiSendByte
   941                           
   942                           ;spi.c: 29:     SpiSendByte(dt);
   943     072E  0871               	movf	SpiSendBus@dt,w
   944     072F  120A  118A  26F7  120A  118A  	fcall	_SpiSendByte
   945     0734                     l693:
   946                           
   947                           ;spi.c: 30:     RA5 = 1;
   948     0734  1283               	bcf	3,5	;RP0=0, select bank0
   949     0735  1303               	bcf	3,6	;RP1=0, select bank0
   950     0736  1685               	bsf	5,5	;volatile
   951     0737                     l63:
   952     0737  0008               	return
   953     0738                     __end_of_SpiSendBus:
   954                           
   955                           	psect	text6
   956     06F7                     __ptext6:	
   957 ;; *************** function _SpiSendByte *****************
   958 ;; Defined at:
   959 ;;		line 20 in file "spi.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  data            1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  data            1    0[COMMON] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         1       0       0       0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_SpiSendBus
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986     06F7                     _SpiSendByte:	
   987                           ;psect for function _SpiSendByte
   988                           
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _SpiSendByte: [wreg]
   992                           ;SpiSendByte@data stored from wreg
   993     06F7  00F0               	movwf	SpiSendByte@data
   994     06F8                     l615:
   995                           
   996                           ;spi.c: 21:     SSPBUF = data;
   997     06F8  0870               	movf	SpiSendByte@data,w
   998     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   999     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1000     06FB  0093               	movwf	19	;volatile
  1001     06FC                     l57:	
  1002                           ;spi.c: 22:     while (!SSPIF);
  1003                           
  1004     06FC  1D8C               	btfss	12,3	;volatile
  1005     06FD  2EFF               	goto	u11
  1006     06FE  2F00               	goto	u10
  1007     06FF                     u11:
  1008     06FF  2EFC               	goto	l57
  1009     0700                     u10:
  1010     0700                     l59:
  1011                           
  1012                           ;spi.c: 23:     SSPIF = 0;
  1013     0700  118C               	bcf	12,3	;volatile
  1014     0701                     l60:
  1015     0701  0008               	return
  1016     0702                     __end_of_SpiSendByte:
  1017     0002                     ___latbits      equ	2
  1018     007E                     btemp           set	126	;btemp
  1019     007E                     wtemp0          set	126
  1020                           
  1021                           	psect	config
  1022                           
  1023                           ;Config register CONFIG @ 0x2007
  1024                           ;	Oscillator Selection bits
  1025                           ;	FOSC = HS, HS oscillator
  1026                           ;	Watchdog Timer Enable bit
  1027                           ;	WDTE = OFF, WDT disabled
  1028                           ;	Power-up Timer Enable bit
  1029                           ;	PWRTE = OFF, PWRT disabled
  1030                           ;	FLASH Program Memory Code Protection bits
  1031                           ;	CP = OFF, Code protection off
  1032                           ;	Brown-out Reset Enable bit
  1033                           ;	BOREN = OFF, BOR disabled
  1034                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1035                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1036                           ;	Data EE Memory Code Protection
  1037                           ;	CPD = OFF, Code Protection off
  1038                           ;	FLASH Program Memory Write Enable
  1039                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1040                           ;	In-Circuit Debugger Mode bit
  1041                           ;	DEBUG = 0x1, unprogrammed default
  1042     2007                     	org	8199
  1043     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MATR_7219_init
    _MATR_7219_init->_SpiClearMatrix
    _SpiClearMatrix->_SpiSendBus
    _SpiSendBus->_SpiSendByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     537
                                              7 COMMON     7     7      0
                     _MATR_7219_init
                          _PortBInit
                     _SpiClearMatrix
                            _SpiInit
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MATR_7219_init                                       3     3      0     189
                                              4 COMMON     3     3      0
                     _SpiClearMatrix
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiClearMatrix                                       1     1      0     117
                                              3 COMMON     1     1      0
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiSendBus                                           2     1      1      72
                                              1 COMMON     2     1      1
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (2) _SpiSendByte                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MATR_7219_init
     _SpiClearMatrix
       _SpiSendBus
         _SpiSendByte
     _SpiSendBus
   _PortBInit
   _SpiClearMatrix
   _SpiInit
   _SpiSendBus

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec  4 13:49:19 2024

         _SpiClearMatrix 0702                       l33 06F6                       l60 0701  
                     l54 0723                       l63 0737                       l71 076B  
                     l57 06FC                       l59 0700                       l68 0711  
                     u10 0700                       u11 06FF                       u80 0711  
                     u81 0710                       u90 078E                       u91 078D  
                     u95 078A          SpiSendByte@data 0070                      l701 0738  
                    l615 06F8                      l711 075E                      l703 0744  
                    l631 0715                      l713 0766                      l705 0747  
                    l633 071D                      l721 077D                      l707 074E  
                    l651 06F0                      l635 071F                      l731 07AB  
                    l723 0781                      l715 076C                      l709 0756  
                    l629 0712                      l741 07D5                      l733 07BC  
                    l717 0776                      l743 07E2                      l735 07C8  
                    l727 078F                      l719 077B                      l745 07E4  
                    l729 079C                      l691 0728                      l747 07E9  
                    l739 07CF                      l693 0734                      l749 07EC  
                    l695 0702                      l689 0725                      l697 0704  
                    l699 070B                      _RA5 002D                      u100 079C  
                    u101 079B                      u105 0798                      u130 07E2  
                    u114 07A4                      u131 07E1                      u115 07A2  
                    u124 07B1                      u125 07AF                      u135 07DE  
                    u147 07C2                      u157 07F2                      u167 073E  
                   _main 076C                     btemp 007E                     start 0000  
 __end_of_SpiClearMatrix 0712           _MATR_7219_init 0738          __end_of_SpiInit 0724  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _SSPIF 0063          SpiClearMatrix@i 0073                    main@i 007C  
                  status 0003                    wtemp0 007E   __end_of_MATR_7219_init 076C  
        ?_SpiClearMatrix 0070          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0077                   _SSPCON 0014                   _SSPBUF 0013  
        ?_MATR_7219_init 0070                ??_SpiInit 0070            ??_SpiSendByte 0070  
             _SpiSendBus 0724                   main@sh 007A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070      __end_of_SpiSendByte 0702        __end_of_PortBInit 06F7  
             __pmaintext 076C              ?_SpiSendBus 0071                  _SSPSTAT 0094  
       ??_SpiClearMatrix 0073                  _SpiInit 0712              _SpiSendByte 06F7  
                __ptext1 0712                  __ptext2 06F0                  __ptext3 0738  
                __ptext4 0702                  __ptext5 0724                  __ptext6 06F7  
   end_of_initialization 07FC         ??_MATR_7219_init 0074      start_initialization 07FC  
           ??_SpiSendBus 0072                _PortBInit 06F0                ___latbits 0002  
     __end_of_SpiSendBus 0738                 ?_SpiInit 0070               ?_PortBInit 0070  
           ?_SpiSendByte 0070             SpiSendBus@dt 0071             SpiSendBus@rg 0072  
            ??_PortBInit 0070  
