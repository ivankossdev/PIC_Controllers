

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec  5 09:27:30 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F876 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     0007                     PORTC           equ	7	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     000A                     PCLATH          equ	10	;# 
   122     000B                     INTCON          equ	11	;# 
   123     000C                     PIR1            equ	12	;# 
   124     000D                     PIR2            equ	13	;# 
   125     000E                     TMR1            equ	14	;# 
   126     000E                     TMR1L           equ	14	;# 
   127     000F                     TMR1H           equ	15	;# 
   128     0010                     T1CON           equ	16	;# 
   129     0011                     TMR2            equ	17	;# 
   130     0012                     T2CON           equ	18	;# 
   131     0013                     SSPBUF          equ	19	;# 
   132     0014                     SSPCON          equ	20	;# 
   133     0015                     CCPR1           equ	21	;# 
   134     0015                     CCPR1L          equ	21	;# 
   135     0016                     CCPR1H          equ	22	;# 
   136     0017                     CCP1CON         equ	23	;# 
   137     0018                     RCSTA           equ	24	;# 
   138     0019                     TXREG           equ	25	;# 
   139     001A                     RCREG           equ	26	;# 
   140     001B                     CCPR2           equ	27	;# 
   141     001B                     CCPR2L          equ	27	;# 
   142     001C                     CCPR2H          equ	28	;# 
   143     001D                     CCP2CON         equ	29	;# 
   144     001E                     ADRESH          equ	30	;# 
   145     001F                     ADCON0          equ	31	;# 
   146     0081                     OPTION_REG      equ	129	;# 
   147     0085                     TRISA           equ	133	;# 
   148     0086                     TRISB           equ	134	;# 
   149     0087                     TRISC           equ	135	;# 
   150     008C                     PIE1            equ	140	;# 
   151     008D                     PIE2            equ	141	;# 
   152     008E                     PCON            equ	142	;# 
   153     0091                     SSPCON2         equ	145	;# 
   154     0092                     PR2             equ	146	;# 
   155     0093                     SSPADD          equ	147	;# 
   156     0094                     SSPSTAT         equ	148	;# 
   157     0098                     TXSTA           equ	152	;# 
   158     0099                     SPBRG           equ	153	;# 
   159     009E                     ADRESL          equ	158	;# 
   160     009F                     ADCON1          equ	159	;# 
   161     010C                     EEDATA          equ	268	;# 
   162     010D                     EEADR           equ	269	;# 
   163     010E                     EEDATH          equ	270	;# 
   164     010F                     EEADRH          equ	271	;# 
   165     018C                     EECON1          equ	396	;# 
   166     018D                     EECON2          equ	397	;# 
   167     0000                     INDF            equ	0	;# 
   168     0001                     TMR0            equ	1	;# 
   169     0002                     PCL             equ	2	;# 
   170     0003                     STATUS          equ	3	;# 
   171     0004                     FSR             equ	4	;# 
   172     0005                     PORTA           equ	5	;# 
   173     0006                     PORTB           equ	6	;# 
   174     0007                     PORTC           equ	7	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000D                     PIR2            equ	13	;# 
   179     000E                     TMR1            equ	14	;# 
   180     000E                     TMR1L           equ	14	;# 
   181     000F                     TMR1H           equ	15	;# 
   182     0010                     T1CON           equ	16	;# 
   183     0011                     TMR2            equ	17	;# 
   184     0012                     T2CON           equ	18	;# 
   185     0013                     SSPBUF          equ	19	;# 
   186     0014                     SSPCON          equ	20	;# 
   187     0015                     CCPR1           equ	21	;# 
   188     0015                     CCPR1L          equ	21	;# 
   189     0016                     CCPR1H          equ	22	;# 
   190     0017                     CCP1CON         equ	23	;# 
   191     0018                     RCSTA           equ	24	;# 
   192     0019                     TXREG           equ	25	;# 
   193     001A                     RCREG           equ	26	;# 
   194     001B                     CCPR2           equ	27	;# 
   195     001B                     CCPR2L          equ	27	;# 
   196     001C                     CCPR2H          equ	28	;# 
   197     001D                     CCP2CON         equ	29	;# 
   198     001E                     ADRESH          equ	30	;# 
   199     001F                     ADCON0          equ	31	;# 
   200     0081                     OPTION_REG      equ	129	;# 
   201     0085                     TRISA           equ	133	;# 
   202     0086                     TRISB           equ	134	;# 
   203     0087                     TRISC           equ	135	;# 
   204     008C                     PIE1            equ	140	;# 
   205     008D                     PIE2            equ	141	;# 
   206     008E                     PCON            equ	142	;# 
   207     0091                     SSPCON2         equ	145	;# 
   208     0092                     PR2             equ	146	;# 
   209     0093                     SSPADD          equ	147	;# 
   210     0094                     SSPSTAT         equ	148	;# 
   211     0098                     TXSTA           equ	152	;# 
   212     0099                     SPBRG           equ	153	;# 
   213     009E                     ADRESL          equ	158	;# 
   214     009F                     ADCON1          equ	159	;# 
   215     010C                     EEDATA          equ	268	;# 
   216     010D                     EEADR           equ	269	;# 
   217     010E                     EEDATH          equ	270	;# 
   218     010F                     EEADRH          equ	271	;# 
   219     018C                     EECON1          equ	396	;# 
   220     018D                     EECON2          equ	397	;# 
   221     0000                     INDF            equ	0	;# 
   222     0001                     TMR0            equ	1	;# 
   223     0002                     PCL             equ	2	;# 
   224     0003                     STATUS          equ	3	;# 
   225     0004                     FSR             equ	4	;# 
   226     0005                     PORTA           equ	5	;# 
   227     0006                     PORTB           equ	6	;# 
   228     0007                     PORTC           equ	7	;# 
   229     000A                     PCLATH          equ	10	;# 
   230     000B                     INTCON          equ	11	;# 
   231     000C                     PIR1            equ	12	;# 
   232     000D                     PIR2            equ	13	;# 
   233     000E                     TMR1            equ	14	;# 
   234     000E                     TMR1L           equ	14	;# 
   235     000F                     TMR1H           equ	15	;# 
   236     0010                     T1CON           equ	16	;# 
   237     0011                     TMR2            equ	17	;# 
   238     0012                     T2CON           equ	18	;# 
   239     0013                     SSPBUF          equ	19	;# 
   240     0014                     SSPCON          equ	20	;# 
   241     0015                     CCPR1           equ	21	;# 
   242     0015                     CCPR1L          equ	21	;# 
   243     0016                     CCPR1H          equ	22	;# 
   244     0017                     CCP1CON         equ	23	;# 
   245     0018                     RCSTA           equ	24	;# 
   246     0019                     TXREG           equ	25	;# 
   247     001A                     RCREG           equ	26	;# 
   248     001B                     CCPR2           equ	27	;# 
   249     001B                     CCPR2L          equ	27	;# 
   250     001C                     CCPR2H          equ	28	;# 
   251     001D                     CCP2CON         equ	29	;# 
   252     001E                     ADRESH          equ	30	;# 
   253     001F                     ADCON0          equ	31	;# 
   254     0081                     OPTION_REG      equ	129	;# 
   255     0085                     TRISA           equ	133	;# 
   256     0086                     TRISB           equ	134	;# 
   257     0087                     TRISC           equ	135	;# 
   258     008C                     PIE1            equ	140	;# 
   259     008D                     PIE2            equ	141	;# 
   260     008E                     PCON            equ	142	;# 
   261     0091                     SSPCON2         equ	145	;# 
   262     0092                     PR2             equ	146	;# 
   263     0093                     SSPADD          equ	147	;# 
   264     0094                     SSPSTAT         equ	148	;# 
   265     0098                     TXSTA           equ	152	;# 
   266     0099                     SPBRG           equ	153	;# 
   267     009E                     ADRESL          equ	158	;# 
   268     009F                     ADCON1          equ	159	;# 
   269     010C                     EEDATA          equ	268	;# 
   270     010D                     EEADR           equ	269	;# 
   271     010E                     EEDATH          equ	270	;# 
   272     010F                     EEADRH          equ	271	;# 
   273     018C                     EECON1          equ	396	;# 
   274     018D                     EECON2          equ	397	;# 
   275     0000                     INDF            equ	0	;# 
   276     0001                     TMR0            equ	1	;# 
   277     0002                     PCL             equ	2	;# 
   278     0003                     STATUS          equ	3	;# 
   279     0004                     FSR             equ	4	;# 
   280     0005                     PORTA           equ	5	;# 
   281     0006                     PORTB           equ	6	;# 
   282     0007                     PORTC           equ	7	;# 
   283     000A                     PCLATH          equ	10	;# 
   284     000B                     INTCON          equ	11	;# 
   285     000C                     PIR1            equ	12	;# 
   286     000D                     PIR2            equ	13	;# 
   287     000E                     TMR1            equ	14	;# 
   288     000E                     TMR1L           equ	14	;# 
   289     000F                     TMR1H           equ	15	;# 
   290     0010                     T1CON           equ	16	;# 
   291     0011                     TMR2            equ	17	;# 
   292     0012                     T2CON           equ	18	;# 
   293     0013                     SSPBUF          equ	19	;# 
   294     0014                     SSPCON          equ	20	;# 
   295     0015                     CCPR1           equ	21	;# 
   296     0015                     CCPR1L          equ	21	;# 
   297     0016                     CCPR1H          equ	22	;# 
   298     0017                     CCP1CON         equ	23	;# 
   299     0018                     RCSTA           equ	24	;# 
   300     0019                     TXREG           equ	25	;# 
   301     001A                     RCREG           equ	26	;# 
   302     001B                     CCPR2           equ	27	;# 
   303     001B                     CCPR2L          equ	27	;# 
   304     001C                     CCPR2H          equ	28	;# 
   305     001D                     CCP2CON         equ	29	;# 
   306     001E                     ADRESH          equ	30	;# 
   307     001F                     ADCON0          equ	31	;# 
   308     0081                     OPTION_REG      equ	129	;# 
   309     0085                     TRISA           equ	133	;# 
   310     0086                     TRISB           equ	134	;# 
   311     0087                     TRISC           equ	135	;# 
   312     008C                     PIE1            equ	140	;# 
   313     008D                     PIE2            equ	141	;# 
   314     008E                     PCON            equ	142	;# 
   315     0091                     SSPCON2         equ	145	;# 
   316     0092                     PR2             equ	146	;# 
   317     0093                     SSPADD          equ	147	;# 
   318     0094                     SSPSTAT         equ	148	;# 
   319     0098                     TXSTA           equ	152	;# 
   320     0099                     SPBRG           equ	153	;# 
   321     009E                     ADRESL          equ	158	;# 
   322     009F                     ADCON1          equ	159	;# 
   323     010C                     EEDATA          equ	268	;# 
   324     010D                     EEADR           equ	269	;# 
   325     010E                     EEDATH          equ	270	;# 
   326     010F                     EEADRH          equ	271	;# 
   327     018C                     EECON1          equ	396	;# 
   328     018D                     EECON2          equ	397	;# 
   329     0013                     _SSPBUF         set	19
   330     0014                     _SSPCON         set	20
   331     0005                     _PORTA          set	5
   332     0006                     _PORTB          set	6
   333     002D                     _RA5            set	45
   334     0063                     _SSPIF          set	99
   335     0094                     _SSPSTAT        set	148
   336     0085                     _TRISA          set	133
   337     0087                     _TRISC          set	135
   338     0086                     _TRISB          set	134
   339                           
   340                           	psect	cinit
   341     07FC                     start_initialization:	
   342                           ; #config settings
   343                           
   344     07FC                     __initialization:
   345     07FC                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348     07FC                     __end_of__initialization:
   349     07FC  0183               	clrf	3
   350     07FD  120A  118A  2F80   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	cstackCOMMON
   353     0070                     __pcstackCOMMON:
   354     0070                     ?_SpiInit:
   355     0070                     ?_MATR_7219_init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_PortBInit:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ?_SpiClearMatrix:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_main:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_SpiSendByte:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     SpiSendByte@data:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ??_SpiInit:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ??_PortBInit:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ??_SpiSendByte:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384     0070                     	ds	1
   385     0071                     ?_SpiSendBus:
   386     0071                     SpiSendBus@dt:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391     0071                     	ds	1
   392     0072                     SpiSendBus@rg:
   393     0072                     ??_SpiSendBus:	
   394                           ; 1 bytes @ 0x2
   395                           
   396                           
   397                           ; 1 bytes @ 0x2
   398     0072                     	ds	1
   399     0073                     SpiClearMatrix@i:
   400     0073                     ??_SpiClearMatrix:	
   401                           ; 1 bytes @ 0x3
   402                           
   403                           
   404                           ; 1 bytes @ 0x3
   405     0073                     	ds	1
   406     0074                     ??_MATR_7219_init:
   407                           
   408                           ; 1 bytes @ 0x4
   409     0074                     	ds	3
   410     0077                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x7
   413     0077                     	ds	3
   414                           
   415                           	psect	cstackBANK0
   416     0020                     __pcstackBANK0:
   417     0020                     main@bar:
   418                           
   419                           ; 2 bytes @ 0x0
   420     0020                     	ds	2
   421     0022                     main@sh:
   422                           
   423                           ; 2 bytes @ 0x2
   424     0022                     	ds	2
   425     0024                     main@i:
   426                           
   427                           ; 2 bytes @ 0x4
   428     0024                     	ds	2
   429                           
   430                           	psect	maintext
   431     0780                     __pmaintext:	
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 17 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  i               2    4[BANK0 ] int 
   442 ;;  sh              2    2[BANK0 ] int 
   443 ;;  bar             2    0[BANK0 ] int 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B00/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       6       0       0       0
   455 ;;      Temps:          3       0       0       0       0
   456 ;;      Totals:         3       6       0       0       0
   457 ;;Total ram usage:        9 bytes
   458 ;; Hardware stack levels required when called: 4
   459 ;; This function calls:
   460 ;;		_MATR_7219_init
   461 ;;		_PortBInit
   462 ;;		_SpiClearMatrix
   463 ;;		_SpiInit
   464 ;;		_SpiSendBus
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470     0780                     _main:	
   471                           ;psect for function _main
   472                           
   473     0780                     l724:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 18:     SpiInit();
   479     0780  120A  118A  2726  120A  118A  	fcall	_SpiInit
   480                           
   481                           ;main.c: 19:     MATR_7219_init();
   482     0785  120A  118A  274C  120A  118A  	fcall	_MATR_7219_init
   483     078A                     l726:
   484                           
   485                           ;main.c: 20:     PortBInit();
   486     078A  120A  118A  2704  120A  118A  	fcall	_PortBInit
   487     078F                     l728:
   488                           
   489                           ;main.c: 21:     int sh = 0;
   490     078F  1283               	bcf	3,5	;RP0=0, select bank0
   491     0790  1303               	bcf	3,6	;RP1=0, select bank0
   492     0791  01A2               	clrf	main@sh
   493     0792  01A3               	clrf	main@sh+1
   494     0793                     l730:
   495     0793                     l17:	
   496                           ;main.c: 23:     while(1){
   497                           
   498                           
   499                           ;main.c: 24:         for(int i = 1; i <= 8; i++){
   500     0793  3001               	movlw	1
   501     0794  1283               	bcf	3,5	;RP0=0, select bank0
   502     0795  1303               	bcf	3,6	;RP1=0, select bank0
   503     0796  00A4               	movwf	main@i
   504     0797  3000               	movlw	0
   505     0798  00A5               	movwf	main@i+1
   506     0799                     l736:
   507                           
   508                           ;main.c: 25:             SpiClearMatrix();
   509     0799  120A  118A  2716  120A  118A  	fcall	_SpiClearMatrix
   510     079E                     l738:
   511                           
   512                           ;main.c: 26:             bar = 1 << sh;
   513     079E  1283               	bcf	3,5	;RP0=0, select bank0
   514     079F  1303               	bcf	3,6	;RP1=0, select bank0
   515     07A0  0A22               	incf	main@sh,w
   516     07A1  00F7               	movwf	??_main
   517     07A2  3001               	movlw	1
   518     07A3  00F8               	movwf	??_main+1
   519     07A4  3000               	movlw	0
   520     07A5  00F9               	movwf	??_main+2
   521     07A6  2FAA               	goto	u84
   522     07A7                     u85:
   523     07A7  1003               	clrc
   524     07A8  0DF8               	rlf	??_main+1,f
   525     07A9  0DF9               	rlf	??_main+2,f
   526     07AA                     u84:
   527     07AA  0BF7               	decfsz	??_main,f
   528     07AB  2FA7               	goto	u85
   529     07AC  0878               	movf	??_main+1,w
   530     07AD  00A0               	movwf	main@bar
   531     07AE  0879               	movf	??_main+2,w
   532     07AF  00A1               	movwf	main@bar+1
   533     07B0                     l740:
   534                           
   535                           ;main.c: 27:             SpiSendBus(i, bar);
   536     07B0  0820               	movf	main@bar,w
   537     07B1  00F1               	movwf	SpiSendBus@dt
   538     07B2  0824               	movf	main@i,w
   539     07B3  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   540     07B8                     l742:
   541                           
   542                           ;main.c: 28:             _delay((unsigned long)((500)*(16000000/4000.0)));
   543     07B8  300B               	movlw	11
   544     07B9  00F9               	movwf	??_main+2
   545     07BA  3026               	movlw	38
   546     07BB  00F8               	movwf	??_main+1
   547     07BC  305D               	movlw	93
   548     07BD  00F7               	movwf	??_main
   549     07BE                     u117:
   550     07BE  0BF7               	decfsz	??_main,f
   551     07BF  2FBE               	goto	u117
   552     07C0  0BF8               	decfsz	??_main+1,f
   553     07C1  2FBE               	goto	u117
   554     07C2  0BF9               	decfsz	??_main+2,f
   555     07C3  2FBE               	goto	u117
   556     07C4  2FC5               	nop2
   557     07C5                     l744:
   558                           
   559                           ;main.c: 29:         }
   560     07C5  3001               	movlw	1
   561     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   562     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   563     07C8  07A4               	addwf	main@i,f
   564     07C9  1803               	skipnc
   565     07CA  0AA5               	incf	main@i+1,f
   566     07CB  3000               	movlw	0
   567     07CC  07A5               	addwf	main@i+1,f
   568     07CD                     l746:
   569     07CD  0825               	movf	main@i+1,w
   570     07CE  3A80               	xorlw	128
   571     07CF  00FF               	movwf	btemp+1
   572     07D0  3080               	movlw	128
   573     07D1  027F               	subwf	btemp+1,w
   574     07D2  1D03               	skipz
   575     07D3  2FD6               	goto	u95
   576     07D4  3009               	movlw	9
   577     07D5  0224               	subwf	main@i,w
   578     07D6                     u95:
   579     07D6  1C03               	skipc
   580     07D7  2FD9               	goto	u91
   581     07D8  2FDA               	goto	u90
   582     07D9                     u91:
   583     07D9  2F99               	goto	l736
   584     07DA                     u90:
   585     07DA                     l748:
   586                           
   587                           ;main.c: 30:         sh++;
   588     07DA  3001               	movlw	1
   589     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   590     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   591     07DD  07A2               	addwf	main@sh,f
   592     07DE  1803               	skipnc
   593     07DF  0AA3               	incf	main@sh+1,f
   594     07E0  3000               	movlw	0
   595     07E1  07A3               	addwf	main@sh+1,f
   596     07E2                     l750:
   597                           
   598                           ;main.c: 31:         if(sh > 7){
   599     07E2  0823               	movf	main@sh+1,w
   600     07E3  3A80               	xorlw	128
   601     07E4  00FF               	movwf	btemp+1
   602     07E5  3080               	movlw	128
   603     07E6  027F               	subwf	btemp+1,w
   604     07E7  1D03               	skipz
   605     07E8  2FEB               	goto	u105
   606     07E9  3008               	movlw	8
   607     07EA  0222               	subwf	main@sh,w
   608     07EB                     u105:
   609     07EB  1C03               	skipc
   610     07EC  2FEE               	goto	u101
   611     07ED  2FEF               	goto	u100
   612     07EE                     u101:
   613     07EE  2F93               	goto	l17
   614     07EF                     u100:
   615     07EF                     l752:
   616                           
   617                           ;main.c: 33:             sh = 0;
   618     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   619     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   620     07F1  01A2               	clrf	main@sh
   621     07F2  01A3               	clrf	main@sh+1
   622     07F3                     l754:
   623                           
   624                           ;main.c: 34:             SpiClearMatrix();
   625     07F3  120A  118A  2716  120A  118A  	fcall	_SpiClearMatrix
   626     07F8  2F93               	goto	l17
   627     07F9  120A  118A  2800   	ljmp	start
   628     07FC                     __end_of_main:
   629                           
   630                           	psect	text1
   631     0726                     __ptext1:	
   632 ;; *************** function _SpiInit *****************
   633 ;; Defined at:
   634 ;;		line 11 in file "spi.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     0726                     _SpiInit:	
   662                           ;psect for function _SpiInit
   663                           
   664     0726                     l700:	
   665                           ;incstack = 0
   666                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
   667                           
   668                           
   669                           ;spi.c: 12:     TRISC |= 0x10;
   670     0726  1683               	bsf	3,5	;RP0=1, select bank1
   671     0727  1303               	bcf	3,6	;RP1=0, select bank1
   672     0728  1607               	bsf	7,4	;volatile
   673     0729                     l702:
   674                           
   675                           ;spi.c: 13:     TRISC &= ~0x28;
   676     0729  30D7               	movlw	215
   677     072A  0587               	andwf	7,f	;volatile
   678                           
   679                           ;spi.c: 14:     TRISA &= ~0x20;
   680     072B  30DF               	movlw	223
   681     072C  0585               	andwf	5,f	;volatile
   682                           
   683                           ;spi.c: 15:     PORTA &= ~0x20;
   684     072D  30DF               	movlw	223
   685     072E  1283               	bcf	3,5	;RP0=0, select bank0
   686     072F  1303               	bcf	3,6	;RP1=0, select bank0
   687     0730  0585               	andwf	5,f	;volatile
   688     0731                     l704:
   689                           
   690                           ;spi.c: 16:     SSPCON = 0x30;
   691     0731  3030               	movlw	48
   692     0732  0094               	movwf	20	;volatile
   693     0733                     l706:
   694                           
   695                           ;spi.c: 17:     SSPSTAT = 0x80;
   696     0733  3080               	movlw	128
   697     0734  1683               	bsf	3,5	;RP0=1, select bank1
   698     0735  1303               	bcf	3,6	;RP1=0, select bank1
   699     0736  0094               	movwf	20	;volatile
   700     0737                     l49:
   701     0737  0008               	return
   702     0738                     __end_of_SpiInit:
   703                           
   704                           	psect	text2
   705     0704                     __ptext2:	
   706 ;; *************** function _PortBInit *****************
   707 ;; Defined at:
   708 ;;		line 13 in file "portsinit.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		status,2
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0
   725 ;;      Totals:         0       0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735     0704                     _PortBInit:	
   736                           ;psect for function _PortBInit
   737                           
   738     0704                     l722:	
   739                           ;incstack = 0
   740                           ; Regs used in _PortBInit: [status,2]
   741                           
   742                           
   743                           ;portsinit.c: 14:     TRISB = 0x00;
   744     0704  1683               	bsf	3,5	;RP0=1, select bank1
   745     0705  1303               	bcf	3,6	;RP1=0, select bank1
   746     0706  0186               	clrf	6	;volatile
   747                           
   748                           ;portsinit.c: 15:     PORTB = 0x00;
   749     0707  1283               	bcf	3,5	;RP0=0, select bank0
   750     0708  1303               	bcf	3,6	;RP1=0, select bank0
   751     0709  0186               	clrf	6	;volatile
   752     070A                     l30:
   753     070A  0008               	return
   754     070B                     __end_of_PortBInit:
   755                           
   756                           	psect	text3
   757     074C                     __ptext3:	
   758 ;; *************** function _MATR_7219_init *****************
   759 ;; Defined at:
   760 ;;		line 12 in file "matrix.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0
   776 ;;      Temps:          3       0       0       0       0
   777 ;;      Totals:         3       0       0       0       0
   778 ;;Total ram usage:        3 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 3
   781 ;; This function calls:
   782 ;;		_SpiClearMatrix
   783 ;;		_SpiSendBus
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789     074C                     _MATR_7219_init:	
   790                           ;psect for function _MATR_7219_init
   791                           
   792     074C                     l708:	
   793                           ;incstack = 0
   794                           ; Regs used in _MATR_7219_init: [wreg+status,2+status,0+pclath+cstack]
   795                           
   796                           
   797                           ;matrix.c: 13:     _delay((unsigned long)((100)*(16000000/4000.0)));
   798     074C  3003               	movlw	3
   799     074D  00F6               	movwf	??_MATR_7219_init+2
   800     074E  3008               	movlw	8
   801     074F  00F5               	movwf	??_MATR_7219_init+1
   802     0750  3077               	movlw	119
   803     0751  00F4               	movwf	??_MATR_7219_init
   804     0752                     u127:
   805     0752  0BF4               	decfsz	??_MATR_7219_init,f
   806     0753  2F52               	goto	u127
   807     0754  0BF5               	decfsz	??_MATR_7219_init+1,f
   808     0755  2F52               	goto	u127
   809     0756  0BF6               	decfsz	??_MATR_7219_init+2,f
   810     0757  2F52               	goto	u127
   811     0758                     l710:
   812                           
   813                           ;matrix.c: 14:     RA5=1;
   814     0758  1283               	bcf	3,5	;RP0=0, select bank0
   815     0759  1303               	bcf	3,6	;RP1=0, select bank0
   816     075A  1685               	bsf	5,5	;volatile
   817     075B                     l712:
   818                           
   819                           ;matrix.c: 15:     SpiSendBus(0x09, 0x00);
   820     075B  01F1               	clrf	SpiSendBus@dt
   821     075C  3009               	movlw	9
   822     075D  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   823     0762                     l714:
   824                           
   825                           ;matrix.c: 16:     SpiSendBus(0x0b, 0x07);
   826     0762  3007               	movlw	7
   827     0763  00F1               	movwf	SpiSendBus@dt
   828     0764  300B               	movlw	11
   829     0765  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   830     076A                     l716:
   831                           
   832                           ;matrix.c: 17:     SpiSendBus(0x0A, 0x02);
   833     076A  3002               	movlw	2
   834     076B  00F1               	movwf	SpiSendBus@dt
   835     076C  300A               	movlw	10
   836     076D  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   837     0772                     l718:
   838                           
   839                           ;matrix.c: 18:     SpiSendBus(0x0c, 0x01);
   840     0772  01F1               	clrf	SpiSendBus@dt
   841     0773  0AF1               	incf	SpiSendBus@dt,f
   842     0774  300C               	movlw	12
   843     0775  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   844     077A                     l720:
   845                           
   846                           ;matrix.c: 19:     SpiClearMatrix();
   847     077A  120A  118A  2716  120A  118A  	fcall	_SpiClearMatrix
   848     077F                     l72:
   849     077F  0008               	return
   850     0780                     __end_of_MATR_7219_init:
   851                           
   852                           	psect	text4
   853     0716                     __ptext4:	
   854 ;; *************** function _SpiClearMatrix *****************
   855 ;; Defined at:
   856 ;;		line 3 in file "matrix.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  i               1    3[COMMON] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         1       0       0       0       0
   874 ;;Total ram usage:        1 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 2
   877 ;; This function calls:
   878 ;;		_SpiSendBus
   879 ;; This function is called by:
   880 ;;		_main
   881 ;;		_MATR_7219_init
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885     0716                     _SpiClearMatrix:	
   886                           ;psect for function _SpiClearMatrix
   887                           
   888     0716                     l694:	
   889                           ;incstack = 0
   890                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
   891                           
   892                           
   893                           ;matrix.c: 5:   char i = 8;
   894     0716  3008               	movlw	8
   895     0717  00F3               	movwf	SpiClearMatrix@i
   896     0718                     l696:
   897                           
   898                           ;matrix.c: 7:   {;matrix.c: 8:     SpiSendBus(i, 0x00);
   899     0718  01F1               	clrf	SpiSendBus@dt
   900     0719  0873               	movf	SpiClearMatrix@i,w
   901     071A  120A  118A  2738  120A  118A  	fcall	_SpiSendBus
   902     071F                     l698:
   903                           
   904                           ;matrix.c: 9:   } while (--i);
   905     071F  3001               	movlw	1
   906     0720  02F3               	subwf	SpiClearMatrix@i,f
   907     0721  1D03               	btfss	3,2
   908     0722  2F24               	goto	u71
   909     0723  2F25               	goto	u70
   910     0724                     u71:
   911     0724  2F18               	goto	l696
   912     0725                     u70:
   913     0725                     l69:
   914     0725  0008               	return
   915     0726                     __end_of_SpiClearMatrix:
   916                           
   917                           	psect	text5
   918     0738                     __ptext5:	
   919 ;; *************** function _SpiSendBus *****************
   920 ;; Defined at:
   921 ;;		line 26 in file "spi.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  rg              1    wreg     unsigned char 
   924 ;;  dt              1    1[COMMON] unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  rg              1    2[COMMON] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         1       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0
   939 ;;      Totals:         2       0       0       0       0
   940 ;;Total ram usage:        2 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 1
   943 ;; This function calls:
   944 ;;		_SpiSendByte
   945 ;; This function is called by:
   946 ;;		_main
   947 ;;		_SpiClearMatrix
   948 ;;		_MATR_7219_init
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952     0738                     _SpiSendBus:	
   953                           ;psect for function _SpiSendBus
   954                           
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _SpiSendBus: [wreg+status,2+status,0+pclath+cstack]
   958                           ;SpiSendBus@rg stored from wreg
   959     0738  00F2               	movwf	SpiSendBus@rg
   960     0739                     l688:
   961                           
   962                           ;spi.c: 27:     RA5 = 0;
   963     0739  1283               	bcf	3,5	;RP0=0, select bank0
   964     073A  1303               	bcf	3,6	;RP1=0, select bank0
   965     073B  1285               	bcf	5,5	;volatile
   966     073C                     l690:
   967                           
   968                           ;spi.c: 28:     SpiSendByte(rg);
   969     073C  0872               	movf	SpiSendBus@rg,w
   970     073D  120A  118A  270B  120A  118A  	fcall	_SpiSendByte
   971                           
   972                           ;spi.c: 29:     SpiSendByte(dt);
   973     0742  0871               	movf	SpiSendBus@dt,w
   974     0743  120A  118A  270B  120A  118A  	fcall	_SpiSendByte
   975     0748                     l692:
   976                           
   977                           ;spi.c: 30:     RA5 = 1;
   978     0748  1283               	bcf	3,5	;RP0=0, select bank0
   979     0749  1303               	bcf	3,6	;RP1=0, select bank0
   980     074A  1685               	bsf	5,5	;volatile
   981     074B                     l58:
   982     074B  0008               	return
   983     074C                     __end_of_SpiSendBus:
   984                           
   985                           	psect	text6
   986     070B                     __ptext6:	
   987 ;; *************** function _SpiSendByte *****************
   988 ;; Defined at:
   989 ;;		line 20 in file "spi.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  data            1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  data            1    0[COMMON] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_SpiSendBus
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     070B                     _SpiSendByte:	
  1017                           ;psect for function _SpiSendByte
  1018                           
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _SpiSendByte: [wreg]
  1022                           ;SpiSendByte@data stored from wreg
  1023     070B  00F0               	movwf	SpiSendByte@data
  1024     070C                     l686:
  1025                           
  1026                           ;spi.c: 21:     SSPBUF = data;
  1027     070C  0870               	movf	SpiSendByte@data,w
  1028     070D  1283               	bcf	3,5	;RP0=0, select bank0
  1029     070E  1303               	bcf	3,6	;RP1=0, select bank0
  1030     070F  0093               	movwf	19	;volatile
  1031     0710                     l52:	
  1032                           ;spi.c: 22:     while (!SSPIF);
  1033                           
  1034     0710  1D8C               	btfss	12,3	;volatile
  1035     0711  2F13               	goto	u61
  1036     0712  2F14               	goto	u60
  1037     0713                     u61:
  1038     0713  2F10               	goto	l52
  1039     0714                     u60:
  1040     0714                     l54:
  1041                           
  1042                           ;spi.c: 23:     SSPIF = 0;
  1043     0714  118C               	bcf	12,3	;volatile
  1044     0715                     l55:
  1045     0715  0008               	return
  1046     0716                     __end_of_SpiSendByte:
  1047     0002                     ___latbits      equ	2
  1048     007E                     btemp           set	126	;btemp
  1049     007E                     wtemp0          set	126
  1050                           
  1051                           	psect	config
  1052                           
  1053                           ;Config register CONFIG @ 0x2007
  1054                           ;	Oscillator Selection bits
  1055                           ;	FOSC = HS, HS oscillator
  1056                           ;	Watchdog Timer Enable bit
  1057                           ;	WDTE = OFF, WDT disabled
  1058                           ;	Power-up Timer Enable bit
  1059                           ;	PWRTE = OFF, PWRT disabled
  1060                           ;	FLASH Program Memory Code Protection bits
  1061                           ;	CP = OFF, Code protection off
  1062                           ;	Brown-out Reset Enable bit
  1063                           ;	BOREN = OFF, BOR disabled
  1064                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1065                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1066                           ;	Data EE Memory Code Protection
  1067                           ;	CPD = OFF, Code Protection off
  1068                           ;	FLASH Program Memory Write Enable
  1069                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1070                           ;	In-Circuit Debugger Mode bit
  1071                           ;	DEBUG = 0x1, unprogrammed default
  1072     2007                     	org	8199
  1073     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MATR_7219_init
    _MATR_7219_init->_SpiClearMatrix
    _SpiClearMatrix->_SpiSendBus
    _SpiSendBus->_SpiSendByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     574
                                              7 COMMON     3     3      0
                                              0 BANK0      6     6      0
                     _MATR_7219_init
                          _PortBInit
                     _SpiClearMatrix
                            _SpiInit
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MATR_7219_init                                       3     3      0     217
                                              4 COMMON     3     3      0
                     _SpiClearMatrix
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiClearMatrix                                       1     1      0     131
                                              3 COMMON     1     1      0
                         _SpiSendBus
 ---------------------------------------------------------------------------------
 (1) _SpiSendBus                                           2     1      1      86
                                              1 COMMON     2     1      1
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (2) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MATR_7219_init
     _SpiClearMatrix
       _SpiSendBus
         _SpiSendByte
     _SpiSendBus
   _PortBInit
   _SpiClearMatrix
   _SpiInit
   _SpiSendBus

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      10     71.4%
BANK0               80      6       6      7.5%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      16      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec  5 09:27:30 2024

         _SpiClearMatrix 0716                       l30 070A                       l17 0793  
                     l52 0710                       l54 0714                       l55 0715  
                     l72 077F                       l49 0737                       l58 074B  
                     l69 0725                       u60 0714                       u61 0713  
                     u70 0725                       u71 0724                       u90 07DA  
                     u91 07D9                       u84 07AA                       u85 07A7  
                     u95 07D6          SpiSendByte@data 0070                      l700 0726  
                    l710 0758                      l702 0729                      l720 077A  
                    l712 075B                      l704 0731                      l714 0762  
                    l722 0704                      l706 0733                      l730 0793  
                    l716 076A                      l708 074C                      l740 07B0  
                    l724 0780                      l718 0772                      l750 07E2  
                    l742 07B8                      l726 078A                      l752 07EF  
                    l744 07C5                      l736 0799                      l728 078F  
                    l690 073C                      l754 07F3                      l746 07CD  
                    l738 079E                      l692 0748                      l748 07DA  
                    l686 070C                      l694 0716                      l688 0739  
                    l696 0718                      l698 071F                      _RA5 002D  
                    u100 07EF                      u101 07EE                      u105 07EB  
                    u117 07BE                      u127 0752                     _main 0780  
                   btemp 007E                     start 0000   __end_of_SpiClearMatrix 0726  
         _MATR_7219_init 074C          __end_of_SpiInit 0738                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _SSPIF 0063  
        SpiClearMatrix@i 0073                    main@i 0024                    status 0003  
                  wtemp0 007E   __end_of_MATR_7219_init 0780          ?_SpiClearMatrix 0070  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0077  
                 _SSPCON 0014                   _SSPBUF 0013          ?_MATR_7219_init 0070  
              ??_SpiInit 0070            ??_SpiSendByte 0070               _SpiSendBus 0738  
                 main@sh 0022  __end_of__initialization 07FC           __pcstackCOMMON 0070  
    __end_of_SpiSendByte 0716        __end_of_PortBInit 070B               __pmaintext 0780  
            ?_SpiSendBus 0071                  _SSPSTAT 0094         ??_SpiClearMatrix 0073  
                _SpiInit 0726              _SpiSendByte 070B                  __ptext1 0726  
                __ptext2 0704                  __ptext3 074C                  __ptext4 0716  
                __ptext5 0738                  __ptext6 070B                  main@bar 0020  
   end_of_initialization 07FC         ??_MATR_7219_init 0074      start_initialization 07FC  
           ??_SpiSendBus 0072                _PortBInit 0704                ___latbits 0002  
          __pcstackBANK0 0020       __end_of_SpiSendBus 074C                 ?_SpiInit 0070  
             ?_PortBInit 0070             ?_SpiSendByte 0070             SpiSendBus@dt 0071  
           SpiSendBus@rg 0072              ??_PortBInit 0070  
