

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Dec  6 16:00:20 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F876 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0004                     fsr             equ	4
    60     0004                     fsr0            equ	4
    61     0000                     indf            equ	0
    62     0000                     indf0           equ	0
    63     0002                     pc              equ	2
    64     0002                     pcl             equ	2
    65     000A                     pclath          equ	10
    66     0003                     status          equ	3
    67     0000                     INDF            equ	0	;# 
    68     0001                     TMR0            equ	1	;# 
    69     0002                     PCL             equ	2	;# 
    70     0003                     STATUS          equ	3	;# 
    71     0004                     FSR             equ	4	;# 
    72     0005                     PORTA           equ	5	;# 
    73     0006                     PORTB           equ	6	;# 
    74     0007                     PORTC           equ	7	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     008C                     PIE1            equ	140	;# 
   105     008D                     PIE2            equ	141	;# 
   106     008E                     PCON            equ	142	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     018C                     EECON1          equ	396	;# 
   120     018D                     EECON2          equ	397	;# 
   121     0000                     INDF            equ	0	;# 
   122     0001                     TMR0            equ	1	;# 
   123     0002                     PCL             equ	2	;# 
   124     0003                     STATUS          equ	3	;# 
   125     0004                     FSR             equ	4	;# 
   126     0005                     PORTA           equ	5	;# 
   127     0006                     PORTB           equ	6	;# 
   128     0007                     PORTC           equ	7	;# 
   129     000A                     PCLATH          equ	10	;# 
   130     000B                     INTCON          equ	11	;# 
   131     000C                     PIR1            equ	12	;# 
   132     000D                     PIR2            equ	13	;# 
   133     000E                     TMR1            equ	14	;# 
   134     000E                     TMR1L           equ	14	;# 
   135     000F                     TMR1H           equ	15	;# 
   136     0010                     T1CON           equ	16	;# 
   137     0011                     TMR2            equ	17	;# 
   138     0012                     T2CON           equ	18	;# 
   139     0013                     SSPBUF          equ	19	;# 
   140     0014                     SSPCON          equ	20	;# 
   141     0015                     CCPR1           equ	21	;# 
   142     0015                     CCPR1L          equ	21	;# 
   143     0016                     CCPR1H          equ	22	;# 
   144     0017                     CCP1CON         equ	23	;# 
   145     0018                     RCSTA           equ	24	;# 
   146     0019                     TXREG           equ	25	;# 
   147     001A                     RCREG           equ	26	;# 
   148     001B                     CCPR2           equ	27	;# 
   149     001B                     CCPR2L          equ	27	;# 
   150     001C                     CCPR2H          equ	28	;# 
   151     001D                     CCP2CON         equ	29	;# 
   152     001E                     ADRESH          equ	30	;# 
   153     001F                     ADCON0          equ	31	;# 
   154     0081                     OPTION_REG      equ	129	;# 
   155     0085                     TRISA           equ	133	;# 
   156     0086                     TRISB           equ	134	;# 
   157     0087                     TRISC           equ	135	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0000                     INDF            equ	0	;# 
   176     0001                     TMR0            equ	1	;# 
   177     0002                     PCL             equ	2	;# 
   178     0003                     STATUS          equ	3	;# 
   179     0004                     FSR             equ	4	;# 
   180     0005                     PORTA           equ	5	;# 
   181     0006                     PORTB           equ	6	;# 
   182     0007                     PORTC           equ	7	;# 
   183     000A                     PCLATH          equ	10	;# 
   184     000B                     INTCON          equ	11	;# 
   185     000C                     PIR1            equ	12	;# 
   186     000D                     PIR2            equ	13	;# 
   187     000E                     TMR1            equ	14	;# 
   188     000E                     TMR1L           equ	14	;# 
   189     000F                     TMR1H           equ	15	;# 
   190     0010                     T1CON           equ	16	;# 
   191     0011                     TMR2            equ	17	;# 
   192     0012                     T2CON           equ	18	;# 
   193     0013                     SSPBUF          equ	19	;# 
   194     0014                     SSPCON          equ	20	;# 
   195     0015                     CCPR1           equ	21	;# 
   196     0015                     CCPR1L          equ	21	;# 
   197     0016                     CCPR1H          equ	22	;# 
   198     0017                     CCP1CON         equ	23	;# 
   199     0018                     RCSTA           equ	24	;# 
   200     0019                     TXREG           equ	25	;# 
   201     001A                     RCREG           equ	26	;# 
   202     001B                     CCPR2           equ	27	;# 
   203     001B                     CCPR2L          equ	27	;# 
   204     001C                     CCPR2H          equ	28	;# 
   205     001D                     CCP2CON         equ	29	;# 
   206     001E                     ADRESH          equ	30	;# 
   207     001F                     ADCON0          equ	31	;# 
   208     0081                     OPTION_REG      equ	129	;# 
   209     0085                     TRISA           equ	133	;# 
   210     0086                     TRISB           equ	134	;# 
   211     0087                     TRISC           equ	135	;# 
   212     008C                     PIE1            equ	140	;# 
   213     008D                     PIE2            equ	141	;# 
   214     008E                     PCON            equ	142	;# 
   215     0091                     SSPCON2         equ	145	;# 
   216     0092                     PR2             equ	146	;# 
   217     0093                     SSPADD          equ	147	;# 
   218     0094                     SSPSTAT         equ	148	;# 
   219     0098                     TXSTA           equ	152	;# 
   220     0099                     SPBRG           equ	153	;# 
   221     009E                     ADRESL          equ	158	;# 
   222     009F                     ADCON1          equ	159	;# 
   223     010C                     EEDATA          equ	268	;# 
   224     010D                     EEADR           equ	269	;# 
   225     010E                     EEDATH          equ	270	;# 
   226     010F                     EEADRH          equ	271	;# 
   227     018C                     EECON1          equ	396	;# 
   228     018D                     EECON2          equ	397	;# 
   229     0000                     INDF            equ	0	;# 
   230     0001                     TMR0            equ	1	;# 
   231     0002                     PCL             equ	2	;# 
   232     0003                     STATUS          equ	3	;# 
   233     0004                     FSR             equ	4	;# 
   234     0005                     PORTA           equ	5	;# 
   235     0006                     PORTB           equ	6	;# 
   236     0007                     PORTC           equ	7	;# 
   237     000A                     PCLATH          equ	10	;# 
   238     000B                     INTCON          equ	11	;# 
   239     000C                     PIR1            equ	12	;# 
   240     000D                     PIR2            equ	13	;# 
   241     000E                     TMR1            equ	14	;# 
   242     000E                     TMR1L           equ	14	;# 
   243     000F                     TMR1H           equ	15	;# 
   244     0010                     T1CON           equ	16	;# 
   245     0011                     TMR2            equ	17	;# 
   246     0012                     T2CON           equ	18	;# 
   247     0013                     SSPBUF          equ	19	;# 
   248     0014                     SSPCON          equ	20	;# 
   249     0015                     CCPR1           equ	21	;# 
   250     0015                     CCPR1L          equ	21	;# 
   251     0016                     CCPR1H          equ	22	;# 
   252     0017                     CCP1CON         equ	23	;# 
   253     0018                     RCSTA           equ	24	;# 
   254     0019                     TXREG           equ	25	;# 
   255     001A                     RCREG           equ	26	;# 
   256     001B                     CCPR2           equ	27	;# 
   257     001B                     CCPR2L          equ	27	;# 
   258     001C                     CCPR2H          equ	28	;# 
   259     001D                     CCP2CON         equ	29	;# 
   260     001E                     ADRESH          equ	30	;# 
   261     001F                     ADCON0          equ	31	;# 
   262     0081                     OPTION_REG      equ	129	;# 
   263     0085                     TRISA           equ	133	;# 
   264     0086                     TRISB           equ	134	;# 
   265     0087                     TRISC           equ	135	;# 
   266     008C                     PIE1            equ	140	;# 
   267     008D                     PIE2            equ	141	;# 
   268     008E                     PCON            equ	142	;# 
   269     0091                     SSPCON2         equ	145	;# 
   270     0092                     PR2             equ	146	;# 
   271     0093                     SSPADD          equ	147	;# 
   272     0094                     SSPSTAT         equ	148	;# 
   273     0098                     TXSTA           equ	152	;# 
   274     0099                     SPBRG           equ	153	;# 
   275     009E                     ADRESL          equ	158	;# 
   276     009F                     ADCON1          equ	159	;# 
   277     010C                     EEDATA          equ	268	;# 
   278     010D                     EEADR           equ	269	;# 
   279     010E                     EEDATH          equ	270	;# 
   280     010F                     EEADRH          equ	271	;# 
   281     018C                     EECON1          equ	396	;# 
   282     018D                     EECON2          equ	397	;# 
   283     0000                     INDF            equ	0	;# 
   284     0001                     TMR0            equ	1	;# 
   285     0002                     PCL             equ	2	;# 
   286     0003                     STATUS          equ	3	;# 
   287     0004                     FSR             equ	4	;# 
   288     0005                     PORTA           equ	5	;# 
   289     0006                     PORTB           equ	6	;# 
   290     0007                     PORTC           equ	7	;# 
   291     000A                     PCLATH          equ	10	;# 
   292     000B                     INTCON          equ	11	;# 
   293     000C                     PIR1            equ	12	;# 
   294     000D                     PIR2            equ	13	;# 
   295     000E                     TMR1            equ	14	;# 
   296     000E                     TMR1L           equ	14	;# 
   297     000F                     TMR1H           equ	15	;# 
   298     0010                     T1CON           equ	16	;# 
   299     0011                     TMR2            equ	17	;# 
   300     0012                     T2CON           equ	18	;# 
   301     0013                     SSPBUF          equ	19	;# 
   302     0014                     SSPCON          equ	20	;# 
   303     0015                     CCPR1           equ	21	;# 
   304     0015                     CCPR1L          equ	21	;# 
   305     0016                     CCPR1H          equ	22	;# 
   306     0017                     CCP1CON         equ	23	;# 
   307     0018                     RCSTA           equ	24	;# 
   308     0019                     TXREG           equ	25	;# 
   309     001A                     RCREG           equ	26	;# 
   310     001B                     CCPR2           equ	27	;# 
   311     001B                     CCPR2L          equ	27	;# 
   312     001C                     CCPR2H          equ	28	;# 
   313     001D                     CCP2CON         equ	29	;# 
   314     001E                     ADRESH          equ	30	;# 
   315     001F                     ADCON0          equ	31	;# 
   316     0081                     OPTION_REG      equ	129	;# 
   317     0085                     TRISA           equ	133	;# 
   318     0086                     TRISB           equ	134	;# 
   319     0087                     TRISC           equ	135	;# 
   320     008C                     PIE1            equ	140	;# 
   321     008D                     PIE2            equ	141	;# 
   322     008E                     PCON            equ	142	;# 
   323     0091                     SSPCON2         equ	145	;# 
   324     0092                     PR2             equ	146	;# 
   325     0093                     SSPADD          equ	147	;# 
   326     0094                     SSPSTAT         equ	148	;# 
   327     0098                     TXSTA           equ	152	;# 
   328     0099                     SPBRG           equ	153	;# 
   329     009E                     ADRESL          equ	158	;# 
   330     009F                     ADCON1          equ	159	;# 
   331     010C                     EEDATA          equ	268	;# 
   332     010D                     EEADR           equ	269	;# 
   333     010E                     EEDATH          equ	270	;# 
   334     010F                     EEADRH          equ	271	;# 
   335     018C                     EECON1          equ	396	;# 
   336     018D                     EECON2          equ	397	;# 
   337     0000                     INDF            equ	0	;# 
   338     0001                     TMR0            equ	1	;# 
   339     0002                     PCL             equ	2	;# 
   340     0003                     STATUS          equ	3	;# 
   341     0004                     FSR             equ	4	;# 
   342     0005                     PORTA           equ	5	;# 
   343     0006                     PORTB           equ	6	;# 
   344     0007                     PORTC           equ	7	;# 
   345     000A                     PCLATH          equ	10	;# 
   346     000B                     INTCON          equ	11	;# 
   347     000C                     PIR1            equ	12	;# 
   348     000D                     PIR2            equ	13	;# 
   349     000E                     TMR1            equ	14	;# 
   350     000E                     TMR1L           equ	14	;# 
   351     000F                     TMR1H           equ	15	;# 
   352     0010                     T1CON           equ	16	;# 
   353     0011                     TMR2            equ	17	;# 
   354     0012                     T2CON           equ	18	;# 
   355     0013                     SSPBUF          equ	19	;# 
   356     0014                     SSPCON          equ	20	;# 
   357     0015                     CCPR1           equ	21	;# 
   358     0015                     CCPR1L          equ	21	;# 
   359     0016                     CCPR1H          equ	22	;# 
   360     0017                     CCP1CON         equ	23	;# 
   361     0018                     RCSTA           equ	24	;# 
   362     0019                     TXREG           equ	25	;# 
   363     001A                     RCREG           equ	26	;# 
   364     001B                     CCPR2           equ	27	;# 
   365     001B                     CCPR2L          equ	27	;# 
   366     001C                     CCPR2H          equ	28	;# 
   367     001D                     CCP2CON         equ	29	;# 
   368     001E                     ADRESH          equ	30	;# 
   369     001F                     ADCON0          equ	31	;# 
   370     0081                     OPTION_REG      equ	129	;# 
   371     0085                     TRISA           equ	133	;# 
   372     0086                     TRISB           equ	134	;# 
   373     0087                     TRISC           equ	135	;# 
   374     008C                     PIE1            equ	140	;# 
   375     008D                     PIE2            equ	141	;# 
   376     008E                     PCON            equ	142	;# 
   377     0091                     SSPCON2         equ	145	;# 
   378     0092                     PR2             equ	146	;# 
   379     0093                     SSPADD          equ	147	;# 
   380     0094                     SSPSTAT         equ	148	;# 
   381     0098                     TXSTA           equ	152	;# 
   382     0099                     SPBRG           equ	153	;# 
   383     009E                     ADRESL          equ	158	;# 
   384     009F                     ADCON1          equ	159	;# 
   385     010C                     EEDATA          equ	268	;# 
   386     010D                     EEADR           equ	269	;# 
   387     010E                     EEDATH          equ	270	;# 
   388     010F                     EEADRH          equ	271	;# 
   389     018C                     EECON1          equ	396	;# 
   390     018D                     EECON2          equ	397	;# 
   391                           
   392                           	psect	idataBANK0
   393     05AA                     __pidataBANK0:
   394                           
   395                           ;initializer for main@F911
   396     05AA  3407               	retlw	7
   397     05AB  3405               	retlw	5
   398     05AC  3407               	retlw	7
   399     0013                     _SSPBUF         set	19
   400     0014                     _SSPCON         set	20
   401     0005                     _PORTA          set	5
   402     0006                     _PORTB          set	6
   403     002D                     _RA5            set	45
   404     0063                     _SSPIF          set	99
   405     0094                     _SSPSTAT        set	148
   406     0085                     _TRISA          set	133
   407     0087                     _TRISC          set	135
   408     0086                     _TRISB          set	134
   409                           
   410                           	psect	cinit
   411     07EA                     start_initialization:	
   412                           ; #config settings
   413                           
   414     07EA                     __initialization:
   415                           
   416                           ; Initialize objects allocated to BANK0
   417     07EA  120A  118A  25AA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   418     07EF  00AE               	movwf	__pdataBANK0& (0+127)
   419     07F0  120A  118A  25AB  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   420     07F5  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   421     07F6  120A  118A  25AC  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   422     07FB  00B0               	movwf	(__pdataBANK0+2)& (0+127)
   423     07FC                     end_of_initialization:	
   424                           ;End of C runtime variable initialization code
   425                           
   426     07FC                     __end_of__initialization:
   427     07FC  0183               	clrf	3
   428     07FD  120A  118A  2F0C   	ljmp	_main	;jump to C main() function
   429                           
   430                           	psect	dataBANK0
   431     002E                     __pdataBANK0:
   432     002E                     main@F911:
   433     002E                     	ds	3
   434                           
   435                           	psect	cstackCOMMON
   436     0070                     __pcstackCOMMON:
   437     0070                     ?_SpiInit:
   438     0070                     ?_MatrixInit:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_PortBInit:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_MovieDown:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ?_SpiClearMatrix:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_MovieRigth:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_MovieUp:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_MovieLeft:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_main:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_SpiSendByte:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_WidthLimit:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     SpiSendByte@data:	
   469                           ; 2 bytes @ 0x0
   470                           
   471     0070                     WidthLimit@lenghtMatrix:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     MovieDown@_shapePosition:	
   475                           ; 2 bytes @ 0x0
   476                           
   477     0070                     MovieUp@_shapePosition:	
   478                           ; 2 bytes @ 0x0
   479                           
   480     0070                     MovieLeft@_shapePosition:	
   481                           ; 2 bytes @ 0x0
   482                           
   483     0070                     MovieRigth@_shapePosition:	
   484                           ; 2 bytes @ 0x0
   485                           
   486     0070                     ??_SpiInit:	
   487                           ; 2 bytes @ 0x0
   488                           
   489     0070                     ??_PortBInit:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ??_SpiSendByte:	
   493                           ; 1 bytes @ 0x0
   494                           
   495                           
   496                           ; 1 bytes @ 0x0
   497     0070                     	ds	1
   498     0071                     ?_SendToSegment:
   499     0071                     SendToSegment@segment:	
   500                           ; 1 bytes @ 0x1
   501                           
   502                           
   503                           ; 2 bytes @ 0x1
   504     0071                     	ds	1
   505     0072                     WidthLimit@lengthShape:
   506     0072                     ??_MovieDown:	
   507                           ; 2 bytes @ 0x2
   508                           
   509     0072                     ??_MovieRigth:	
   510                           ; 1 bytes @ 0x2
   511                           
   512     0072                     ??_MovieUp:	
   513                           ; 1 bytes @ 0x2
   514                           
   515     0072                     ??_MovieLeft:	
   516                           ; 1 bytes @ 0x2
   517                           
   518                           
   519                           ; 1 bytes @ 0x2
   520     0072                     	ds	1
   521     0073                     SendToSegment@data:
   522                           
   523                           ; 1 bytes @ 0x3
   524     0073                     	ds	1
   525     0074                     ?_ShowShape:
   526     0074                     ShowShape@coord:	
   527                           ; 1 bytes @ 0x4
   528                           
   529     0074                     ??_WidthLimit:	
   530                           ; 2 bytes @ 0x4
   531                           
   532     0074                     ??_SpiClearMatrix:	
   533                           ; 1 bytes @ 0x4
   534                           
   535     0074                     ??_SendToSegment:	
   536                           ; 1 bytes @ 0x4
   537                           
   538                           
   539                           ; 1 bytes @ 0x4
   540     0074                     	ds	2
   541     0076                     SpiClearMatrix@i:
   542     0076                     ShowShape@countElemntArray:	
   543                           ; 1 bytes @ 0x6
   544                           
   545                           
   546                           ; 2 bytes @ 0x6
   547     0076                     	ds	1
   548     0077                     ??_MatrixInit:
   549                           
   550                           ; 1 bytes @ 0x7
   551     0077                     	ds	1
   552     0078                     ShowShape@shapeArray:
   553                           
   554                           ; 1 bytes @ 0x8
   555     0078                     	ds	1
   556     0079                     ??_ShowShape:
   557                           
   558                           ; 1 bytes @ 0x9
   559     0079                     	ds	5
   560                           
   561                           	psect	cstackBANK0
   562     0020                     __pcstackBANK0:
   563     0020                     ShowShape@_pos:
   564                           
   565                           ; 2 bytes @ 0x0
   566     0020                     	ds	2
   567     0022                     ShowShape@pos:
   568                           
   569                           ; 2 bytes @ 0x2
   570     0022                     	ds	2
   571     0024                     ??_main:
   572                           
   573                           ; 1 bytes @ 0x4
   574     0024                     	ds	3
   575     0027                     main@figure:
   576                           
   577                           ; 3 bytes @ 0x7
   578     0027                     	ds	3
   579     002A                     main@shapePosition:
   580                           
   581                           ; 4 bytes @ 0xA
   582     002A                     	ds	4
   583                           
   584                           	psect	maintext
   585     070C                     __pmaintext:	
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 18 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  shapePositio    4   10[BANK0 ] struct .
   596 ;;  figure          3    7[BANK0 ] unsigned char [3]
   597 ;;  widthLimit      2    0        int 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : B00/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       7       0       0       0
   609 ;;      Temps:          0       3       0       0       0
   610 ;;      Totals:         0      10       0       0       0
   611 ;;Total ram usage:       10 bytes
   612 ;; Hardware stack levels required when called: 4
   613 ;; This function calls:
   614 ;;		_MatrixInit
   615 ;;		_MovieDown
   616 ;;		_MovieLeft
   617 ;;		_MovieRigth
   618 ;;		_MovieUp
   619 ;;		_PortBInit
   620 ;;		_ShowShape
   621 ;;		_SpiClearMatrix
   622 ;;		_SpiInit
   623 ;;		_WidthLimit
   624 ;; This function is called by:
   625 ;;		Startup code after reset
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629     070C                     _main:	
   630                           ;psect for function _main
   631                           
   632     070C                     l854:	
   633                           ;incstack = 0
   634                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   635                           
   636                           
   637                           ;main.c: 19:     SpiInit();
   638     070C  120A  118A  25E4  120A  118A  	fcall	_SpiInit
   639                           
   640                           ;main.c: 20:     MatrixInit();
   641     0711  120A  118A  264B  120A  118A  	fcall	_MatrixInit
   642     0716                     l856:
   643                           
   644                           ;main.c: 21:     PortBInit();
   645     0716  120A  118A  25AD  120A  118A  	fcall	_PortBInit
   646     071B                     l858:
   647     071B  3008               	movlw	8
   648     071C  00F0               	movwf	WidthLimit@lenghtMatrix
   649     071D  3000               	movlw	0
   650     071E  00F1               	movwf	WidthLimit@lenghtMatrix+1
   651     071F  3003               	movlw	3
   652     0720  00F2               	movwf	WidthLimit@lengthShape
   653     0721  3000               	movlw	0
   654     0722  00F3               	movwf	WidthLimit@lengthShape+1
   655     0723  120A  118A  25B4  120A  118A  	fcall	_WidthLimit
   656     0728                     l860:
   657                           
   658                           ;main.c: 25:     char figure[3] = { 0x07, 0x05, 0x07 };
   659     0728  1283               	bcf	3,5	;RP0=0, select bank0
   660     0729  1303               	bcf	3,6	;RP1=0, select bank0
   661     072A  082E               	movf	main@F911,w
   662     072B  00A7               	movwf	main@figure
   663     072C  082F               	movf	main@F911+1,w
   664     072D  00A8               	movwf	main@figure+1
   665     072E  0830               	movf	main@F911+2,w
   666     072F  00A9               	movwf	main@figure+2
   667     0730                     l862:
   668                           
   669                           ;main.c: 29:         shapePosition.x = 2;
   670     0730  3002               	movlw	2
   671     0731  1283               	bcf	3,5	;RP0=0, select bank0
   672     0732  1303               	bcf	3,6	;RP1=0, select bank0
   673     0733  00AA               	movwf	main@shapePosition
   674     0734  3000               	movlw	0
   675     0735  00AB               	movwf	main@shapePosition+1
   676     0736                     l864:
   677                           
   678                           ;main.c: 30:         shapePosition.y = 2;
   679     0736  3002               	movlw	2
   680     0737  00AC               	movwf	main@shapePosition+2
   681     0738  3000               	movlw	0
   682     0739  00AD               	movwf	main@shapePosition+3
   683     073A                     l866:
   684                           
   685                           ;main.c: 32:         MovieDown(&shapePosition);
   686     073A  302A               	movlw	low main@shapePosition
   687     073B  00F0               	movwf	MovieDown@_shapePosition
   688     073C  3000               	movlw	high main@shapePosition
   689     073D  00F1               	movwf	MovieDown@_shapePosition+1
   690     073E  120A  118A  2609  120A  118A  	fcall	_MovieDown
   691     0743                     l868:
   692                           
   693                           ;main.c: 33:         SpiClearMatrix();
   694     0743  120A  118A  261C  120A  118A  	fcall	_SpiClearMatrix
   695                           
   696                           ;main.c: 34:         ShowShape(&shapePosition, 3, figure);
   697     0748  302A               	movlw	low main@shapePosition
   698     0749  00F4               	movwf	ShowShape@coord
   699     074A  3000               	movlw	high main@shapePosition
   700     074B  00F5               	movwf	ShowShape@coord+1
   701     074C  3003               	movlw	3
   702     074D  00F6               	movwf	ShowShape@countElemntArray
   703     074E  3000               	movlw	0
   704     074F  00F7               	movwf	ShowShape@countElemntArray+1
   705     0750  3027               	movlw	(low (main@figure| 0))& (0+255)
   706     0751  00F8               	movwf	ShowShape@shapeArray
   707     0752  120A  118A  268B  120A  118A  	fcall	_ShowShape
   708     0757                     l870:
   709                           
   710                           ;main.c: 35:         _delay((unsigned long)((500)*(16000000/4000.0)));
   711     0757  300B               	movlw	11
   712     0758  1283               	bcf	3,5	;RP0=0, select bank0
   713     0759  1303               	bcf	3,6	;RP1=0, select bank0
   714     075A  00A6               	movwf	??_main+2
   715     075B  3026               	movlw	38
   716     075C  00A5               	movwf	??_main+1
   717     075D  305D               	movlw	93
   718     075E  00A4               	movwf	??_main
   719     075F                     u137:
   720     075F  0BA4               	decfsz	??_main,f
   721     0760  2F5F               	goto	u137
   722     0761  0BA5               	decfsz	??_main+1,f
   723     0762  2F5F               	goto	u137
   724     0763  0BA6               	decfsz	??_main+2,f
   725     0764  2F5F               	goto	u137
   726     0765                     l872:
   727                           
   728                           ;main.c: 37:         MovieRigth(&shapePosition);
   729     0765  302A               	movlw	low main@shapePosition
   730     0766  00F0               	movwf	MovieRigth@_shapePosition
   731     0767  3000               	movlw	high main@shapePosition
   732     0768  00F1               	movwf	MovieRigth@_shapePosition+1
   733     0769  120A  118A  25C8  120A  118A  	fcall	_MovieRigth
   734     076E                     l874:
   735                           
   736                           ;main.c: 38:         SpiClearMatrix();
   737     076E  120A  118A  261C  120A  118A  	fcall	_SpiClearMatrix
   738     0773                     l876:
   739                           
   740                           ;main.c: 39:         ShowShape(&shapePosition, 3, figure);
   741     0773  302A               	movlw	low main@shapePosition
   742     0774  00F4               	movwf	ShowShape@coord
   743     0775  3000               	movlw	high main@shapePosition
   744     0776  00F5               	movwf	ShowShape@coord+1
   745     0777  3003               	movlw	3
   746     0778  00F6               	movwf	ShowShape@countElemntArray
   747     0779  3000               	movlw	0
   748     077A  00F7               	movwf	ShowShape@countElemntArray+1
   749     077B  3027               	movlw	(low (main@figure| 0))& (0+255)
   750     077C  00F8               	movwf	ShowShape@shapeArray
   751     077D  120A  118A  268B  120A  118A  	fcall	_ShowShape
   752     0782                     l878:
   753                           
   754                           ;main.c: 40:         _delay((unsigned long)((500)*(16000000/4000.0)));
   755     0782  300B               	movlw	11
   756     0783  1283               	bcf	3,5	;RP0=0, select bank0
   757     0784  1303               	bcf	3,6	;RP1=0, select bank0
   758     0785  00A6               	movwf	??_main+2
   759     0786  3026               	movlw	38
   760     0787  00A5               	movwf	??_main+1
   761     0788  305D               	movlw	93
   762     0789  00A4               	movwf	??_main
   763     078A                     u147:
   764     078A  0BA4               	decfsz	??_main,f
   765     078B  2F8A               	goto	u147
   766     078C  0BA5               	decfsz	??_main+1,f
   767     078D  2F8A               	goto	u147
   768     078E  0BA6               	decfsz	??_main+2,f
   769     078F  2F8A               	goto	u147
   770     0790                     l880:
   771                           
   772                           ;main.c: 42:         MovieUp(&shapePosition);
   773     0790  302A               	movlw	low main@shapePosition
   774     0791  00F0               	movwf	MovieUp@_shapePosition
   775     0792  3000               	movlw	high main@shapePosition
   776     0793  00F1               	movwf	MovieUp@_shapePosition+1
   777     0794  120A  118A  2632  120A  118A  	fcall	_MovieUp
   778     0799                     l882:
   779                           
   780                           ;main.c: 43:         SpiClearMatrix();
   781     0799  120A  118A  261C  120A  118A  	fcall	_SpiClearMatrix
   782     079E                     l884:
   783                           
   784                           ;main.c: 44:         ShowShape(&shapePosition, 3, figure);
   785     079E  302A               	movlw	low main@shapePosition
   786     079F  00F4               	movwf	ShowShape@coord
   787     07A0  3000               	movlw	high main@shapePosition
   788     07A1  00F5               	movwf	ShowShape@coord+1
   789     07A2  3003               	movlw	3
   790     07A3  00F6               	movwf	ShowShape@countElemntArray
   791     07A4  3000               	movlw	0
   792     07A5  00F7               	movwf	ShowShape@countElemntArray+1
   793     07A6  3027               	movlw	(low (main@figure| 0))& (0+255)
   794     07A7  00F8               	movwf	ShowShape@shapeArray
   795     07A8  120A  118A  268B  120A  118A  	fcall	_ShowShape
   796     07AD                     l886:
   797                           
   798                           ;main.c: 45:         _delay((unsigned long)((500)*(16000000/4000.0)));
   799     07AD  300B               	movlw	11
   800     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   801     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   802     07B0  00A6               	movwf	??_main+2
   803     07B1  3026               	movlw	38
   804     07B2  00A5               	movwf	??_main+1
   805     07B3  305D               	movlw	93
   806     07B4  00A4               	movwf	??_main
   807     07B5                     u157:
   808     07B5  0BA4               	decfsz	??_main,f
   809     07B6  2FB5               	goto	u157
   810     07B7  0BA5               	decfsz	??_main+1,f
   811     07B8  2FB5               	goto	u157
   812     07B9  0BA6               	decfsz	??_main+2,f
   813     07BA  2FB5               	goto	u157
   814     07BB                     l888:
   815                           
   816                           ;main.c: 47:         MovieLeft(&shapePosition);
   817     07BB  302A               	movlw	low main@shapePosition
   818     07BC  00F0               	movwf	MovieLeft@_shapePosition
   819     07BD  3000               	movlw	high main@shapePosition
   820     07BE  00F1               	movwf	MovieLeft@_shapePosition+1
   821     07BF  120A  118A  25D3  120A  118A  	fcall	_MovieLeft
   822     07C4                     l890:
   823                           
   824                           ;main.c: 48:         SpiClearMatrix();
   825     07C4  120A  118A  261C  120A  118A  	fcall	_SpiClearMatrix
   826     07C9                     l892:
   827                           
   828                           ;main.c: 49:         ShowShape(&shapePosition, 3, figure);
   829     07C9  302A               	movlw	low main@shapePosition
   830     07CA  00F4               	movwf	ShowShape@coord
   831     07CB  3000               	movlw	high main@shapePosition
   832     07CC  00F5               	movwf	ShowShape@coord+1
   833     07CD  3003               	movlw	3
   834     07CE  00F6               	movwf	ShowShape@countElemntArray
   835     07CF  3000               	movlw	0
   836     07D0  00F7               	movwf	ShowShape@countElemntArray+1
   837     07D1  3027               	movlw	(low (main@figure| 0))& (0+255)
   838     07D2  00F8               	movwf	ShowShape@shapeArray
   839     07D3  120A  118A  268B  120A  118A  	fcall	_ShowShape
   840     07D8                     l894:
   841                           
   842                           ;main.c: 50:         _delay((unsigned long)((500)*(16000000/4000.0)));
   843     07D8  300B               	movlw	11
   844     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   845     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   846     07DB  00A6               	movwf	??_main+2
   847     07DC  3026               	movlw	38
   848     07DD  00A5               	movwf	??_main+1
   849     07DE  305D               	movlw	93
   850     07DF  00A4               	movwf	??_main
   851     07E0                     u167:
   852     07E0  0BA4               	decfsz	??_main,f
   853     07E1  2FE0               	goto	u167
   854     07E2  0BA5               	decfsz	??_main+1,f
   855     07E3  2FE0               	goto	u167
   856     07E4  0BA6               	decfsz	??_main+2,f
   857     07E5  2FE0               	goto	u167
   858     07E6  2F30               	goto	l862
   859     07E7  120A  118A  2800   	ljmp	start
   860     07EA                     __end_of_main:
   861                           
   862                           	psect	text1
   863     05B4                     __ptext1:	
   864 ;; *************** function _WidthLimit *****************
   865 ;; Defined at:
   866 ;;		line 16 in file "shape.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  lenghtMatrix    2    0[COMMON] int 
   869 ;;  lengthShape     2    2[COMMON] int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2    0[COMMON] int 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         4       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         4       0       0       0       0
   885 ;;Total ram usage:        4 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894     05B4                     _WidthLimit:	
   895                           ;psect for function _WidthLimit
   896                           
   897     05B4                     l830:	
   898                           ;incstack = 0
   899                           ; Regs used in _WidthLimit: [wreg+status,2+status,0]
   900                           
   901                           
   902                           ;shape.c: 17:     return lenghtMatrix - lengthShape;
   903     05B4  0872               	movf	WidthLimit@lengthShape,w
   904     05B5  0270               	subwf	WidthLimit@lenghtMatrix,w
   905     05B6  00F0               	movwf	?_WidthLimit
   906     05B7  0873               	movf	WidthLimit@lengthShape+1,w
   907     05B8  1C03               	skipc
   908     05B9  0A73               	incf	WidthLimit@lengthShape+1,w
   909     05BA  0271               	subwf	WidthLimit@lenghtMatrix+1,w
   910     05BB  00F1               	movwf	?_WidthLimit+1
   911     05BC                     l99:
   912     05BC  0008               	return
   913     05BD                     __end_of_WidthLimit:
   914                           
   915                           	psect	text2
   916     05E4                     __ptext2:	
   917 ;; *************** function _SpiInit *****************
   918 ;; Defined at:
   919 ;;		line 9 in file "spi.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946     05E4                     _SpiInit:	
   947                           ;psect for function _SpiInit
   948                           
   949     05E4                     l806:	
   950                           ;incstack = 0
   951                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
   952                           
   953                           
   954                           ;spi.c: 10:     TRISC |= 0x10;
   955     05E4  1683               	bsf	3,5	;RP0=1, select bank1
   956     05E5  1303               	bcf	3,6	;RP1=0, select bank1
   957     05E6  1607               	bsf	7,4	;volatile
   958     05E7                     l808:
   959                           
   960                           ;spi.c: 11:     TRISC &= ~0x28;
   961     05E7  30D7               	movlw	215
   962     05E8  0587               	andwf	7,f	;volatile
   963                           
   964                           ;spi.c: 12:     TRISA &= ~0x20;
   965     05E9  30DF               	movlw	223
   966     05EA  0585               	andwf	5,f	;volatile
   967                           
   968                           ;spi.c: 13:     PORTA &= ~0x20;
   969     05EB  30DF               	movlw	223
   970     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   971     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   972     05EE  0585               	andwf	5,f	;volatile
   973     05EF                     l810:
   974                           
   975                           ;spi.c: 14:     SSPCON = 0x30;
   976     05EF  3030               	movlw	48
   977     05F0  0094               	movwf	20	;volatile
   978     05F1                     l812:
   979                           
   980                           ;spi.c: 15:     SSPSTAT = 0x80;
   981     05F1  3080               	movlw	128
   982     05F2  1683               	bsf	3,5	;RP0=1, select bank1
   983     05F3  1303               	bcf	3,6	;RP1=0, select bank1
   984     05F4  0094               	movwf	20	;volatile
   985     05F5                     l56:
   986     05F5  0008               	return
   987     05F6                     __end_of_SpiInit:
   988                           
   989                           	psect	text3
   990     068B                     __ptext3:	
   991 ;; *************** function _ShowShape *****************
   992 ;; Defined at:
   993 ;;		line 8 in file "shape.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  coord           2    4[COMMON] PTR struct .
   996 ;;		 -> main@shapePosition(4), 
   997 ;;  countElemntA    2    6[COMMON] int 
   998 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
   999 ;;		 -> main@figure(3), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  pos             2    2[BANK0 ] int 
  1002 ;;  _pos            2    0[BANK0 ] int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         5       0       0       0       0
  1013 ;;      Locals:         0       4       0       0       0
  1014 ;;      Temps:          5       0       0       0       0
  1015 ;;      Totals:        10       4       0       0       0
  1016 ;;Total ram usage:       14 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 2
  1019 ;; This function calls:
  1020 ;;		_SendToSegment
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;;		_MovieAllMatr
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027     068B                     _ShowShape:	
  1028                           ;psect for function _ShowShape
  1029                           
  1030     068B                     l836:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033                           
  1034     068B                     l838:
  1035                           
  1036                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  1037     068B  0874               	movf	ShowShape@coord,w
  1038     068C  0084               	movwf	4
  1039     068D  1783               	bsf	3,7
  1040     068E  1C75               	btfss	ShowShape@coord+1,0
  1041     068F  1383               	bcf	3,7
  1042     0690  0800               	movf	0,w
  1043     0691  00F9               	movwf	??_ShowShape
  1044     0692  0A84               	incf	4,f
  1045     0693  0800               	movf	0,w
  1046     0694  00FA               	movwf	??_ShowShape+1
  1047     0695  0879               	movf	??_ShowShape,w
  1048     0696  3E01               	addlw	1
  1049     0697  1283               	bcf	3,5	;RP0=0, select bank0
  1050     0698  1303               	bcf	3,6	;RP1=0, select bank0
  1051     0699  00A2               	movwf	ShowShape@pos
  1052     069A  087A               	movf	??_ShowShape+1,w
  1053     069B  1803               	skipnc
  1054     069C  3E01               	addlw	1
  1055     069D  3E00               	addlw	0
  1056     069E  00A3               	movwf	ShowShape@pos+1
  1057     069F  2EEB               	goto	l846
  1058     06A0                     l840:
  1059                           
  1060                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  1061     06A0  0874               	movf	ShowShape@coord,w
  1062     06A1  0084               	movwf	4
  1063     06A2  1783               	bsf	3,7
  1064     06A3  1C75               	btfss	ShowShape@coord+1,0
  1065     06A4  1383               	bcf	3,7
  1066     06A5  0800               	movf	0,w
  1067     06A6  00F9               	movwf	??_ShowShape
  1068     06A7  0A84               	incf	4,f
  1069     06A8  0800               	movf	0,w
  1070     06A9  00FA               	movwf	??_ShowShape+1
  1071     06AA  0879               	movf	??_ShowShape,w
  1072     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1073     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1074     06AD  0222               	subwf	ShowShape@pos,w
  1075     06AE  00FB               	movwf	??_ShowShape+2
  1076     06AF  087A               	movf	??_ShowShape+1,w
  1077     06B0  1C03               	skipc
  1078     06B1  0A7A               	incf	??_ShowShape+1,w
  1079     06B2  0223               	subwf	ShowShape@pos+1,w
  1080     06B3  00FC               	movwf	??_ShowShape+3
  1081     06B4  087B               	movf	??_ShowShape+2,w
  1082     06B5  3EFF               	addlw	255
  1083     06B6  00A0               	movwf	ShowShape@_pos
  1084     06B7  087C               	movf	??_ShowShape+3,w
  1085     06B8  1803               	skipnc
  1086     06B9  3E01               	addlw	1
  1087     06BA  3EFF               	addlw	255
  1088     06BB  00A1               	movwf	ShowShape@_pos+1
  1089     06BC                     l842:
  1090                           
  1091                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  1092     06BC  0823               	movf	ShowShape@pos+1,w
  1093     06BD  00F2               	movwf	SendToSegment@segment+1
  1094     06BE  0822               	movf	ShowShape@pos,w
  1095     06BF  00F1               	movwf	SendToSegment@segment
  1096     06C0  0820               	movf	ShowShape@_pos,w
  1097     06C1  0778               	addwf	ShowShape@shapeArray,w
  1098     06C2  00F9               	movwf	??_ShowShape
  1099     06C3  0879               	movf	??_ShowShape,w
  1100     06C4  0084               	movwf	4
  1101     06C5  1383               	bcf	3,7	;select IRP bank0
  1102     06C6  0800               	movf	0,w
  1103     06C7  00FA               	movwf	??_ShowShape+1
  1104     06C8  0874               	movf	ShowShape@coord,w
  1105     06C9  3E02               	addlw	2
  1106     06CA  00FB               	movwf	??_ShowShape+2
  1107     06CB  0875               	movf	ShowShape@coord+1,w
  1108     06CC  1803               	skipnc
  1109     06CD  3E01               	addlw	1
  1110     06CE  3E00               	addlw	0
  1111     06CF  00FC               	movwf	??_ShowShape+3
  1112     06D0  087B               	movf	??_ShowShape+2,w
  1113     06D1  0084               	movwf	4
  1114     06D2  1783               	bsf	3,7
  1115     06D3  1C7C               	btfss	??_ShowShape+3,0
  1116     06D4  1383               	bcf	3,7
  1117     06D5  0A00               	incf	0,w
  1118     06D6  2ED9               	goto	u94
  1119     06D7                     u95:
  1120     06D7  1003               	clrc
  1121     06D8  0DFA               	rlf	??_ShowShape+1,f
  1122     06D9                     u94:
  1123     06D9  3EFF               	addlw	-1
  1124     06DA  1D03               	skipz
  1125     06DB  2ED7               	goto	u95
  1126     06DC  087A               	movf	??_ShowShape+1,w
  1127     06DD  00F3               	movwf	SendToSegment@data
  1128     06DE  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1129     06E3                     l844:
  1130                           
  1131                           ;shape.c: 13:     }
  1132     06E3  3001               	movlw	1
  1133     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1134     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1135     06E6  07A2               	addwf	ShowShape@pos,f
  1136     06E7  1803               	skipnc
  1137     06E8  0AA3               	incf	ShowShape@pos+1,f
  1138     06E9  3000               	movlw	0
  1139     06EA  07A3               	addwf	ShowShape@pos+1,f
  1140     06EB                     l846:
  1141     06EB  0874               	movf	ShowShape@coord,w
  1142     06EC  0084               	movwf	4
  1143     06ED  1783               	bsf	3,7
  1144     06EE  1C75               	btfss	ShowShape@coord+1,0
  1145     06EF  1383               	bcf	3,7
  1146     06F0  0800               	movf	0,w
  1147     06F1  00F9               	movwf	??_ShowShape
  1148     06F2  0A84               	incf	4,f
  1149     06F3  0800               	movf	0,w
  1150     06F4  00FA               	movwf	??_ShowShape+1
  1151     06F5  0876               	movf	ShowShape@countElemntArray,w
  1152     06F6  0779               	addwf	??_ShowShape,w
  1153     06F7  00FB               	movwf	??_ShowShape+2
  1154     06F8  0877               	movf	ShowShape@countElemntArray+1,w
  1155     06F9  1803               	skipnc
  1156     06FA  0A77               	incf	ShowShape@countElemntArray+1,w
  1157     06FB  077A               	addwf	??_ShowShape+1,w
  1158     06FC  00FC               	movwf	??_ShowShape+3
  1159     06FD  087C               	movf	??_ShowShape+3,w
  1160     06FE  3A80               	xorlw	128
  1161     06FF  00FD               	movwf	??_ShowShape+4
  1162     0700  0823               	movf	ShowShape@pos+1,w
  1163     0701  3A80               	xorlw	128
  1164     0702  027D               	subwf	??_ShowShape+4,w
  1165     0703  1D03               	skipz
  1166     0704  2F07               	goto	u105
  1167     0705  0822               	movf	ShowShape@pos,w
  1168     0706  027B               	subwf	??_ShowShape+2,w
  1169     0707                     u105:
  1170     0707  1803               	skipnc
  1171     0708  2F0A               	goto	u101
  1172     0709  2F0B               	goto	u100
  1173     070A                     u101:
  1174     070A  2EA0               	goto	l840
  1175     070B                     u100:
  1176     070B                     l96:
  1177     070B  0008               	return
  1178     070C                     __end_of_ShowShape:
  1179                           
  1180                           	psect	text4
  1181     05AD                     __ptext4:	
  1182 ;; *************** function _PortBInit *****************
  1183 ;; Defined at:
  1184 ;;		line 13 in file "portsinit.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		status,2
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211     05AD                     _PortBInit:	
  1212                           ;psect for function _PortBInit
  1213                           
  1214     05AD                     l828:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _PortBInit: [status,2]
  1217                           
  1218                           
  1219                           ;portsinit.c: 14:     TRISB = 0x00;
  1220     05AD  1683               	bsf	3,5	;RP0=1, select bank1
  1221     05AE  1303               	bcf	3,6	;RP1=0, select bank1
  1222     05AF  0186               	clrf	6	;volatile
  1223                           
  1224                           ;portsinit.c: 15:     PORTB = 0x00;
  1225     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1226     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1227     05B2  0186               	clrf	6	;volatile
  1228     05B3                     l39:
  1229     05B3  0008               	return
  1230     05B4                     __end_of_PortBInit:
  1231                           
  1232                           	psect	text5
  1233     0632                     __ptext5:	
  1234 ;; *************** function _MovieUp *****************
  1235 ;; Defined at:
  1236 ;;		line 36 in file "shape.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  _shapePositi    2    0[COMMON] PTR struct .
  1239 ;;		 -> main@shapePosition(4), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         2       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         4       0       0       0       0
  1255 ;;Total ram usage:        4 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264     0632                     _MovieUp:	
  1265                           ;psect for function _MovieUp
  1266                           
  1267     0632                     l850:	
  1268                           ;incstack = 0
  1269                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1270                           
  1271                           
  1272                           ;shape.c: 37:     _shapePosition->y--;
  1273     0632  0870               	movf	MovieUp@_shapePosition,w
  1274     0633  3E02               	addlw	2
  1275     0634  00F2               	movwf	??_MovieUp
  1276     0635  0871               	movf	MovieUp@_shapePosition+1,w
  1277     0636  1803               	skipnc
  1278     0637  3E01               	addlw	1
  1279     0638  3E00               	addlw	0
  1280     0639  00F3               	movwf	??_MovieUp+1
  1281     063A  0872               	movf	??_MovieUp,w
  1282     063B  0084               	movwf	4
  1283     063C  1783               	bsf	3,7
  1284     063D  1C73               	btfss	??_MovieUp+1,0
  1285     063E  1383               	bcf	3,7
  1286     063F  30FF               	movlw	255
  1287     0640  0780               	addwf	0,f
  1288     0641  0F84               	incfsz	4,f
  1289     0642  0800               	movf	0,w
  1290     0643  1803               	skipnc
  1291     0644  0A00               	incf	0,w
  1292     0645  00FF               	movwf	btemp+1
  1293     0646  30FF               	movlw	255
  1294     0647  077F               	addwf	btemp+1,w
  1295     0648  0080               	movwf	0
  1296     0649  0384               	decf	4,f
  1297     064A                     l114:
  1298     064A  0008               	return
  1299     064B                     __end_of_MovieUp:
  1300                           
  1301                           	psect	text6
  1302     05C8                     __ptext6:	
  1303 ;; *************** function _MovieRigth *****************
  1304 ;; Defined at:
  1305 ;;		line 44 in file "shape.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  _shapePositi    2    0[COMMON] PTR struct .
  1308 ;;		 -> main@shapePosition(4), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         2       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         2       0       0       0       0
  1324 ;;Total ram usage:        2 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     05C8                     _MovieRigth:	
  1334                           ;psect for function _MovieRigth
  1335                           
  1336     05C8                     l848:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  1339                           
  1340                           
  1341                           ;shape.c: 45:     _shapePosition->x++;
  1342     05C8  0870               	movf	MovieRigth@_shapePosition,w
  1343     05C9  0084               	movwf	4
  1344     05CA  1783               	bsf	3,7
  1345     05CB  1C71               	btfss	MovieRigth@_shapePosition+1,0
  1346     05CC  1383               	bcf	3,7
  1347     05CD  3001               	movlw	1
  1348     05CE  0780               	addwf	0,f
  1349     05CF  0A84               	incf	4,f
  1350     05D0  1803               	skipnc
  1351     05D1  0A80               	incf	0,f
  1352     05D2                     l120:
  1353     05D2  0008               	return
  1354     05D3                     __end_of_MovieRigth:
  1355                           
  1356                           	psect	text7
  1357     05D3                     __ptext7:	
  1358 ;; *************** function _MovieLeft *****************
  1359 ;; Defined at:
  1360 ;;		line 40 in file "shape.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  _shapePositi    2    0[COMMON] PTR struct .
  1363 ;;		 -> main@shapePosition(4), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, btemp+1
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         2       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         2       0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     05D3                     _MovieLeft:	
  1389                           ;psect for function _MovieLeft
  1390                           
  1391     05D3                     l852:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  1394                           
  1395                           
  1396                           ;shape.c: 41:     _shapePosition->x--;
  1397     05D3  0870               	movf	MovieLeft@_shapePosition,w
  1398     05D4  0084               	movwf	4
  1399     05D5  1783               	bsf	3,7
  1400     05D6  1C71               	btfss	MovieLeft@_shapePosition+1,0
  1401     05D7  1383               	bcf	3,7
  1402     05D8  30FF               	movlw	255
  1403     05D9  0780               	addwf	0,f
  1404     05DA  0F84               	incfsz	4,f
  1405     05DB  0800               	movf	0,w
  1406     05DC  1803               	skipnc
  1407     05DD  0A00               	incf	0,w
  1408     05DE  00FF               	movwf	btemp+1
  1409     05DF  30FF               	movlw	255
  1410     05E0  077F               	addwf	btemp+1,w
  1411     05E1  0080               	movwf	0
  1412     05E2  0384               	decf	4,f
  1413     05E3                     l117:
  1414     05E3  0008               	return
  1415     05E4                     __end_of_MovieLeft:
  1416                           
  1417                           	psect	text8
  1418     0609                     __ptext8:	
  1419 ;; *************** function _MovieDown *****************
  1420 ;; Defined at:
  1421 ;;		line 32 in file "shape.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  _shapePositi    2    0[COMMON] PTR struct .
  1424 ;;		 -> main@shapePosition(4), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         2       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          2       0       0       0       0
  1439 ;;      Totals:         4       0       0       0       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     0609                     _MovieDown:	
  1450                           ;psect for function _MovieDown
  1451                           
  1452     0609                     l834:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  1455                           
  1456                           
  1457                           ;shape.c: 33:     _shapePosition->y++;
  1458     0609  0870               	movf	MovieDown@_shapePosition,w
  1459     060A  3E02               	addlw	2
  1460     060B  00F2               	movwf	??_MovieDown
  1461     060C  0871               	movf	MovieDown@_shapePosition+1,w
  1462     060D  1803               	skipnc
  1463     060E  3E01               	addlw	1
  1464     060F  3E00               	addlw	0
  1465     0610  00F3               	movwf	??_MovieDown+1
  1466     0611  0872               	movf	??_MovieDown,w
  1467     0612  0084               	movwf	4
  1468     0613  1783               	bsf	3,7
  1469     0614  1C73               	btfss	??_MovieDown+1,0
  1470     0615  1383               	bcf	3,7
  1471     0616  3001               	movlw	1
  1472     0617  0780               	addwf	0,f
  1473     0618  0A84               	incf	4,f
  1474     0619  1803               	skipnc
  1475     061A  0A80               	incf	0,f
  1476     061B                     l111:
  1477     061B  0008               	return
  1478     061C                     __end_of_MovieDown:
  1479                           
  1480                           	psect	text9
  1481     064B                     __ptext9:	
  1482 ;; *************** function _MatrixInit *****************
  1483 ;; Defined at:
  1484 ;;		line 20 in file "matrix.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0
  1500 ;;      Temps:          3       0       0       0       0
  1501 ;;      Totals:         3       0       0       0       0
  1502 ;;Total ram usage:        3 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 3
  1505 ;; This function calls:
  1506 ;;		_SendToSegment
  1507 ;;		_SpiClearMatrix
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513     064B                     _MatrixInit:	
  1514                           ;psect for function _MatrixInit
  1515                           
  1516     064B                     l814:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  1519                           
  1520                           
  1521                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1522     064B  3003               	movlw	3
  1523     064C  00F9               	movwf	??_MatrixInit+2
  1524     064D  3008               	movlw	8
  1525     064E  00F8               	movwf	??_MatrixInit+1
  1526     064F  3077               	movlw	119
  1527     0650  00F7               	movwf	??_MatrixInit
  1528     0651                     u177:
  1529     0651  0BF7               	decfsz	??_MatrixInit,f
  1530     0652  2E51               	goto	u177
  1531     0653  0BF8               	decfsz	??_MatrixInit+1,f
  1532     0654  2E51               	goto	u177
  1533     0655  0BF9               	decfsz	??_MatrixInit+2,f
  1534     0656  2E51               	goto	u177
  1535     0657                     l816:
  1536                           
  1537                           ;matrix.c: 22:     RA5=1;
  1538     0657  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0658  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0659  1685               	bsf	5,5	;volatile
  1541     065A                     l818:
  1542                           
  1543                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  1544     065A  3009               	movlw	9
  1545     065B  00F1               	movwf	SendToSegment@segment
  1546     065C  3000               	movlw	0
  1547     065D  00F2               	movwf	SendToSegment@segment+1
  1548     065E  01F3               	clrf	SendToSegment@data
  1549     065F  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1550     0664                     l820:
  1551                           
  1552                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  1553     0664  300B               	movlw	11
  1554     0665  00F1               	movwf	SendToSegment@segment
  1555     0666  3000               	movlw	0
  1556     0667  00F2               	movwf	SendToSegment@segment+1
  1557     0668  3007               	movlw	7
  1558     0669  00F3               	movwf	SendToSegment@data
  1559     066A  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1560     066F                     l822:
  1561                           
  1562                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  1563     066F  300A               	movlw	10
  1564     0670  00F1               	movwf	SendToSegment@segment
  1565     0671  3000               	movlw	0
  1566     0672  00F2               	movwf	SendToSegment@segment+1
  1567     0673  3002               	movlw	2
  1568     0674  00F3               	movwf	SendToSegment@data
  1569     0675  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1570     067A                     l824:
  1571                           
  1572                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  1573     067A  300C               	movlw	12
  1574     067B  00F1               	movwf	SendToSegment@segment
  1575     067C  3000               	movlw	0
  1576     067D  00F2               	movwf	SendToSegment@segment+1
  1577     067E  01F3               	clrf	SendToSegment@data
  1578     067F  0AF3               	incf	SendToSegment@data,f
  1579     0680  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1580     0685                     l826:
  1581                           
  1582                           ;matrix.c: 27:     SpiClearMatrix();
  1583     0685  120A  118A  261C  120A  118A  	fcall	_SpiClearMatrix
  1584     068A                     l78:
  1585     068A  0008               	return
  1586     068B                     __end_of_MatrixInit:
  1587                           
  1588                           	psect	text10
  1589     061C                     __ptext10:	
  1590 ;; *************** function _SpiClearMatrix *****************
  1591 ;; Defined at:
  1592 ;;		line 10 in file "matrix.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  i               1    6[COMMON] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         1       0       0       0       0
  1608 ;;      Temps:          2       0       0       0       0
  1609 ;;      Totals:         3       0       0       0       0
  1610 ;;Total ram usage:        3 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 2
  1613 ;; This function calls:
  1614 ;;		_SendToSegment
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;;		_MatrixInit
  1618 ;;		_MovieAllMatr
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622     061C                     _SpiClearMatrix:	
  1623                           ;psect for function _SpiClearMatrix
  1624                           
  1625     061C                     l800:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  1628                           
  1629                           
  1630                           ;matrix.c: 12:   char i = 8;
  1631     061C  3008               	movlw	8
  1632     061D  00F6               	movwf	SpiClearMatrix@i
  1633     061E                     l802:
  1634                           
  1635                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  1636     061E  0876               	movf	SpiClearMatrix@i,w
  1637     061F  00F4               	movwf	??_SpiClearMatrix
  1638     0620  01F5               	clrf	??_SpiClearMatrix+1
  1639     0621  0874               	movf	??_SpiClearMatrix,w
  1640     0622  00F1               	movwf	SendToSegment@segment
  1641     0623  0875               	movf	??_SpiClearMatrix+1,w
  1642     0624  00F2               	movwf	SendToSegment@segment+1
  1643     0625  01F3               	clrf	SendToSegment@data
  1644     0626  120A  118A  25F6  120A  118A  	fcall	_SendToSegment
  1645     062B                     l804:
  1646                           
  1647                           ;matrix.c: 16:   } while (--i);
  1648     062B  3001               	movlw	1
  1649     062C  02F6               	subwf	SpiClearMatrix@i,f
  1650     062D  1D03               	btfss	3,2
  1651     062E  2E30               	goto	u81
  1652     062F  2E31               	goto	u80
  1653     0630                     u81:
  1654     0630  2E1E               	goto	l802
  1655     0631                     u80:
  1656     0631                     l75:
  1657     0631  0008               	return
  1658     0632                     __end_of_SpiClearMatrix:
  1659                           
  1660                           	psect	text11
  1661     05F6                     __ptext11:	
  1662 ;; *************** function _SendToSegment *****************
  1663 ;; Defined at:
  1664 ;;		line 34 in file "matrix.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  segment         2    1[COMMON] int 
  1667 ;;  data            1    3[COMMON] unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         3       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         3       0       0       0       0
  1683 ;;Total ram usage:        3 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 1
  1686 ;; This function calls:
  1687 ;;		_SpiSendByte
  1688 ;; This function is called by:
  1689 ;;		_SpiClearMatrix
  1690 ;;		_MatrixInit
  1691 ;;		_ShowShape
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695     05F6                     _SendToSegment:	
  1696                           ;psect for function _SendToSegment
  1697                           
  1698     05F6                     l794:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  1701                           
  1702                           
  1703                           ;matrix.c: 35:     RA5 = 0;
  1704     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1705     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1706     05F8  1285               	bcf	5,5	;volatile
  1707     05F9                     l796:
  1708                           
  1709                           ;matrix.c: 36:     SpiSendByte((char)segment);
  1710     05F9  0871               	movf	SendToSegment@segment,w
  1711     05FA  120A  118A  25BD  120A  118A  	fcall	_SpiSendByte
  1712                           
  1713                           ;matrix.c: 37:     SpiSendByte(data);
  1714     05FF  0873               	movf	SendToSegment@data,w
  1715     0600  120A  118A  25BD  120A  118A  	fcall	_SpiSendByte
  1716     0605                     l798:
  1717                           
  1718                           ;matrix.c: 38:     RA5 = 1;
  1719     0605  1283               	bcf	3,5	;RP0=0, select bank0
  1720     0606  1303               	bcf	3,6	;RP1=0, select bank0
  1721     0607  1685               	bsf	5,5	;volatile
  1722     0608                     l81:
  1723     0608  0008               	return
  1724     0609                     __end_of_SendToSegment:
  1725                           
  1726                           	psect	text12
  1727     05BD                     __ptext12:	
  1728 ;; *************** function _SpiSendByte *****************
  1729 ;; Defined at:
  1730 ;;		line 18 in file "spi.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  data            1    wreg     unsigned char 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  data            1    0[COMMON] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         1       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         1       0       0       0       0
  1748 ;;Total ram usage:        1 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_SendToSegment
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757     05BD                     _SpiSendByte:	
  1758                           ;psect for function _SpiSendByte
  1759                           
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _SpiSendByte: [wreg]
  1763                           ;SpiSendByte@data stored from wreg
  1764     05BD  00F0               	movwf	SpiSendByte@data
  1765     05BE                     l792:
  1766                           
  1767                           ;spi.c: 19:     SSPBUF = data;
  1768     05BE  0870               	movf	SpiSendByte@data,w
  1769     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1770     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1771     05C1  0093               	movwf	19	;volatile
  1772     05C2                     l59:	
  1773                           ;spi.c: 20:     while (!SSPIF);
  1774                           
  1775     05C2  1D8C               	btfss	12,3	;volatile
  1776     05C3  2DC5               	goto	u71
  1777     05C4  2DC6               	goto	u70
  1778     05C5                     u71:
  1779     05C5  2DC2               	goto	l59
  1780     05C6                     u70:
  1781     05C6                     l61:
  1782                           
  1783                           ;spi.c: 21:     SSPIF = 0;
  1784     05C6  118C               	bcf	12,3	;volatile
  1785     05C7                     l62:
  1786     05C7  0008               	return
  1787     05C8                     __end_of_SpiSendByte:
  1788     0002                     ___latbits      equ	2
  1789     007E                     btemp           set	126	;btemp
  1790     007E                     wtemp0          set	126
  1791                           
  1792                           	psect	config
  1793                           
  1794                           ;Config register CONFIG @ 0x2007
  1795                           ;	Oscillator Selection bits
  1796                           ;	FOSC = HS, HS oscillator
  1797                           ;	Watchdog Timer Enable bit
  1798                           ;	WDTE = OFF, WDT disabled
  1799                           ;	Power-up Timer Enable bit
  1800                           ;	PWRTE = OFF, PWRT disabled
  1801                           ;	FLASH Program Memory Code Protection bits
  1802                           ;	CP = OFF, Code protection off
  1803                           ;	Brown-out Reset Enable bit
  1804                           ;	BOREN = OFF, BOR disabled
  1805                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1806                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1807                           ;	Data EE Memory Code Protection
  1808                           ;	CPD = OFF, Code Protection off
  1809                           ;	FLASH Program Memory Write Enable
  1810                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1811                           ;	In-Circuit Debugger Mode bit
  1812                           ;	DEBUG = 0x1, unprogrammed default
  1813     2007                     	org	8199
  1814     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@figure(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_ShowShape
    _ShowShape->_SendToSegment
    _MatrixInit->_SpiClearMatrix
    _SpiClearMatrix->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1111
                                              4 BANK0     10    10      0
                         _MatrixInit
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _PortBInit
                          _ShowShape
                     _SpiClearMatrix
                            _SpiInit
                         _WidthLimit
 ---------------------------------------------------------------------------------
 (1) _WidthLimit                                           4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowShape                                           14     9      5     324
                                              4 COMMON    10     5      5
                                              0 BANK0      4     4      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (2) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (3) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MatrixInit
     _SendToSegment
       _SpiSendByte
     _SpiClearMatrix
       _SendToSegment
   _MovieDown
   _MovieLeft
   _MovieRigth
   _MovieUp
   _PortBInit
   _ShowShape
     _SendToSegment
   _SpiClearMatrix
   _SpiInit
   _WidthLimit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     14      17     21.2%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      31      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Dec  6 16:00:20 2024

           _SpiClearMatrix 061C                         l61 05C6                         l62 05C7  
                       l39 05B3                         l56 05F5                         l81 0608  
                       l59 05C2                         l75 0631                         l78 068A  
                       l96 070B                         l99 05BC                         u70 05C6  
                       u71 05C5                         u80 0631                         u81 0630  
                       u94 06D9                         u95 06D7            SpiSendByte@data 0070  
                      l111 061B                        l120 05D2                        l114 064A  
                      l117 05E3                        l800 061C                        l802 061E  
                      l810 05EF                        l804 062B                        l820 0664  
                      l812 05F1                        l822 066F                        l814 064B  
                      l806 05E4                        l830 05B4                        l824 067A  
                      l816 0657                        l840 06A0                        l808 05E7  
                      l826 0685                        l818 065A                        l834 0609  
                      l850 0632                        l842 06BC                        l852 05D3  
                      l828 05AD                        l844 06E3                        l836 068B  
                      l860 0728                        l846 06EB                        l838 068B  
                      l870 0757                        l862 0730                        l854 070C  
                      l792 05BE                        l848 05C8                        l880 0790  
                      l872 0765                        l864 0736                        l856 0716  
                      l794 05F6                        l890 07C4                        l882 0799  
                      l874 076E                        l866 073A                        l858 071B  
                      l796 05F9                        l892 07C9                        l884 079E  
                      l876 0773                        l868 0743                        l798 0605  
                      l894 07D8                        l886 07AD                        l878 0782  
                      l888 07BB                        _RA5 002D                        u100 070B  
                      u101 070A                        u105 0707                        u137 075F  
                      u147 078A                        u157 07B5                        u167 07E0  
                      u177 0651                        fsr0 0004                        indf 0000  
                     _main 070C                       btemp 007E                       start 0000  
   __end_of_SpiClearMatrix 0632            __end_of_MovieUp 064B            __end_of_SpiInit 05F6  
                    ?_main 0070                      _PORTA 0005                      _PORTB 0006  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _SSPIF 0063            SpiClearMatrix@i 0076          SendToSegment@data 0073  
                    status 0003                      wtemp0 007E            ?_SpiClearMatrix 0070  
          __initialization 07EA               __end_of_main 07EA                 _MatrixInit 064B  
                   ??_main 0024                     _SSPCON 0014                     _SSPBUF 0013  
               _MovieRigth 05C8                  ??_MovieUp 0072                  ??_SpiInit 0070  
            ??_SpiSendByte 0070                 _WidthLimit 05B4             ShowShape@coord 0074  
  __end_of__initialization 07FC             __pcstackCOMMON 0070               __pidataBANK0 05AA  
              ?_MatrixInit 0070        __end_of_SpiSendByte 05C8          __end_of_MovieLeft 05E4  
        __end_of_MovieDown 061C          __end_of_PortBInit 05B4          __end_of_ShowShape 070C  
        main@shapePosition 002A                ?_MovieRigth 0070                 __pmaintext 070C  
              ?_WidthLimit 0070  ShowShape@countElemntArray 0076                    _SSPSTAT 0094  
         ??_SpiClearMatrix 0074                    _MovieUp 0632                    _SpiInit 05E4  
            _SendToSegment 05F6                _SpiSendByte 05BD                    __ptext1 05B4  
                  __ptext2 05E4                    __ptext3 068B                    __ptext4 05AD  
                  __ptext5 0632                    __ptext6 05C8                    __ptext7 05D3  
                  __ptext8 0609                    __ptext9 064B      WidthLimit@lengthShape 0072  
     end_of_initialization 07FC             ?_SendToSegment 0071    MovieLeft@_shapePosition 0070  
               main@figure 0027               ??_MatrixInit 0077        start_initialization 07EA  
       __end_of_MatrixInit 068B            ??_SendToSegment 0074               ??_MovieRigth 0072  
                _MovieLeft 05D3                  _MovieDown 0609                  _PortBInit 05AD  
                _ShowShape 068B                __pdataBANK0 002E              ShowShape@_pos 0020  
             ??_WidthLimit 0074                  ___latbits 0002              __pcstackBANK0 0020  
       __end_of_MovieRigth 05D3        ShowShape@shapeArray 0078                 ?_MovieLeft 0070  
               ?_MovieDown 0070                   ?_MovieUp 0070                   ?_SpiInit 0070  
               ?_PortBInit 0070         __end_of_WidthLimit 05BD               ?_SpiSendByte 0070  
               ?_ShowShape 0074    MovieDown@_shapePosition 0070      MovieUp@_shapePosition 0070  
              ??_MovieLeft 0072                ??_MovieDown 0072                ??_PortBInit 0070  
              ??_ShowShape 0079               ShowShape@pos 0022     WidthLimit@lenghtMatrix 0070  
                 __ptext10 061C                   __ptext11 05F6                   __ptext12 05BD  
                 main@F911 002E       SendToSegment@segment 0071      __end_of_SendToSegment 0609  
 MovieRigth@_shapePosition 0070  
