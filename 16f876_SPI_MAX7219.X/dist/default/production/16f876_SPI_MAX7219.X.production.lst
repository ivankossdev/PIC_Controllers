

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 18 08:55:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F876 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0004                     fsr             equ	4
    72     0004                     fsr0            equ	4
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0000                     INDF            equ	0	;# 
    80     0001                     TMR0            equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR             equ	4	;# 
    84     0005                     PORTA           equ	5	;# 
    85     0006                     PORTB           equ	6	;# 
    86     0007                     PORTC           equ	7	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     000C                     PIR1            equ	12	;# 
    90     000D                     PIR2            equ	13	;# 
    91     000E                     TMR1            equ	14	;# 
    92     000E                     TMR1L           equ	14	;# 
    93     000F                     TMR1H           equ	15	;# 
    94     0010                     T1CON           equ	16	;# 
    95     0011                     TMR2            equ	17	;# 
    96     0012                     T2CON           equ	18	;# 
    97     0013                     SSPBUF          equ	19	;# 
    98     0014                     SSPCON          equ	20	;# 
    99     0015                     CCPR1           equ	21	;# 
   100     0015                     CCPR1L          equ	21	;# 
   101     0016                     CCPR1H          equ	22	;# 
   102     0017                     CCP1CON         equ	23	;# 
   103     0018                     RCSTA           equ	24	;# 
   104     0019                     TXREG           equ	25	;# 
   105     001A                     RCREG           equ	26	;# 
   106     001B                     CCPR2           equ	27	;# 
   107     001B                     CCPR2L          equ	27	;# 
   108     001C                     CCPR2H          equ	28	;# 
   109     001D                     CCP2CON         equ	29	;# 
   110     001E                     ADRESH          equ	30	;# 
   111     001F                     ADCON0          equ	31	;# 
   112     0081                     OPTION_REG      equ	129	;# 
   113     0085                     TRISA           equ	133	;# 
   114     0086                     TRISB           equ	134	;# 
   115     0087                     TRISC           equ	135	;# 
   116     008C                     PIE1            equ	140	;# 
   117     008D                     PIE2            equ	141	;# 
   118     008E                     PCON            equ	142	;# 
   119     0091                     SSPCON2         equ	145	;# 
   120     0092                     PR2             equ	146	;# 
   121     0093                     SSPADD          equ	147	;# 
   122     0094                     SSPSTAT         equ	148	;# 
   123     0098                     TXSTA           equ	152	;# 
   124     0099                     SPBRG           equ	153	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     008C                     PIE1            equ	140	;# 
   171     008D                     PIE2            equ	141	;# 
   172     008E                     PCON            equ	142	;# 
   173     0091                     SSPCON2         equ	145	;# 
   174     0092                     PR2             equ	146	;# 
   175     0093                     SSPADD          equ	147	;# 
   176     0094                     SSPSTAT         equ	148	;# 
   177     0098                     TXSTA           equ	152	;# 
   178     0099                     SPBRG           equ	153	;# 
   179     009E                     ADRESL          equ	158	;# 
   180     009F                     ADCON1          equ	159	;# 
   181     010C                     EEDATA          equ	268	;# 
   182     010D                     EEADR           equ	269	;# 
   183     010E                     EEDATH          equ	270	;# 
   184     010F                     EEADRH          equ	271	;# 
   185     018C                     EECON1          equ	396	;# 
   186     018D                     EECON2          equ	397	;# 
   187     0000                     INDF            equ	0	;# 
   188     0001                     TMR0            equ	1	;# 
   189     0002                     PCL             equ	2	;# 
   190     0003                     STATUS          equ	3	;# 
   191     0004                     FSR             equ	4	;# 
   192     0005                     PORTA           equ	5	;# 
   193     0006                     PORTB           equ	6	;# 
   194     0007                     PORTC           equ	7	;# 
   195     000A                     PCLATH          equ	10	;# 
   196     000B                     INTCON          equ	11	;# 
   197     000C                     PIR1            equ	12	;# 
   198     000D                     PIR2            equ	13	;# 
   199     000E                     TMR1            equ	14	;# 
   200     000E                     TMR1L           equ	14	;# 
   201     000F                     TMR1H           equ	15	;# 
   202     0010                     T1CON           equ	16	;# 
   203     0011                     TMR2            equ	17	;# 
   204     0012                     T2CON           equ	18	;# 
   205     0013                     SSPBUF          equ	19	;# 
   206     0014                     SSPCON          equ	20	;# 
   207     0015                     CCPR1           equ	21	;# 
   208     0015                     CCPR1L          equ	21	;# 
   209     0016                     CCPR1H          equ	22	;# 
   210     0017                     CCP1CON         equ	23	;# 
   211     0018                     RCSTA           equ	24	;# 
   212     0019                     TXREG           equ	25	;# 
   213     001A                     RCREG           equ	26	;# 
   214     001B                     CCPR2           equ	27	;# 
   215     001B                     CCPR2L          equ	27	;# 
   216     001C                     CCPR2H          equ	28	;# 
   217     001D                     CCP2CON         equ	29	;# 
   218     001E                     ADRESH          equ	30	;# 
   219     001F                     ADCON0          equ	31	;# 
   220     0081                     OPTION_REG      equ	129	;# 
   221     0085                     TRISA           equ	133	;# 
   222     0086                     TRISB           equ	134	;# 
   223     0087                     TRISC           equ	135	;# 
   224     008C                     PIE1            equ	140	;# 
   225     008D                     PIE2            equ	141	;# 
   226     008E                     PCON            equ	142	;# 
   227     0091                     SSPCON2         equ	145	;# 
   228     0092                     PR2             equ	146	;# 
   229     0093                     SSPADD          equ	147	;# 
   230     0094                     SSPSTAT         equ	148	;# 
   231     0098                     TXSTA           equ	152	;# 
   232     0099                     SPBRG           equ	153	;# 
   233     009E                     ADRESL          equ	158	;# 
   234     009F                     ADCON1          equ	159	;# 
   235     010C                     EEDATA          equ	268	;# 
   236     010D                     EEADR           equ	269	;# 
   237     010E                     EEDATH          equ	270	;# 
   238     010F                     EEADRH          equ	271	;# 
   239     018C                     EECON1          equ	396	;# 
   240     018D                     EECON2          equ	397	;# 
   241     0000                     INDF            equ	0	;# 
   242     0001                     TMR0            equ	1	;# 
   243     0002                     PCL             equ	2	;# 
   244     0003                     STATUS          equ	3	;# 
   245     0004                     FSR             equ	4	;# 
   246     0005                     PORTA           equ	5	;# 
   247     0006                     PORTB           equ	6	;# 
   248     0007                     PORTC           equ	7	;# 
   249     000A                     PCLATH          equ	10	;# 
   250     000B                     INTCON          equ	11	;# 
   251     000C                     PIR1            equ	12	;# 
   252     000D                     PIR2            equ	13	;# 
   253     000E                     TMR1            equ	14	;# 
   254     000E                     TMR1L           equ	14	;# 
   255     000F                     TMR1H           equ	15	;# 
   256     0010                     T1CON           equ	16	;# 
   257     0011                     TMR2            equ	17	;# 
   258     0012                     T2CON           equ	18	;# 
   259     0013                     SSPBUF          equ	19	;# 
   260     0014                     SSPCON          equ	20	;# 
   261     0015                     CCPR1           equ	21	;# 
   262     0015                     CCPR1L          equ	21	;# 
   263     0016                     CCPR1H          equ	22	;# 
   264     0017                     CCP1CON         equ	23	;# 
   265     0018                     RCSTA           equ	24	;# 
   266     0019                     TXREG           equ	25	;# 
   267     001A                     RCREG           equ	26	;# 
   268     001B                     CCPR2           equ	27	;# 
   269     001B                     CCPR2L          equ	27	;# 
   270     001C                     CCPR2H          equ	28	;# 
   271     001D                     CCP2CON         equ	29	;# 
   272     001E                     ADRESH          equ	30	;# 
   273     001F                     ADCON0          equ	31	;# 
   274     0081                     OPTION_REG      equ	129	;# 
   275     0085                     TRISA           equ	133	;# 
   276     0086                     TRISB           equ	134	;# 
   277     0087                     TRISC           equ	135	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     0091                     SSPCON2         equ	145	;# 
   282     0092                     PR2             equ	146	;# 
   283     0093                     SSPADD          equ	147	;# 
   284     0094                     SSPSTAT         equ	148	;# 
   285     0098                     TXSTA           equ	152	;# 
   286     0099                     SPBRG           equ	153	;# 
   287     009E                     ADRESL          equ	158	;# 
   288     009F                     ADCON1          equ	159	;# 
   289     010C                     EEDATA          equ	268	;# 
   290     010D                     EEADR           equ	269	;# 
   291     010E                     EEDATH          equ	270	;# 
   292     010F                     EEADRH          equ	271	;# 
   293     018C                     EECON1          equ	396	;# 
   294     018D                     EECON2          equ	397	;# 
   295     0000                     INDF            equ	0	;# 
   296     0001                     TMR0            equ	1	;# 
   297     0002                     PCL             equ	2	;# 
   298     0003                     STATUS          equ	3	;# 
   299     0004                     FSR             equ	4	;# 
   300     0005                     PORTA           equ	5	;# 
   301     0006                     PORTB           equ	6	;# 
   302     0007                     PORTC           equ	7	;# 
   303     000A                     PCLATH          equ	10	;# 
   304     000B                     INTCON          equ	11	;# 
   305     000C                     PIR1            equ	12	;# 
   306     000D                     PIR2            equ	13	;# 
   307     000E                     TMR1            equ	14	;# 
   308     000E                     TMR1L           equ	14	;# 
   309     000F                     TMR1H           equ	15	;# 
   310     0010                     T1CON           equ	16	;# 
   311     0011                     TMR2            equ	17	;# 
   312     0012                     T2CON           equ	18	;# 
   313     0013                     SSPBUF          equ	19	;# 
   314     0014                     SSPCON          equ	20	;# 
   315     0015                     CCPR1           equ	21	;# 
   316     0015                     CCPR1L          equ	21	;# 
   317     0016                     CCPR1H          equ	22	;# 
   318     0017                     CCP1CON         equ	23	;# 
   319     0018                     RCSTA           equ	24	;# 
   320     0019                     TXREG           equ	25	;# 
   321     001A                     RCREG           equ	26	;# 
   322     001B                     CCPR2           equ	27	;# 
   323     001B                     CCPR2L          equ	27	;# 
   324     001C                     CCPR2H          equ	28	;# 
   325     001D                     CCP2CON         equ	29	;# 
   326     001E                     ADRESH          equ	30	;# 
   327     001F                     ADCON0          equ	31	;# 
   328     0081                     OPTION_REG      equ	129	;# 
   329     0085                     TRISA           equ	133	;# 
   330     0086                     TRISB           equ	134	;# 
   331     0087                     TRISC           equ	135	;# 
   332     008C                     PIE1            equ	140	;# 
   333     008D                     PIE2            equ	141	;# 
   334     008E                     PCON            equ	142	;# 
   335     0091                     SSPCON2         equ	145	;# 
   336     0092                     PR2             equ	146	;# 
   337     0093                     SSPADD          equ	147	;# 
   338     0094                     SSPSTAT         equ	148	;# 
   339     0098                     TXSTA           equ	152	;# 
   340     0099                     SPBRG           equ	153	;# 
   341     009E                     ADRESL          equ	158	;# 
   342     009F                     ADCON1          equ	159	;# 
   343     010C                     EEDATA          equ	268	;# 
   344     010D                     EEADR           equ	269	;# 
   345     010E                     EEDATH          equ	270	;# 
   346     010F                     EEADRH          equ	271	;# 
   347     018C                     EECON1          equ	396	;# 
   348     018D                     EECON2          equ	397	;# 
   349     0000                     INDF            equ	0	;# 
   350     0001                     TMR0            equ	1	;# 
   351     0002                     PCL             equ	2	;# 
   352     0003                     STATUS          equ	3	;# 
   353     0004                     FSR             equ	4	;# 
   354     0005                     PORTA           equ	5	;# 
   355     0006                     PORTB           equ	6	;# 
   356     0007                     PORTC           equ	7	;# 
   357     000A                     PCLATH          equ	10	;# 
   358     000B                     INTCON          equ	11	;# 
   359     000C                     PIR1            equ	12	;# 
   360     000D                     PIR2            equ	13	;# 
   361     000E                     TMR1            equ	14	;# 
   362     000E                     TMR1L           equ	14	;# 
   363     000F                     TMR1H           equ	15	;# 
   364     0010                     T1CON           equ	16	;# 
   365     0011                     TMR2            equ	17	;# 
   366     0012                     T2CON           equ	18	;# 
   367     0013                     SSPBUF          equ	19	;# 
   368     0014                     SSPCON          equ	20	;# 
   369     0015                     CCPR1           equ	21	;# 
   370     0015                     CCPR1L          equ	21	;# 
   371     0016                     CCPR1H          equ	22	;# 
   372     0017                     CCP1CON         equ	23	;# 
   373     0018                     RCSTA           equ	24	;# 
   374     0019                     TXREG           equ	25	;# 
   375     001A                     RCREG           equ	26	;# 
   376     001B                     CCPR2           equ	27	;# 
   377     001B                     CCPR2L          equ	27	;# 
   378     001C                     CCPR2H          equ	28	;# 
   379     001D                     CCP2CON         equ	29	;# 
   380     001E                     ADRESH          equ	30	;# 
   381     001F                     ADCON0          equ	31	;# 
   382     0081                     OPTION_REG      equ	129	;# 
   383     0085                     TRISA           equ	133	;# 
   384     0086                     TRISB           equ	134	;# 
   385     0087                     TRISC           equ	135	;# 
   386     008C                     PIE1            equ	140	;# 
   387     008D                     PIE2            equ	141	;# 
   388     008E                     PCON            equ	142	;# 
   389     0091                     SSPCON2         equ	145	;# 
   390     0092                     PR2             equ	146	;# 
   391     0093                     SSPADD          equ	147	;# 
   392     0094                     SSPSTAT         equ	148	;# 
   393     0098                     TXSTA           equ	152	;# 
   394     0099                     SPBRG           equ	153	;# 
   395     009E                     ADRESL          equ	158	;# 
   396     009F                     ADCON1          equ	159	;# 
   397     010C                     EEDATA          equ	268	;# 
   398     010D                     EEADR           equ	269	;# 
   399     010E                     EEDATH          equ	270	;# 
   400     010F                     EEADRH          equ	271	;# 
   401     018C                     EECON1          equ	396	;# 
   402     018D                     EECON2          equ	397	;# 
   403                           
   404                           	psect	idataBANK0
   405     006A                     __pidataBANK0:
   406                           
   407                           ;initializer for main@F929
   408     006A  3407               	retlw	7
   409     006B  3405               	retlw	5
   410     006C  3402               	retlw	2
   411                           
   412                           	psect	strings
   413     0003                     __pstrings:
   414     0003                     stringtab:
   415     0003                     __stringtab:
   416     0003                     stringcode:	
   417                           ;	String table - string pointers are 1 byte each
   418                           
   419     0003                     stringdir:
   420     0003  3000               	movlw	high stringdir
   421     0004  008A               	movwf	10
   422     0005  0804               	movf	4,w
   423     0006  0A84               	incf	4,f
   424     0007  0782               	addwf	2,f
   425     0008                     __stringbase:
   426     0008  3400               	retlw	0
   427     0009                     __end_of__stringtab:
   428     0009                     main@delay:
   429     0009  34E8               	retlw	232
   430     000A  3403               	retlw	3
   431     000B  3400               	retlw	0
   432     000C  3400               	retlw	0
   433     000D                     __end_ofmain@delay:
   434     000D                     ChangeOfCoordinates@delay:
   435     000D  3464               	retlw	100
   436     000E  3400               	retlw	0
   437     000F  3400               	retlw	0
   438     0010  3400               	retlw	0
   439     0011                     __end_ofChangeOfCoordinates@delay:
   440     0013                     _SSPBUF         set	19
   441     0014                     _SSPCON         set	20
   442     0005                     _PORTA          set	5
   443     0006                     _PORTB          set	6
   444     002D                     _RA5            set	45
   445     0063                     _SSPIF          set	99
   446     0094                     _SSPSTAT        set	148
   447     0085                     _TRISA          set	133
   448     0087                     _TRISC          set	135
   449     0086                     _TRISB          set	134
   450                           
   451                           	psect	cinit
   452     07DC                     start_initialization:	
   453                           ; #config settings
   454                           
   455     07DC                     __initialization:
   456                           
   457                           ; Initialize objects allocated to BANK0
   458     07DC  120A  118A  206A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   459     07E1  00E9               	movwf	__pdataBANK0& (0+127)
   460     07E2  120A  118A  206B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   461     07E7  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   462     07E8  120A  118A  206C  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   463     07ED  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   464                           
   465                           ; Clear objects allocated to BANK0
   466     07EE  01DB               	clrf	__pbssBANK0& (0+127)
   467     07EF  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   468     07F0  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   469     07F1  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   470     07F2  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   471     07F3  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   472     07F4  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   473     07F5  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   474     07F6  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   475     07F7  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   476     07F8  01E5               	clrf	(__pbssBANK0+10)& (0+127)
   477     07F9  01E6               	clrf	(__pbssBANK0+11)& (0+127)
   478     07FA  01E7               	clrf	(__pbssBANK0+12)& (0+127)
   479     07FB  01E8               	clrf	(__pbssBANK0+13)& (0+127)
   480     07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483     07FC                     __end_of__initialization:
   484     07FC  0183               	clrf	3
   485     07FD  120A  118A  2A36   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssBANK0
   488     005B                     __pbssBANK0:
   489     005B                     malloc@lock:
   490     005B                     	ds	4
   491     005F                     _brkp:
   492     005F                     	ds	2
   493     0061                     malloc@end:
   494     0061                     	ds	2
   495     0063                     malloc@cur:
   496     0063                     	ds	2
   497     0065                     _errno:
   498     0065                     	ds	2
   499     0067                     ___freelist:
   500     0067                     	ds	2
   501                           
   502                           	psect	dataBANK0
   503     0069                     __pdataBANK0:
   504     0069                     main@F929:
   505     0069                     	ds	3
   506                           
   507                           	psect	cstackCOMMON
   508     0070                     __pcstackCOMMON:
   509     0070                     ?_free:
   510     0070                     ?_SpiInit:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_MatrixInit:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_PortBInit:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_SetPosition:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_main:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_SpiSendByte:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_SpiClearMatrix:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_MovieDown:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_MovieUp:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_MovieLeft:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_MovieRigth:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?___simple_search_fl:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?___expand_heap:	
   547                           ; 2 bytes @ 0x0
   548                           
   549     0070                     ?___wmul:	
   550                           ; 2 bytes @ 0x0
   551                           
   552     0070                     SpiSendByte@data:	
   553                           ; 2 bytes @ 0x0
   554                           
   555     0070                     ___expand_heap@pn:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     SetPosition@position:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     MovieDown@_shapePosition:	
   562                           ; 2 bytes @ 0x0
   563                           
   564     0070                     MovieUp@_shapePosition:	
   565                           ; 2 bytes @ 0x0
   566                           
   567     0070                     MovieLeft@_shapePosition:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0070                     MovieRigth@_shapePosition:	
   571                           ; 2 bytes @ 0x0
   572                           
   573     0070                     ___wmul@multiplier:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0070                     ___simple_search_fl@n:	
   577                           ; 2 bytes @ 0x0
   578                           
   579     0070                     free@ptr:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     ??_SpiInit:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0070                     ??_PortBInit:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ??_SpiSendByte:	
   589                           ; 1 bytes @ 0x0
   590                           
   591                           
   592                           ; 1 bytes @ 0x0
   593     0070                     	ds	1
   594     0071                     ?_SendToSegment:
   595     0071                     SendToSegment@segment:	
   596                           ; 1 bytes @ 0x1
   597                           
   598     0071                     ___expand_heap@n:	
   599                           ; 2 bytes @ 0x1
   600                           
   601     0071                     ??___expand_heap:	
   602                           ; 2 bytes @ 0x1
   603                           
   604                           
   605                           ; 1 bytes @ 0x1
   606     0071                     	ds	1
   607     0072                     SetPosition@x:
   608     0072                     ___wmul@multiplicand:	
   609                           ; 2 bytes @ 0x2
   610                           
   611     0072                     ??_free:	
   612                           ; 2 bytes @ 0x2
   613                           
   614     0072                     ??___simple_search_fl:	
   615                           ; 1 bytes @ 0x2
   616                           
   617     0072                     ??_MovieDown:	
   618                           ; 1 bytes @ 0x2
   619                           
   620     0072                     ??_MovieUp:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     ??_MovieLeft:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0072                     ??_MovieRigth:	
   627                           ; 1 bytes @ 0x2
   628                           
   629                           
   630                           ; 1 bytes @ 0x2
   631     0072                     	ds	1
   632     0073                     SendToSegment@data:
   633     0073                     ___expand_heap@new_brkp:	
   634                           ; 1 bytes @ 0x3
   635                           
   636                           
   637                           ; 2 bytes @ 0x3
   638     0073                     	ds	1
   639     0074                     ?_ShowShape:
   640     0074                     SetPosition@y:	
   641                           ; 1 bytes @ 0x4
   642                           
   643     0074                     ShowShape@coord:	
   644                           ; 2 bytes @ 0x4
   645                           
   646     0074                     ___wmul@product:	
   647                           ; 2 bytes @ 0x4
   648                           
   649     0074                     ??_SendToSegment:	
   650                           ; 2 bytes @ 0x4
   651                           
   652     0074                     ??_SpiClearMatrix:	
   653                           ; 1 bytes @ 0x4
   654                           
   655     0074                     ??___wmul:	
   656                           ; 1 bytes @ 0x4
   657                           
   658                           
   659                           ; 1 bytes @ 0x4
   660     0074                     	ds	2
   661     0076                     ?_memset:
   662     0076                     SpiClearMatrix@i:	
   663                           ; 2 bytes @ 0x6
   664                           
   665     0076                     ShowShape@countElemntArray:	
   666                           ; 1 bytes @ 0x6
   667                           
   668     0076                     memset@dest:	
   669                           ; 2 bytes @ 0x6
   670                           
   671     0076                     ??_SetPosition:	
   672                           ; 2 bytes @ 0x6
   673                           
   674                           
   675                           ; 1 bytes @ 0x6
   676     0076                     	ds	1
   677     0077                     ??_MatrixInit:
   678                           
   679                           ; 1 bytes @ 0x7
   680     0077                     	ds	1
   681     0078                     ?_malloc:
   682     0078                     ShowShape@shapeArray:	
   683                           ; 2 bytes @ 0x8
   684                           
   685     0078                     free@cptr:	
   686                           ; 1 bytes @ 0x8
   687                           
   688     0078                     malloc@n:	
   689                           ; 2 bytes @ 0x8
   690                           
   691     0078                     memset@c:	
   692                           ; 2 bytes @ 0x8
   693                           
   694                           
   695                           ; 2 bytes @ 0x8
   696     0078                     	ds	1
   697     0079                     ??_ShowShape:
   698                           
   699                           ; 1 bytes @ 0x9
   700     0079                     	ds	1
   701     007A                     free@c:
   702     007A                     memset@n:	
   703                           ; 2 bytes @ 0xA
   704                           
   705     007A                     ??_malloc:	
   706                           ; 2 bytes @ 0xA
   707                           
   708                           
   709                           ; 1 bytes @ 0xA
   710     007A                     	ds	2
   711     007C                     memset@p:
   712     007C                     ??_memset:	
   713                           ; 2 bytes @ 0xC
   714                           
   715                           
   716                           ; 1 bytes @ 0xC
   717     007C                     	ds	2
   718     007E                     ??_calloc:
   719     007E                     ??_main:	
   720                           ; 1 bytes @ 0xE
   721                           
   722                           
   723                           	psect	cstackBANK0
   724     0020                     __pcstackBANK0:	
   725                           ; 1 bytes @ 0xE
   726                           
   727     0020                     ShowShape@_pos:
   728     0020                     ___simple_search_fl@remaining_size:	
   729                           ; 2 bytes @ 0x0
   730                           
   731                           
   732                           ; 2 bytes @ 0x0
   733     0020                     	ds	2
   734     0022                     ShowShape@pos:
   735     0022                     ___simple_search_fl@best_last:	
   736                           ; 2 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740     0022                     	ds	2
   741     0024                     ?_MovieShape:
   742     0024                     MovieShape@_shapePosition:	
   743                           ; 1 bytes @ 0x4
   744                           
   745     0024                     ___simple_search_fl@split:	
   746                           ; 2 bytes @ 0x4
   747                           
   748                           
   749                           ; 2 bytes @ 0x4
   750     0024                     	ds	2
   751     0026                     MovieShape@shapeArray:
   752     0026                     ___simple_search_fl@last:	
   753                           ; 1 bytes @ 0x6
   754                           
   755                           
   756                           ; 2 bytes @ 0x6
   757     0026                     	ds	1
   758     0027                     MovieShape@countElemntArray:
   759                           
   760                           ; 2 bytes @ 0x7
   761     0027                     	ds	1
   762     0028                     ___simple_search_fl@next:
   763                           
   764                           ; 2 bytes @ 0x8
   765     0028                     	ds	1
   766     0029                     ??_MovieShape:
   767                           
   768                           ; 1 bytes @ 0x9
   769     0029                     	ds	1
   770     002A                     ___simple_search_fl@c:
   771                           
   772                           ; 2 bytes @ 0xA
   773     002A                     	ds	1
   774     002B                     MovieShape@dir:
   775                           
   776                           ; 1 bytes @ 0xB
   777     002B                     	ds	1
   778     002C                     ?_ChangeOfCoordinates:
   779     002C                     ChangeOfCoordinates@_shapePosition:	
   780                           ; 1 bytes @ 0xC
   781                           
   782     002C                     ___simple_search_fl@best:	
   783                           ; 2 bytes @ 0xC
   784                           
   785                           
   786                           ; 2 bytes @ 0xC
   787     002C                     	ds	2
   788     002E                     ChangeOfCoordinates@_figure:
   789     002E                     malloc@m:	
   790                           ; 1 bytes @ 0xE
   791                           
   792                           
   793                           ; 2 bytes @ 0xE
   794     002E                     	ds	1
   795     002F                     ChangeOfCoordinates@_countElemntArray:
   796                           
   797                           ; 2 bytes @ 0xF
   798     002F                     	ds	1
   799     0030                     malloc@sz:
   800                           
   801                           ; 2 bytes @ 0x10
   802     0030                     	ds	1
   803     0031                     ??_ChangeOfCoordinates:
   804                           
   805                           ; 1 bytes @ 0x11
   806     0031                     	ds	1
   807     0032                     malloc@size:
   808                           
   809                           ; 2 bytes @ 0x12
   810     0032                     	ds	2
   811     0034                     ChangeOfCoordinates@step:
   812     0034                     malloc@p:	
   813                           ; 2 bytes @ 0x14
   814                           
   815                           
   816                           ; 2 bytes @ 0x14
   817     0034                     	ds	2
   818     0036                     ChangeOfCoordinates@i:
   819     0036                     malloc@new:	
   820                           ; 2 bytes @ 0x16
   821                           
   822                           
   823                           ; 2 bytes @ 0x16
   824     0036                     	ds	2
   825     0038                     ?_calloc:
   826     0038                     calloc@nmemb:	
   827                           ; 2 bytes @ 0x18
   828                           
   829                           
   830                           ; 2 bytes @ 0x18
   831     0038                     	ds	2
   832     003A                     calloc@size:
   833                           
   834                           ; 2 bytes @ 0x1A
   835     003A                     	ds	2
   836     003C                     calloc@new_ptr:
   837                           
   838                           ; 2 bytes @ 0x1C
   839     003C                     	ds	2
   840     003E                     ?_Rotate:
   841     003E                     Rotate@array_:	
   842                           ; 1 bytes @ 0x1E
   843                           
   844                           
   845                           ; 1 bytes @ 0x1E
   846     003E                     	ds	1
   847     003F                     Rotate@length:
   848                           
   849                           ; 2 bytes @ 0x1F
   850     003F                     	ds	2
   851     0041                     ??_Rotate:
   852                           
   853                           ; 1 bytes @ 0x21
   854     0041                     	ds	7
   855     0048                     Rotate@x:
   856                           
   857                           ; 2 bytes @ 0x28
   858     0048                     	ds	2
   859     004A                     Rotate@i:
   860                           
   861                           ; 2 bytes @ 0x2A
   862     004A                     	ds	2
   863     004C                     Rotate@y:
   864                           
   865                           ; 2 bytes @ 0x2C
   866     004C                     	ds	2
   867     004E                     Rotate@res:
   868                           
   869                           ; 2 bytes @ 0x2E
   870     004E                     	ds	2
   871     0050                     Rotate@_i:
   872                           
   873                           ; 2 bytes @ 0x30
   874     0050                     	ds	2
   875     0052                     main@square_1:
   876                           
   877                           ; 3 bytes @ 0x32
   878     0052                     	ds	3
   879     0055                     main@countElemntArray:
   880                           
   881                           ; 2 bytes @ 0x35
   882     0055                     	ds	2
   883     0057                     main@shapePosition:
   884                           
   885                           ; 4 bytes @ 0x37
   886     0057                     	ds	4
   887                           
   888                           	psect	maintext
   889     0236                     __pmaintext:	
   890 ;;
   891 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   892 ;;
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 73 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  shapePositio    4   55[BANK0 ] struct .
   900 ;;  square_1        3   50[BANK0 ] unsigned char [3]
   901 ;;  countElemntA    2   53[BANK0 ] int 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : B00/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       9       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       9       0       0       0
   915 ;;Total ram usage:        9 bytes
   916 ;; Hardware stack levels required when called: 5
   917 ;; This function calls:
   918 ;;		_ChangeOfCoordinates
   919 ;;		_MatrixInit
   920 ;;		_PortBInit
   921 ;;		_Rotate
   922 ;;		_SetPosition
   923 ;;		_SpiInit
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0236                     _main:	
   930                           ;psect for function _main
   931                           
   932     0236                     l1524:	
   933                           ;incstack = 0
   934                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   935                           
   936                           
   937                           ;main.c: 74:     SpiInit();
   938     0236  120A  118A  209B  120A  118A  	fcall	_SpiInit
   939                           
   940                           ;main.c: 75:     MatrixInit();
   941     023B  120A  118A  2163  120A  118A  	fcall	_MatrixInit
   942     0240                     l1526:
   943                           
   944                           ;main.c: 76:     PortBInit();
   945     0240  120A  118A  206D  120A  118A  	fcall	_PortBInit
   946                           
   947                           ;main.c: 78:     TCoord shapePosition;;main.c: 79:     char square_1[3] = { 0x07, 0x05, 
      +                          0x02 };
   948     0245  1283               	bcf	3,5	;RP0=0, select bank0
   949     0246  1303               	bcf	3,6	;RP1=0, select bank0
   950     0247  0869               	movf	main@F929,w
   951     0248  00D2               	movwf	main@square_1
   952     0249  086A               	movf	main@F929+1,w
   953     024A  00D3               	movwf	main@square_1+1
   954     024B  086B               	movf	main@F929+2,w
   955     024C  00D4               	movwf	main@square_1+2
   956                           
   957                           ;main.c: 80:     int countElemntArray = 3;
   958     024D  3003               	movlw	3
   959     024E  00D5               	movwf	main@countElemntArray
   960     024F  3000               	movlw	0
   961     0250  00D6               	movwf	main@countElemntArray+1
   962     0251                     l1528:
   963                           
   964                           ;main.c: 84:         SetPosition(&shapePosition, 0, 0);
   965     0251  3057               	movlw	low main@shapePosition
   966     0252  00F0               	movwf	SetPosition@position
   967     0253  3000               	movlw	high main@shapePosition
   968     0254  00F1               	movwf	SetPosition@position+1
   969     0255  3000               	movlw	0
   970     0256  00F2               	movwf	SetPosition@x
   971     0257  00F3               	movwf	SetPosition@x+1
   972     0258  3000               	movlw	0
   973     0259  00F4               	movwf	SetPosition@y
   974     025A  00F5               	movwf	SetPosition@y+1
   975     025B  120A  118A  2102  120A  118A  	fcall	_SetPosition
   976     0260                     l1530:
   977                           
   978                           ;main.c: 85:         Rotate(square_1, countElemntArray);
   979     0260  3052               	movlw	(low (main@square_1| 0))& (0+255)
   980     0261  1283               	bcf	3,5	;RP0=0, select bank0
   981     0262  1303               	bcf	3,6	;RP1=0, select bank0
   982     0263  00BE               	movwf	Rotate@array_
   983     0264  0856               	movf	main@countElemntArray+1,w
   984     0265  00C0               	movwf	Rotate@length+1
   985     0266  0855               	movf	main@countElemntArray,w
   986     0267  00BF               	movwf	Rotate@length
   987     0268  120A  118A  24AB  120A  118A  	fcall	_Rotate
   988     026D                     l1532:
   989                           
   990                           ;main.c: 86:         ChangeOfCoordinates(&shapePosition, square_1, countElemntArray);
   991     026D  3057               	movlw	low main@shapePosition
   992     026E  1283               	bcf	3,5	;RP0=0, select bank0
   993     026F  1303               	bcf	3,6	;RP1=0, select bank0
   994     0270  00AC               	movwf	ChangeOfCoordinates@_shapePosition
   995     0271  3000               	movlw	high main@shapePosition
   996     0272  00AD               	movwf	ChangeOfCoordinates@_shapePosition+1
   997     0273  3052               	movlw	(low (main@square_1| 0))& (0+255)
   998     0274  00AE               	movwf	ChangeOfCoordinates@_figure
   999     0275  0856               	movf	main@countElemntArray+1,w
  1000     0276  00B0               	movwf	ChangeOfCoordinates@_countElemntArray+1
  1001     0277  0855               	movf	main@countElemntArray,w
  1002     0278  00AF               	movwf	ChangeOfCoordinates@_countElemntArray
  1003     0279  120A  118A  235F  120A  118A  	fcall	_ChangeOfCoordinates
  1004     027E  2A51               	goto	l1528
  1005     027F  120A  118A  2800   	ljmp	start
  1006     0282                     __end_of_main:
  1007                           
  1008                           	psect	text1
  1009     009B                     __ptext1:	
  1010 ;; *************** function _SpiInit *****************
  1011 ;; Defined at:
  1012 ;;		line 9 in file "spi.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     009B                     _SpiInit:	
  1040                           ;psect for function _SpiInit
  1041                           
  1042     009B                     l1496:	
  1043                           ;incstack = 0
  1044                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
  1045                           
  1046                           
  1047                           ;spi.c: 10:     TRISC |= 0x10;
  1048     009B  1683               	bsf	3,5	;RP0=1, select bank1
  1049     009C  1303               	bcf	3,6	;RP1=0, select bank1
  1050     009D  1607               	bsf	7,4	;volatile
  1051     009E                     l1498:
  1052                           
  1053                           ;spi.c: 11:     TRISC &= ~0x28;
  1054     009E  30D7               	movlw	215
  1055     009F  0587               	andwf	7,f	;volatile
  1056                           
  1057                           ;spi.c: 12:     TRISA &= ~0x20;
  1058     00A0  30DF               	movlw	223
  1059     00A1  0585               	andwf	5,f	;volatile
  1060                           
  1061                           ;spi.c: 13:     PORTA &= ~0x20;
  1062     00A2  30DF               	movlw	223
  1063     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1064     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1065     00A5  0585               	andwf	5,f	;volatile
  1066     00A6                     l1500:
  1067                           
  1068                           ;spi.c: 14:     SSPCON = 0x30;
  1069     00A6  3030               	movlw	48
  1070     00A7  0094               	movwf	20	;volatile
  1071     00A8                     l1502:
  1072                           
  1073                           ;spi.c: 15:     SSPSTAT = 0x80;
  1074     00A8  3080               	movlw	128
  1075     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1076     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1077     00AB  0094               	movwf	20	;volatile
  1078     00AC                     l78:
  1079     00AC  0008               	return
  1080     00AD                     __end_of_SpiInit:
  1081                           
  1082                           	psect	text2
  1083     0102                     __ptext2:	
  1084 ;; *************** function _SetPosition *****************
  1085 ;; Defined at:
  1086 ;;		line 3 in file "shape.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  position        2    0[COMMON] PTR struct .
  1089 ;;		 -> main@shapePosition(4), 
  1090 ;;  x               2    2[COMMON] int 
  1091 ;;  y               2    4[COMMON] int 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         6       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          2       0       0       0       0
  1106 ;;      Totals:         8       0       0       0       0
  1107 ;;Total ram usage:        8 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     0102                     _SetPosition:	
  1117                           ;psect for function _SetPosition
  1118                           
  1119     0102                     l1520:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _SetPosition: [wreg-fsr0h+status,2+status,0]
  1122                           
  1123                           
  1124                           ;shape.c: 4:     position->x = x;
  1125     0102  0870               	movf	SetPosition@position,w
  1126     0103  0084               	movwf	4
  1127     0104  1783               	bsf	3,7
  1128     0105  1C71               	btfss	SetPosition@position+1,0
  1129     0106  1383               	bcf	3,7
  1130     0107  0872               	movf	SetPosition@x,w
  1131     0108  0080               	movwf	0
  1132     0109  0A84               	incf	4,f
  1133     010A  0873               	movf	SetPosition@x+1,w
  1134     010B  0080               	movwf	0
  1135     010C                     l1522:
  1136                           
  1137                           ;shape.c: 5:     position->y = y;
  1138     010C  0870               	movf	SetPosition@position,w
  1139     010D  3E02               	addlw	2
  1140     010E  00F6               	movwf	??_SetPosition
  1141     010F  0871               	movf	SetPosition@position+1,w
  1142     0110  1803               	skipnc
  1143     0111  3E01               	addlw	1
  1144     0112  3E00               	addlw	0
  1145     0113  00F7               	movwf	??_SetPosition+1
  1146     0114  0876               	movf	??_SetPosition,w
  1147     0115  0084               	movwf	4
  1148     0116  1783               	bsf	3,7
  1149     0117  1C77               	btfss	??_SetPosition+1,0
  1150     0118  1383               	bcf	3,7
  1151     0119  0874               	movf	SetPosition@y,w
  1152     011A  0080               	movwf	0
  1153     011B  0A84               	incf	4,f
  1154     011C  0875               	movf	SetPosition@y+1,w
  1155     011D  0080               	movwf	0
  1156     011E                     l110:
  1157     011E  0008               	return
  1158     011F                     __end_of_SetPosition:
  1159                           
  1160                           	psect	text3
  1161     04AB                     __ptext3:	
  1162 ;; *************** function _Rotate *****************
  1163 ;; Defined at:
  1164 ;;		line 55 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  array_          1   30[BANK0 ] PTR unsigned char 
  1167 ;;		 -> main@square_1(3), 
  1168 ;;  length          2   31[BANK0 ] int 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  i               2   42[BANK0 ] int 
  1171 ;;  x               2   40[BANK0 ] int 
  1172 ;;  y               2   44[BANK0 ] int 
  1173 ;;  _i              2   48[BANK0 ] int 
  1174 ;;  res             2   46[BANK0 ] PTR unsigned char 
  1175 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       3       0       0       0
  1186 ;;      Locals:         0      10       0       0       0
  1187 ;;      Temps:          0       7       0       0       0
  1188 ;;      Totals:         0      20       0       0       0
  1189 ;;Total ram usage:       20 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 3
  1192 ;; This function calls:
  1193 ;;		_calloc
  1194 ;;		_free
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200     04AB                     _Rotate:	
  1201                           ;psect for function _Rotate
  1202                           
  1203     04AB                     l1456:	
  1204                           ;incstack = 0
  1205                           ; Regs used in _Rotate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1206                           
  1207                           
  1208                           ;main.c: 57:     char * res = calloc((size_t)length, sizeof(unsigned char));
  1209     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1210     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1211     04AD  0840               	movf	Rotate@length+1,w
  1212     04AE  00B9               	movwf	calloc@nmemb+1
  1213     04AF  083F               	movf	Rotate@length,w
  1214     04B0  00B8               	movwf	calloc@nmemb
  1215     04B1  3001               	movlw	1
  1216     04B2  00BA               	movwf	calloc@size
  1217     04B3  3000               	movlw	0
  1218     04B4  00BB               	movwf	calloc@size+1
  1219     04B5  120A  118A  21A3  120A  118A  	fcall	_calloc
  1220     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1221     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1222     04BC  0838               	movf	?_calloc,w
  1223     04BD  00CE               	movwf	Rotate@res
  1224     04BE  0839               	movf	?_calloc+1,w
  1225     04BF  00CF               	movwf	Rotate@res+1
  1226     04C0                     l1458:
  1227                           
  1228                           ;main.c: 59:     if (res){
  1229     04C0  084E               	movf	Rotate@res,w
  1230     04C1  044F               	iorwf	Rotate@res+1,w
  1231     04C2  1903               	btfsc	3,2
  1232     04C3  2CC5               	goto	u831
  1233     04C4  2CC6               	goto	u830
  1234     04C5                     u831:
  1235     04C5  2D5C               	goto	l1494
  1236     04C6                     u830:
  1237     04C6                     l1460:
  1238                           
  1239                           ;main.c: 60:         for(int _i = length - 1; _i >= 0; _i--){
  1240     04C6  083F               	movf	Rotate@length,w
  1241     04C7  3EFF               	addlw	255
  1242     04C8  00D0               	movwf	Rotate@_i
  1243     04C9  0840               	movf	Rotate@length+1,w
  1244     04CA  1803               	skipnc
  1245     04CB  3E01               	addlw	1
  1246     04CC  3EFF               	addlw	255
  1247     04CD  00D1               	movwf	Rotate@_i+1
  1248     04CE                     l1462:
  1249     04CE  1FD1               	btfss	Rotate@_i+1,7
  1250     04CF  2CD1               	goto	u841
  1251     04D0  2CD2               	goto	u840
  1252     04D1                     u841:
  1253     04D1  2CD3               	goto	l1466
  1254     04D2                     u840:
  1255     04D2  2D26               	goto	l1486
  1256     04D3                     l1466:
  1257                           
  1258                           ;main.c: 61:             for(int i = length - 1, x = 0; i >= 0; i--, x++){
  1259     04D3  083F               	movf	Rotate@length,w
  1260     04D4  3EFF               	addlw	255
  1261     04D5  00CA               	movwf	Rotate@i
  1262     04D6  0840               	movf	Rotate@length+1,w
  1263     04D7  1803               	skipnc
  1264     04D8  3E01               	addlw	1
  1265     04D9  3EFF               	addlw	255
  1266     04DA  00CB               	movwf	Rotate@i+1
  1267     04DB                     l1468:
  1268     04DB  01C8               	clrf	Rotate@x
  1269     04DC  01C9               	clrf	Rotate@x+1
  1270     04DD                     l1470:
  1271     04DD  1FCB               	btfss	Rotate@i+1,7
  1272     04DE  2CE0               	goto	u851
  1273     04DF  2CE1               	goto	u850
  1274     04E0                     u851:
  1275     04E0  2CE2               	goto	l1474
  1276     04E1                     u850:
  1277     04E1  2D1F               	goto	l1482
  1278     04E2                     l1474:
  1279                           
  1280                           ;main.c: 62:                 res[_i] |= ((array_[x] >> _i ) & 1) << i;
  1281     04E2  0848               	movf	Rotate@x,w
  1282     04E3  073E               	addwf	Rotate@array_,w
  1283     04E4  00C1               	movwf	??_Rotate
  1284     04E5  0841               	movf	??_Rotate,w
  1285     04E6  0084               	movwf	4
  1286     04E7  1383               	bcf	3,7	;select IRP bank0
  1287     04E8  0800               	movf	0,w
  1288     04E9  00C2               	movwf	??_Rotate+1
  1289     04EA  0A50               	incf	Rotate@_i,w
  1290     04EB  2CEE               	goto	u864
  1291     04EC                     u865:
  1292     04EC  1003               	clrc
  1293     04ED  0CC2               	rrf	??_Rotate+1,f
  1294     04EE                     u864:
  1295     04EE  3EFF               	addlw	-1
  1296     04EF  1D03               	skipz
  1297     04F0  2CEC               	goto	u865
  1298     04F1  0842               	movf	??_Rotate+1,w
  1299     04F2  3901               	andlw	1
  1300     04F3  00C3               	movwf	??_Rotate+2
  1301     04F4  0A4A               	incf	Rotate@i,w
  1302     04F5  2CF8               	goto	u874
  1303     04F6                     u875:
  1304     04F6  1003               	clrc
  1305     04F7  0DC3               	rlf	??_Rotate+2,f
  1306     04F8                     u874:
  1307     04F8  3EFF               	addlw	-1
  1308     04F9  1D03               	skipz
  1309     04FA  2CF6               	goto	u875
  1310     04FB  0843               	movf	??_Rotate+2,w
  1311     04FC  00C4               	movwf	??_Rotate+3
  1312     04FD  0850               	movf	Rotate@_i,w
  1313     04FE  074E               	addwf	Rotate@res,w
  1314     04FF  00C6               	movwf	??_Rotate+5
  1315     0500  084F               	movf	Rotate@res+1,w
  1316     0501  00C5               	movwf	??_Rotate+4
  1317     0502  1803               	skipnc
  1318     0503  0AC5               	incf	??_Rotate+4,f
  1319     0504  1FD0               	btfss	Rotate@_i,7
  1320     0505  2D07               	goto	u880
  1321     0506  03C5               	decf	??_Rotate+4,f
  1322     0507                     u880:
  1323     0507  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0508  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0509  0845               	movf	??_Rotate+4,w
  1326     050A  00C7               	movwf	??_Rotate+6
  1327     050B  0846               	movf	??_Rotate+5,w
  1328     050C  0084               	movwf	4
  1329     050D  1783               	bsf	3,7
  1330     050E  1C47               	btfss	??_Rotate+6,0
  1331     050F  1383               	bcf	3,7
  1332     0510  0844               	movf	??_Rotate+3,w
  1333     0511  0480               	iorwf	0,f
  1334     0512                     l1476:
  1335                           
  1336                           ;main.c: 63:             }
  1337     0512  30FF               	movlw	255
  1338     0513  07CA               	addwf	Rotate@i,f
  1339     0514  1803               	skipnc
  1340     0515  0ACB               	incf	Rotate@i+1,f
  1341     0516  30FF               	movlw	255
  1342     0517  07CB               	addwf	Rotate@i+1,f
  1343     0518                     l1478:
  1344     0518  3001               	movlw	1
  1345     0519  07C8               	addwf	Rotate@x,f
  1346     051A  1803               	skipnc
  1347     051B  0AC9               	incf	Rotate@x+1,f
  1348     051C  3000               	movlw	0
  1349     051D  07C9               	addwf	Rotate@x+1,f
  1350     051E  2CDD               	goto	l1470
  1351     051F                     l1482:
  1352                           
  1353                           ;main.c: 64:         }
  1354     051F  30FF               	movlw	255
  1355     0520  07D0               	addwf	Rotate@_i,f
  1356     0521  1803               	skipnc
  1357     0522  0AD1               	incf	Rotate@_i+1,f
  1358     0523  30FF               	movlw	255
  1359     0524  07D1               	addwf	Rotate@_i+1,f
  1360     0525  2CCE               	goto	l1462
  1361     0526                     l1486:
  1362                           
  1363                           ;main.c: 66:         for(int y = 0; y < length; y++){
  1364     0526  01CC               	clrf	Rotate@y
  1365     0527  01CD               	clrf	Rotate@y+1
  1366     0528  2D4E               	goto	l1492
  1367     0529                     l1488:
  1368                           
  1369                           ;main.c: 67:             array_[y] = res[y];
  1370     0529  1283               	bcf	3,5	;RP0=0, select bank0
  1371     052A  1303               	bcf	3,6	;RP1=0, select bank0
  1372     052B  084C               	movf	Rotate@y,w
  1373     052C  074E               	addwf	Rotate@res,w
  1374     052D  00C2               	movwf	??_Rotate+1
  1375     052E  084F               	movf	Rotate@res+1,w
  1376     052F  00C1               	movwf	??_Rotate
  1377     0530  1803               	skipnc
  1378     0531  0AC1               	incf	??_Rotate,f
  1379     0532  1FCC               	btfss	Rotate@y,7
  1380     0533  2D35               	goto	u890
  1381     0534  03C1               	decf	??_Rotate,f
  1382     0535                     u890:
  1383     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1384     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0537  0841               	movf	??_Rotate,w
  1386     0538  00C3               	movwf	??_Rotate+2
  1387     0539  0842               	movf	??_Rotate+1,w
  1388     053A  0084               	movwf	4
  1389     053B  1783               	bsf	3,7
  1390     053C  1C43               	btfss	??_Rotate+2,0
  1391     053D  1383               	bcf	3,7
  1392     053E  0800               	movf	0,w
  1393     053F  00C4               	movwf	??_Rotate+3
  1394     0540  084C               	movf	Rotate@y,w
  1395     0541  073E               	addwf	Rotate@array_,w
  1396     0542  00C5               	movwf	??_Rotate+4
  1397     0543  0845               	movf	??_Rotate+4,w
  1398     0544  0084               	movwf	4
  1399     0545  0844               	movf	??_Rotate+3,w
  1400     0546  1383               	bcf	3,7	;select IRP bank0
  1401     0547  0080               	movwf	0
  1402     0548                     l1490:
  1403                           
  1404                           ;main.c: 68:         }
  1405     0548  3001               	movlw	1
  1406     0549  07CC               	addwf	Rotate@y,f
  1407     054A  1803               	skipnc
  1408     054B  0ACD               	incf	Rotate@y+1,f
  1409     054C  3000               	movlw	0
  1410     054D  07CD               	addwf	Rotate@y+1,f
  1411     054E                     l1492:
  1412     054E  084D               	movf	Rotate@y+1,w
  1413     054F  3A80               	xorlw	128
  1414     0550  00C1               	movwf	??_Rotate
  1415     0551  0840               	movf	Rotate@length+1,w
  1416     0552  3A80               	xorlw	128
  1417     0553  0241               	subwf	??_Rotate,w
  1418     0554  1D03               	skipz
  1419     0555  2D58               	goto	u905
  1420     0556  083F               	movf	Rotate@length,w
  1421     0557  024C               	subwf	Rotate@y,w
  1422     0558                     u905:
  1423     0558  1C03               	skipc
  1424     0559  2D5B               	goto	u901
  1425     055A  2D5C               	goto	u900
  1426     055B                     u901:
  1427     055B  2D29               	goto	l1488
  1428     055C                     u900:
  1429     055C                     l1494:
  1430                           
  1431                           ;main.c: 70:     free(res);
  1432     055C  1283               	bcf	3,5	;RP0=0, select bank0
  1433     055D  1303               	bcf	3,6	;RP1=0, select bank0
  1434     055E  084E               	movf	Rotate@res,w
  1435     055F  00F0               	movwf	free@ptr
  1436     0560  084F               	movf	Rotate@res+1,w
  1437     0561  00F1               	movwf	free@ptr+1
  1438     0562  120A  118A  2568  120A  118A  	fcall	_free
  1439     0567                     l42:
  1440     0567  0008               	return
  1441     0568                     __end_of_Rotate:
  1442                           
  1443                           	psect	text4
  1444     0568                     __ptext4:	
  1445 ;; *************** function _free *****************
  1446 ;; Defined at:
  1447 ;;		line 67 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  ptr             2    0[COMMON] PTR void 
  1450 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  c               2   10[COMMON] PTR struct chunk
  1453 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1454 ;;  cptr            2    8[COMMON] PTR unsigned char 
  1455 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         2       0       0       0       0
  1466 ;;      Locals:         4       0       0       0       0
  1467 ;;      Temps:          6       0       0       0       0
  1468 ;;      Totals:        12       0       0       0       0
  1469 ;;Total ram usage:       12 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_Rotate
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     0568                     _free:	
  1479                           ;psect for function _free
  1480                           
  1481     0568                     l1396:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _free: [wreg-fsr0h+status,2+status,0+btemp+1]
  1484                           
  1485     0568  0870               	movf	free@ptr,w
  1486     0569  00F8               	movwf	free@cptr
  1487     056A  0871               	movf	free@ptr+1,w
  1488     056B  00F9               	movwf	free@cptr+1
  1489     056C  0870               	movf	free@ptr,w
  1490     056D  0471               	iorwf	free@ptr+1,w
  1491     056E  1D03               	btfss	3,2
  1492     056F  2D71               	goto	u771
  1493     0570  2D72               	goto	u770
  1494     0571                     u771:
  1495     0571  2D73               	goto	l1400
  1496     0572                     u770:
  1497     0572  2E55               	goto	l711
  1498     0573                     l1400:
  1499     0573  30FE               	movlw	254
  1500     0574  00F2               	movwf	??_free
  1501     0575  0872               	movf	??_free,w
  1502     0576  0778               	addwf	free@cptr,w
  1503     0577  00FA               	movwf	free@c
  1504     0578  0879               	movf	free@cptr+1,w
  1505     0579  00F3               	movwf	??_free+1
  1506     057A  1803               	skipnc
  1507     057B  0AF3               	incf	??_free+1,f
  1508     057C  1BF2               	btfsc	??_free,7
  1509     057D  03F3               	decf	??_free+1,f
  1510     057E  0873               	movf	??_free+1,w
  1511     057F  00FB               	movwf	free@c+1
  1512     0580  1283               	bcf	3,5	;RP0=0, select bank0
  1513     0581  1303               	bcf	3,6	;RP1=0, select bank0
  1514     0582  0867               	movf	___freelist,w
  1515     0583  0468               	iorwf	___freelist+1,w
  1516     0584  1903               	btfsc	3,2
  1517     0585  2D87               	goto	u781
  1518     0586  2D88               	goto	u780
  1519     0587                     u781:
  1520     0587  2E44               	goto	l1422
  1521     0588                     u780:
  1522     0588                     l1402:
  1523     0588  087A               	movf	free@c,w
  1524     0589  0084               	movwf	4
  1525     058A  1783               	bsf	3,7
  1526     058B  1C7B               	btfss	free@c+1,0
  1527     058C  1383               	bcf	3,7
  1528     058D  0800               	movf	0,w
  1529     058E  0778               	addwf	free@cptr,w
  1530     058F  00F2               	movwf	??_free
  1531     0590  0879               	movf	free@cptr+1,w
  1532     0591  1803               	skipnc
  1533     0592  3E01               	addlw	1
  1534     0593  00F3               	movwf	??_free+1
  1535     0594  0873               	movf	??_free+1,w
  1536     0595  0668               	xorwf	___freelist+1,w
  1537     0596  1D03               	skipz
  1538     0597  2D9A               	goto	u795
  1539     0598  0872               	movf	??_free,w
  1540     0599  0667               	xorwf	___freelist,w
  1541     059A                     u795:
  1542     059A  1D03               	skipz
  1543     059B  2D9D               	goto	u791
  1544     059C  2D9E               	goto	u790
  1545     059D                     u791:
  1546     059D  2DEA               	goto	l1414
  1547     059E                     u790:
  1548     059E                     l1404:
  1549     059E  0867               	movf	___freelist,w
  1550     059F  3E02               	addlw	2
  1551     05A0  00F2               	movwf	??_free
  1552     05A1  0868               	movf	___freelist+1,w
  1553     05A2  1803               	skipnc
  1554     05A3  3E01               	addlw	1
  1555     05A4  3E00               	addlw	0
  1556     05A5  00F3               	movwf	??_free+1
  1557     05A6  0872               	movf	??_free,w
  1558     05A7  0084               	movwf	4
  1559     05A8  1783               	bsf	3,7
  1560     05A9  1C73               	btfss	??_free+1,0
  1561     05AA  1383               	bcf	3,7
  1562     05AB  0800               	movf	0,w
  1563     05AC  00F4               	movwf	??_free+2
  1564     05AD  0A84               	incf	4,f
  1565     05AE  0800               	movf	0,w
  1566     05AF  00F5               	movwf	??_free+3
  1567     05B0  087A               	movf	free@c,w
  1568     05B1  3E02               	addlw	2
  1569     05B2  00F6               	movwf	??_free+4
  1570     05B3  087B               	movf	free@c+1,w
  1571     05B4  1803               	skipnc
  1572     05B5  3E01               	addlw	1
  1573     05B6  3E00               	addlw	0
  1574     05B7  00F7               	movwf	??_free+5
  1575     05B8  0876               	movf	??_free+4,w
  1576     05B9  0084               	movwf	4
  1577     05BA  1783               	bsf	3,7
  1578     05BB  1C77               	btfss	??_free+5,0
  1579     05BC  1383               	bcf	3,7
  1580     05BD  0874               	movf	??_free+2,w
  1581     05BE  0080               	movwf	0
  1582     05BF  0875               	movf	??_free+3,w
  1583     05C0  0A84               	incf	4,f
  1584     05C1  0080               	movwf	0
  1585     05C2  0384               	decf	4,f
  1586     05C3                     l1406:
  1587     05C3  0867               	movf	___freelist,w
  1588     05C4  0084               	movwf	4
  1589     05C5  1783               	bsf	3,7
  1590     05C6  1C68               	btfss	___freelist+1,0
  1591     05C7  1383               	bcf	3,7
  1592     05C8  0800               	movf	0,w
  1593     05C9  00F2               	movwf	??_free
  1594     05CA  0A84               	incf	4,f
  1595     05CB  0800               	movf	0,w
  1596     05CC  00F3               	movwf	??_free+1
  1597     05CD  0872               	movf	??_free,w
  1598     05CE  3E02               	addlw	2
  1599     05CF  00F4               	movwf	??_free+2
  1600     05D0  0873               	movf	??_free+1,w
  1601     05D1  1803               	skipnc
  1602     05D2  3E01               	addlw	1
  1603     05D3  3E00               	addlw	0
  1604     05D4  00F5               	movwf	??_free+3
  1605     05D5  087A               	movf	free@c,w
  1606     05D6  0084               	movwf	4
  1607     05D7  1783               	bsf	3,7
  1608     05D8  1C7B               	btfss	free@c+1,0
  1609     05D9  1383               	bcf	3,7
  1610     05DA  0874               	movf	??_free+2,w
  1611     05DB  0780               	addwf	0,f
  1612     05DC  0F84               	incfsz	4,f
  1613     05DD  0800               	movf	0,w
  1614     05DE  1803               	skipnc
  1615     05DF  0A00               	incf	0,w
  1616     05E0  00FF               	movwf	btemp+1
  1617     05E1  0875               	movf	??_free+3,w
  1618     05E2  077F               	addwf	btemp+1,w
  1619     05E3  0080               	movwf	0
  1620     05E4  0384               	decf	4,f
  1621     05E5                     l1408:
  1622     05E5  087A               	movf	free@c,w
  1623     05E6  00E7               	movwf	___freelist
  1624     05E7  087B               	movf	free@c+1,w
  1625     05E8  00E8               	movwf	___freelist+1
  1626     05E9  2E55               	goto	l711
  1627     05EA                     l1414:
  1628     05EA  0867               	movf	___freelist,w
  1629     05EB  0084               	movwf	4
  1630     05EC  1783               	bsf	3,7
  1631     05ED  1C68               	btfss	___freelist+1,0
  1632     05EE  1383               	bcf	3,7
  1633     05EF  0800               	movf	0,w
  1634     05F0  00F2               	movwf	??_free
  1635     05F1  0A84               	incf	4,f
  1636     05F2  0800               	movf	0,w
  1637     05F3  00F3               	movwf	??_free+1
  1638     05F4  0872               	movf	??_free,w
  1639     05F5  0767               	addwf	___freelist,w
  1640     05F6  00F4               	movwf	??_free+2
  1641     05F7  0873               	movf	??_free+1,w
  1642     05F8  1803               	skipnc
  1643     05F9  0A73               	incf	??_free+1,w
  1644     05FA  0768               	addwf	___freelist+1,w
  1645     05FB  00F5               	movwf	??_free+3
  1646     05FC  0874               	movf	??_free+2,w
  1647     05FD  3E02               	addlw	2
  1648     05FE  00F6               	movwf	??_free+4
  1649     05FF  0875               	movf	??_free+3,w
  1650     0600  1803               	skipnc
  1651     0601  3E01               	addlw	1
  1652     0602  3E00               	addlw	0
  1653     0603  00F7               	movwf	??_free+5
  1654     0604  087B               	movf	free@c+1,w
  1655     0605  0677               	xorwf	??_free+5,w
  1656     0606  1D03               	skipz
  1657     0607  2E0A               	goto	u805
  1658     0608  087A               	movf	free@c,w
  1659     0609  0676               	xorwf	??_free+4,w
  1660     060A                     u805:
  1661     060A  1D03               	skipz
  1662     060B  2E0D               	goto	u801
  1663     060C  2E0E               	goto	u800
  1664     060D                     u801:
  1665     060D  2E31               	goto	l1420
  1666     060E                     u800:
  1667     060E                     l1416:
  1668     060E  087A               	movf	free@c,w
  1669     060F  0084               	movwf	4
  1670     0610  1783               	bsf	3,7
  1671     0611  1C7B               	btfss	free@c+1,0
  1672     0612  1383               	bcf	3,7
  1673     0613  0800               	movf	0,w
  1674     0614  00F2               	movwf	??_free
  1675     0615  0A84               	incf	4,f
  1676     0616  0800               	movf	0,w
  1677     0617  00F3               	movwf	??_free+1
  1678     0618  0872               	movf	??_free,w
  1679     0619  3E02               	addlw	2
  1680     061A  00F4               	movwf	??_free+2
  1681     061B  0873               	movf	??_free+1,w
  1682     061C  1803               	skipnc
  1683     061D  3E01               	addlw	1
  1684     061E  3E00               	addlw	0
  1685     061F  00F5               	movwf	??_free+3
  1686     0620  0867               	movf	___freelist,w
  1687     0621  0084               	movwf	4
  1688     0622  1783               	bsf	3,7
  1689     0623  1C68               	btfss	___freelist+1,0
  1690     0624  1383               	bcf	3,7
  1691     0625  0874               	movf	??_free+2,w
  1692     0626  0780               	addwf	0,f
  1693     0627  0F84               	incfsz	4,f
  1694     0628  0800               	movf	0,w
  1695     0629  1803               	skipnc
  1696     062A  0A00               	incf	0,w
  1697     062B  00FF               	movwf	btemp+1
  1698     062C  0875               	movf	??_free+3,w
  1699     062D  077F               	addwf	btemp+1,w
  1700     062E  0080               	movwf	0
  1701     062F  0384               	decf	4,f
  1702     0630  2E55               	goto	l711
  1703     0631                     l1420:
  1704     0631  087A               	movf	free@c,w
  1705     0632  3E02               	addlw	2
  1706     0633  00F2               	movwf	??_free
  1707     0634  087B               	movf	free@c+1,w
  1708     0635  1803               	skipnc
  1709     0636  3E01               	addlw	1
  1710     0637  3E00               	addlw	0
  1711     0638  00F3               	movwf	??_free+1
  1712     0639  0872               	movf	??_free,w
  1713     063A  0084               	movwf	4
  1714     063B  1783               	bsf	3,7
  1715     063C  1C73               	btfss	??_free+1,0
  1716     063D  1383               	bcf	3,7
  1717     063E  0867               	movf	___freelist,w
  1718     063F  0080               	movwf	0
  1719     0640  0A84               	incf	4,f
  1720     0641  0868               	movf	___freelist+1,w
  1721     0642  0080               	movwf	0
  1722     0643  2DE5               	goto	l1408
  1723     0644                     l1422:
  1724     0644  087A               	movf	free@c,w
  1725     0645  3E02               	addlw	2
  1726     0646  00F2               	movwf	??_free
  1727     0647  087B               	movf	free@c+1,w
  1728     0648  1803               	skipnc
  1729     0649  3E01               	addlw	1
  1730     064A  3E00               	addlw	0
  1731     064B  00F3               	movwf	??_free+1
  1732     064C  0872               	movf	??_free,w
  1733     064D  0084               	movwf	4
  1734     064E  1783               	bsf	3,7
  1735     064F  1C73               	btfss	??_free+1,0
  1736     0650  1383               	bcf	3,7
  1737     0651  0180               	clrf	0
  1738     0652  0A84               	incf	4,f
  1739     0653  0180               	clrf	0
  1740     0654  2DE5               	goto	l1408
  1741     0655                     l711:
  1742     0655  0008               	return
  1743     0656                     __end_of_free:
  1744                           
  1745                           	psect	text5
  1746     01A3                     __ptext5:	
  1747 ;; *************** function _calloc *****************
  1748 ;; Defined at:
  1749 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_calloc.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  nmemb           2   24[BANK0 ] unsigned int 
  1752 ;;  size            2   26[BANK0 ] unsigned int 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  new_ptr         2   28[BANK0 ] PTR void 
  1755 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2   24[BANK0 ] PTR void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       4       0       0       0
  1766 ;;      Locals:         0       2       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       6       0       0       0
  1769 ;;Total ram usage:        6 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		___wmul
  1774 ;;		_malloc
  1775 ;;		_memset
  1776 ;; This function is called by:
  1777 ;;		_Rotate
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781     01A3                     _calloc:	
  1782                           ;psect for function _calloc
  1783                           
  1784     01A3                     l1386:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _calloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1787                           
  1788     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1789     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1790     01A5  0839               	movf	calloc@nmemb+1,w
  1791     01A6  00F1               	movwf	___wmul@multiplier+1
  1792     01A7  0838               	movf	calloc@nmemb,w
  1793     01A8  00F0               	movwf	___wmul@multiplier
  1794     01A9  083B               	movf	calloc@size+1,w
  1795     01AA  00F3               	movwf	___wmul@multiplicand+1
  1796     01AB  083A               	movf	calloc@size,w
  1797     01AC  00F2               	movwf	___wmul@multiplicand
  1798     01AD  120A  118A  213E  120A  118A  	fcall	___wmul
  1799     01B2  0871               	movf	?___wmul+1,w
  1800     01B3  00F9               	movwf	malloc@n+1
  1801     01B4  0870               	movf	?___wmul,w
  1802     01B5  00F8               	movwf	malloc@n
  1803     01B6  120A  118A  23FB  120A  118A  	fcall	_malloc
  1804     01BB  0878               	movf	?_malloc,w
  1805     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1806     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1807     01BE  00BC               	movwf	calloc@new_ptr
  1808     01BF  0879               	movf	?_malloc+1,w
  1809     01C0  00BD               	movwf	calloc@new_ptr+1
  1810     01C1                     l1388:
  1811     01C1  083C               	movf	calloc@new_ptr,w
  1812     01C2  043D               	iorwf	calloc@new_ptr+1,w
  1813     01C3  1903               	btfsc	3,2
  1814     01C4  29C6               	goto	u761
  1815     01C5  29C7               	goto	u760
  1816     01C6                     u761:
  1817     01C6  29E4               	goto	l1392
  1818     01C7                     u760:
  1819     01C7                     l1390:
  1820     01C7  083C               	movf	calloc@new_ptr,w
  1821     01C8  00F6               	movwf	memset@dest
  1822     01C9  083D               	movf	calloc@new_ptr+1,w
  1823     01CA  00F7               	movwf	memset@dest+1
  1824     01CB  3000               	movlw	0
  1825     01CC  00F8               	movwf	memset@c
  1826     01CD  00F9               	movwf	memset@c+1
  1827     01CE  0839               	movf	calloc@nmemb+1,w
  1828     01CF  00F1               	movwf	___wmul@multiplier+1
  1829     01D0  0838               	movf	calloc@nmemb,w
  1830     01D1  00F0               	movwf	___wmul@multiplier
  1831     01D2  083B               	movf	calloc@size+1,w
  1832     01D3  00F3               	movwf	___wmul@multiplicand+1
  1833     01D4  083A               	movf	calloc@size,w
  1834     01D5  00F2               	movwf	___wmul@multiplicand
  1835     01D6  120A  118A  213E  120A  118A  	fcall	___wmul
  1836     01DB  0871               	movf	?___wmul+1,w
  1837     01DC  00FB               	movwf	memset@n+1
  1838     01DD  0870               	movf	?___wmul,w
  1839     01DE  00FA               	movwf	memset@n
  1840     01DF  120A  118A  211F  120A  118A  	fcall	_memset
  1841     01E4                     l1392:
  1842     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1843     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1844     01E6  083C               	movf	calloc@new_ptr,w
  1845     01E7  00B8               	movwf	?_calloc
  1846     01E8  083D               	movf	calloc@new_ptr+1,w
  1847     01E9  00B9               	movwf	?_calloc+1
  1848     01EA                     l688:
  1849     01EA  0008               	return
  1850     01EB                     __end_of_calloc:
  1851                           
  1852                           	psect	text6
  1853     011F                     __ptext6:	
  1854 ;; *************** function _memset *****************
  1855 ;; Defined at:
  1856 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  dest            2    6[COMMON] PTR void 
  1859 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1860 ;;  c               2    8[COMMON] int 
  1861 ;;  n               2   10[COMMON] unsigned int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  p               2   12[COMMON] PTR unsigned char 
  1864 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2    6[COMMON] PTR void 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         6       0       0       0       0
  1875 ;;      Locals:         2       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0
  1877 ;;      Totals:         8       0       0       0       0
  1878 ;;Total ram usage:        8 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_calloc
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887     011F                     _memset:	
  1888                           ;psect for function _memset
  1889                           
  1890     011F                     l1354:	
  1891                           ;incstack = 0
  1892                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1893                           
  1894     011F  0876               	movf	memset@dest,w
  1895     0120  00FC               	movwf	memset@p
  1896     0121  0877               	movf	memset@dest+1,w
  1897     0122  00FD               	movwf	memset@p+1
  1898     0123  292F               	goto	l1360
  1899     0124                     l1356:
  1900     0124  087C               	movf	memset@p,w
  1901     0125  0084               	movwf	4
  1902     0126  1783               	bsf	3,7
  1903     0127  1C7D               	btfss	memset@p+1,0
  1904     0128  1383               	bcf	3,7
  1905     0129  0878               	movf	memset@c,w
  1906     012A  0080               	movwf	0
  1907     012B                     l1358:
  1908     012B  3001               	movlw	1
  1909     012C  07FC               	addwf	memset@p,f
  1910     012D  1803               	skipnc
  1911     012E  0AFD               	incf	memset@p+1,f
  1912     012F                     l1360:
  1913     012F  3001               	movlw	1
  1914     0130  02FA               	subwf	memset@n,f
  1915     0131  3000               	movlw	0
  1916     0132  1C03               	skipc
  1917     0133  03FB               	decf	memset@n+1,f
  1918     0134  02FB               	subwf	memset@n+1,f
  1919     0135  0A7A               	incf	memset@n,w
  1920     0136  1D03               	skipz
  1921     0137  293C               	goto	u751
  1922     0138  0A7B               	incf	memset@n+1,w
  1923     0139  1D03               	btfss	3,2
  1924     013A  293C               	goto	u751
  1925     013B  293D               	goto	u750
  1926     013C                     u751:
  1927     013C  2924               	goto	l1356
  1928     013D                     u750:
  1929     013D                     l764:
  1930     013D  0008               	return
  1931     013E                     __end_of_memset:
  1932                           
  1933                           	psect	text7
  1934     03FB                     __ptext7:	
  1935 ;; *************** function _malloc *****************
  1936 ;; Defined at:
  1937 ;;		line 16 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_malloc.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  n               2    8[COMMON] unsigned int 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  sz              2   16[BANK0 ] PTR unsigned int 
  1942 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1943 ;;  new             2   22[BANK0 ] PTR unsigned char 
  1944 ;;		 -> __heap_hi(0), NULL(0), 
  1945 ;;  m               2   14[BANK0 ] unsigned int 
  1946 ;;  p               2   20[BANK0 ] PTR void 
  1947 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1948 ;;  size            2   18[BANK0 ] unsigned int 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2    8[COMMON] PTR void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         2       0       0       0       0
  1959 ;;      Locals:         0      10       0       0       0
  1960 ;;      Temps:          2       0       0       0       0
  1961 ;;      Totals:         4      10       0       0       0
  1962 ;;Total ram usage:       14 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		___expand_heap
  1967 ;;		___simple_search_fl
  1968 ;; This function is called by:
  1969 ;;		_calloc
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973     03FB                     _malloc:	
  1974                           ;psect for function _malloc
  1975                           
  1976     03FB                     l1302:	
  1977                           ;incstack = 0
  1978                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1979                           
  1980     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1981     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1982     03FD  01B2               	clrf	malloc@size
  1983     03FE  01B3               	clrf	malloc@size+1
  1984     03FF                     l1304:
  1985     03FF  0878               	movf	malloc@n,w
  1986     0400  0479               	iorwf	malloc@n+1,w
  1987     0401  1D03               	btfss	3,2
  1988     0402  2C04               	goto	u681
  1989     0403  2C05               	goto	u680
  1990     0404                     u681:
  1991     0404  2C0B               	goto	l731
  1992     0405                     u680:
  1993     0405                     l1306:
  1994     0405  3001               	movlw	1
  1995     0406  07F8               	addwf	malloc@n,f
  1996     0407  1803               	skipnc
  1997     0408  0AF9               	incf	malloc@n+1,f
  1998     0409  3000               	movlw	0
  1999     040A  07F9               	addwf	malloc@n+1,f
  2000     040B                     l731:
  2001     040B  3000               	movlw	0
  2002     040C  0279               	subwf	malloc@n+1,w
  2003     040D  3002               	movlw	2
  2004     040E  1903               	skipnz
  2005     040F  0278               	subwf	malloc@n,w
  2006     0410  1803               	skipnc
  2007     0411  2C13               	goto	u691
  2008     0412  2C14               	goto	u690
  2009     0413                     u691:
  2010     0413  2C19               	goto	l1310
  2011     0414                     u690:
  2012     0414                     l1308:
  2013     0414  3002               	movlw	2
  2014     0415  00F8               	movwf	malloc@n
  2015     0416  3000               	movlw	0
  2016     0417  00F9               	movwf	malloc@n+1
  2017     0418  2C2F               	goto	l1318
  2018     0419                     l1310:
  2019     0419  0879               	movf	malloc@n+1,w
  2020     041A  00FB               	movwf	??_malloc+1
  2021     041B  0878               	movf	malloc@n,w
  2022     041C  00FA               	movwf	??_malloc
  2023     041D  09FA               	comf	??_malloc,f
  2024     041E  09FB               	comf	??_malloc+1,f
  2025     041F  3000               	movlw	0
  2026     0420  027B               	subwf	??_malloc+1,w
  2027     0421  3002               	movlw	2
  2028     0422  1903               	skipnz
  2029     0423  027A               	subwf	??_malloc,w
  2030     0424  1803               	skipnc
  2031     0425  2C27               	goto	u701
  2032     0426  2C28               	goto	u700
  2033     0427                     u701:
  2034     0427  2C2F               	goto	l1318
  2035     0428                     u700:
  2036     0428                     l1312:
  2037     0428  300C               	movlw	12
  2038     0429  00E5               	movwf	_errno
  2039     042A  3000               	movlw	0
  2040     042B  00E6               	movwf	_errno+1
  2041     042C                     l1314:
  2042     042C  01F8               	clrf	?_malloc
  2043     042D  01F9               	clrf	?_malloc+1
  2044     042E  2CAA               	goto	l735
  2045     042F                     l1318:
  2046     042F                     l1320:
  2047     042F  0879               	movf	malloc@n+1,w
  2048     0430  00F1               	movwf	___simple_search_fl@n+1
  2049     0431  0878               	movf	malloc@n,w
  2050     0432  00F0               	movwf	___simple_search_fl@n
  2051     0433  120A  118A  2656  120A  118A  	fcall	___simple_search_fl
  2052     0438  0870               	movf	?___simple_search_fl,w
  2053     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2054     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2055     043B  00B4               	movwf	malloc@p
  2056     043C  0871               	movf	?___simple_search_fl+1,w
  2057     043D  00B5               	movwf	malloc@p+1
  2058     043E                     l1322:
  2059     043E  0834               	movf	malloc@p,w
  2060     043F  0435               	iorwf	malloc@p+1,w
  2061     0440  1D03               	btfss	3,2
  2062     0441  2C43               	goto	u711
  2063     0442  2C44               	goto	u710
  2064     0443                     u711:
  2065     0443  2CA6               	goto	l1350
  2066     0444                     u710:
  2067     0444                     l1324:
  2068     0444  0863               	movf	malloc@cur,w
  2069     0445  0261               	subwf	malloc@end,w
  2070     0446  00FA               	movwf	??_malloc
  2071     0447  0864               	movf	malloc@cur+1,w
  2072     0448  1C03               	skipc
  2073     0449  0A64               	incf	malloc@cur+1,w
  2074     044A  0262               	subwf	malloc@end+1,w
  2075     044B  00FB               	movwf	??_malloc+1
  2076     044C  0879               	movf	malloc@n+1,w
  2077     044D  027B               	subwf	??_malloc+1,w
  2078     044E  1D03               	skipz
  2079     044F  2C52               	goto	u725
  2080     0450  0878               	movf	malloc@n,w
  2081     0451  027A               	subwf	??_malloc,w
  2082     0452                     u725:
  2083     0452  1803               	skipnc
  2084     0453  2C55               	goto	u721
  2085     0454  2C56               	goto	u720
  2086     0455                     u721:
  2087     0455  2C87               	goto	l737
  2088     0456                     u720:
  2089     0456                     l1326:
  2090     0456  0878               	movf	malloc@n,w
  2091     0457  3E02               	addlw	2
  2092     0458  00AE               	movwf	malloc@m
  2093     0459  0879               	movf	malloc@n+1,w
  2094     045A  1803               	skipnc
  2095     045B  3E01               	addlw	1
  2096     045C  3E00               	addlw	0
  2097     045D  00AF               	movwf	malloc@m+1
  2098     045E                     l1328:
  2099     045E  302E               	movlw	(low (malloc@m| 0))& (0+255)
  2100     045F  00F0               	movwf	___expand_heap@pn
  2101     0460  120A  118A  21EB  120A  118A  	fcall	___expand_heap
  2102     0465  0870               	movf	?___expand_heap,w
  2103     0466  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0467  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0468  00B6               	movwf	malloc@new
  2106     0469  0871               	movf	?___expand_heap+1,w
  2107     046A  00B7               	movwf	malloc@new+1
  2108     046B                     l1330:
  2109     046B  0836               	movf	malloc@new,w
  2110     046C  0437               	iorwf	malloc@new+1,w
  2111     046D  1D03               	btfss	3,2
  2112     046E  2C70               	goto	u731
  2113     046F  2C71               	goto	u730
  2114     0470                     u731:
  2115     0470  2C72               	goto	l1336
  2116     0471                     u730:
  2117     0471  2C2C               	goto	l1314
  2118     0472                     l1336:
  2119     0472  0862               	movf	malloc@end+1,w
  2120     0473  0637               	xorwf	malloc@new+1,w
  2121     0474  1D03               	skipz
  2122     0475  2C78               	goto	u745
  2123     0476  0861               	movf	malloc@end,w
  2124     0477  0636               	xorwf	malloc@new,w
  2125     0478                     u745:
  2126     0478  1903               	skipnz
  2127     0479  2C7B               	goto	u741
  2128     047A  2C7C               	goto	u740
  2129     047B                     u741:
  2130     047B  2C80               	goto	l739
  2131     047C                     u740:
  2132     047C                     l1338:
  2133     047C  0836               	movf	malloc@new,w
  2134     047D  00E3               	movwf	malloc@cur
  2135     047E  0837               	movf	malloc@new+1,w
  2136     047F  00E4               	movwf	malloc@cur+1
  2137     0480                     l739:
  2138     0480  082E               	movf	malloc@m,w
  2139     0481  0736               	addwf	malloc@new,w
  2140     0482  00E1               	movwf	malloc@end
  2141     0483  0837               	movf	malloc@new+1,w
  2142     0484  1803               	skipnc
  2143     0485  3E01               	addlw	1
  2144     0486  00E2               	movwf	malloc@end+1
  2145     0487                     l737:
  2146     0487  0863               	movf	malloc@cur,w
  2147     0488  00B4               	movwf	malloc@p
  2148     0489  0864               	movf	malloc@cur+1,w
  2149     048A  00B5               	movwf	malloc@p+1
  2150     048B                     l1340:
  2151     048B  0834               	movf	malloc@p,w
  2152     048C  00B0               	movwf	malloc@sz
  2153     048D  0835               	movf	malloc@p+1,w
  2154     048E  00B1               	movwf	malloc@sz+1
  2155     048F                     l1342:
  2156     048F  0830               	movf	malloc@sz,w
  2157     0490  0084               	movwf	4
  2158     0491  1783               	bsf	3,7
  2159     0492  1C31               	btfss	malloc@sz+1,0
  2160     0493  1383               	bcf	3,7
  2161     0494  0878               	movf	malloc@n,w
  2162     0495  0080               	movwf	0
  2163     0496  0A84               	incf	4,f
  2164     0497  0879               	movf	malloc@n+1,w
  2165     0498  0080               	movwf	0
  2166     0499                     l1344:
  2167     0499  3002               	movlw	2
  2168     049A  07B0               	addwf	malloc@sz,f
  2169     049B  1803               	skipnc
  2170     049C  0AB1               	incf	malloc@sz+1,f
  2171     049D                     l1346:
  2172     049D  0830               	movf	malloc@sz,w
  2173     049E  00B4               	movwf	malloc@p
  2174     049F  0831               	movf	malloc@sz+1,w
  2175     04A0  00B5               	movwf	malloc@p+1
  2176     04A1                     l1348:
  2177     04A1  0878               	movf	malloc@n,w
  2178     04A2  3E02               	addlw	2
  2179     04A3  07E3               	addwf	malloc@cur,f
  2180     04A4  1803               	skipnc
  2181     04A5  0AE4               	incf	malloc@cur+1,f
  2182     04A6                     l1350:
  2183     04A6  0834               	movf	malloc@p,w
  2184     04A7  00F8               	movwf	?_malloc
  2185     04A8  0835               	movf	malloc@p+1,w
  2186     04A9  00F9               	movwf	?_malloc+1
  2187     04AA                     l735:
  2188     04AA  0008               	return
  2189     04AB                     __end_of_malloc:
  2190                           
  2191                           	psect	text8
  2192     0656                     __ptext8:	
  2193 ;; *************** function ___simple_search_fl *****************
  2194 ;; Defined at:
  2195 ;;		line 19 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  n               2    0[COMMON] unsigned int 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  split           2    4[BANK0 ] PTR struct chunk
  2200 ;;		 -> __heap_hi$.$next(2), NULL(0), 
  2201 ;;  remaining_si    2    0[BANK0 ] unsigned int 
  2202 ;;  next            2    8[BANK0 ] PTR struct chunk
  2203 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2204 ;;  best            2   12[BANK0 ] PTR struct chunk
  2205 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2206 ;;  c               2   10[BANK0 ] PTR struct chunk
  2207 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2208 ;;  last            2    6[BANK0 ] PTR struct chunk
  2209 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2210 ;;  best_last       2    2[BANK0 ] PTR struct chunk
  2211 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2    0[COMMON] PTR void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         2       0       0       0       0
  2222 ;;      Locals:         0      14       0       0       0
  2223 ;;      Temps:          6       0       0       0       0
  2224 ;;      Totals:         8      14       0       0       0
  2225 ;;Total ram usage:       22 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_malloc
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234     0656                     ___simple_search_fl:	
  2235                           ;psect for function ___simple_search_fl
  2236                           
  2237     0656                     l1176:	
  2238                           ;incstack = 0
  2239                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0]
  2240                           
  2241     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2242     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2243     0658  01AC               	clrf	___simple_search_fl@best
  2244     0659  01AD               	clrf	___simple_search_fl@best+1
  2245     065A  01A2               	clrf	___simple_search_fl@best_last
  2246     065B  01A3               	clrf	___simple_search_fl@best_last+1
  2247     065C  01A6               	clrf	___simple_search_fl@last
  2248     065D  01A7               	clrf	___simple_search_fl@last+1
  2249     065E                     l1178:
  2250     065E  0867               	movf	___freelist,w
  2251     065F  0468               	iorwf	___freelist+1,w
  2252     0660  1D03               	btfss	3,2
  2253     0661  2E63               	goto	u471
  2254     0662  2E64               	goto	u470
  2255     0663                     u471:
  2256     0663  2E67               	goto	l1184
  2257     0664                     u470:
  2258     0664                     l1180:
  2259     0664  01F0               	clrf	?___simple_search_fl
  2260     0665  01F1               	clrf	?___simple_search_fl+1
  2261     0666  2FDB               	goto	l694
  2262     0667                     l1184:
  2263     0667  0867               	movf	___freelist,w
  2264     0668  00AA               	movwf	___simple_search_fl@c
  2265     0669  0868               	movf	___freelist+1,w
  2266     066A  00AB               	movwf	___simple_search_fl@c+1
  2267     066B  2F20               	goto	l1210
  2268     066C                     l1186:
  2269     066C  082A               	movf	___simple_search_fl@c,w
  2270     066D  0084               	movwf	4
  2271     066E  1783               	bsf	3,7
  2272     066F  1C2B               	btfss	___simple_search_fl@c+1,0
  2273     0670  1383               	bcf	3,7
  2274     0671  0800               	movf	0,w
  2275     0672  00F2               	movwf	??___simple_search_fl
  2276     0673  0A84               	incf	4,f
  2277     0674  0800               	movf	0,w
  2278     0675  00F3               	movwf	??___simple_search_fl+1
  2279     0676  0871               	movf	___simple_search_fl@n+1,w
  2280     0677  0673               	xorwf	??___simple_search_fl+1,w
  2281     0678  1D03               	skipz
  2282     0679  2E7C               	goto	u485
  2283     067A  0870               	movf	___simple_search_fl@n,w
  2284     067B  0672               	xorwf	??___simple_search_fl,w
  2285     067C                     u485:
  2286     067C  1D03               	skipz
  2287     067D  2E7F               	goto	u481
  2288     067E  2E80               	goto	u480
  2289     067F                     u481:
  2290     067F  2EC8               	goto	l1198
  2291     0680                     u480:
  2292     0680                     l1188:
  2293     0680  0826               	movf	___simple_search_fl@last,w
  2294     0681  0427               	iorwf	___simple_search_fl@last+1,w
  2295     0682  1903               	btfsc	3,2
  2296     0683  2E85               	goto	u491
  2297     0684  2E86               	goto	u490
  2298     0685                     u491:
  2299     0685  2EAC               	goto	l1192
  2300     0686                     u490:
  2301     0686                     l1190:
  2302     0686  082A               	movf	___simple_search_fl@c,w
  2303     0687  3E02               	addlw	2
  2304     0688  00F2               	movwf	??___simple_search_fl
  2305     0689  082B               	movf	___simple_search_fl@c+1,w
  2306     068A  1803               	skipnc
  2307     068B  3E01               	addlw	1
  2308     068C  3E00               	addlw	0
  2309     068D  00F3               	movwf	??___simple_search_fl+1
  2310     068E  0872               	movf	??___simple_search_fl,w
  2311     068F  0084               	movwf	4
  2312     0690  1783               	bsf	3,7
  2313     0691  1C73               	btfss	??___simple_search_fl+1,0
  2314     0692  1383               	bcf	3,7
  2315     0693  0800               	movf	0,w
  2316     0694  00F4               	movwf	??___simple_search_fl+2
  2317     0695  0A84               	incf	4,f
  2318     0696  0800               	movf	0,w
  2319     0697  00F5               	movwf	??___simple_search_fl+3
  2320     0698  0826               	movf	___simple_search_fl@last,w
  2321     0699  3E02               	addlw	2
  2322     069A  00F6               	movwf	??___simple_search_fl+4
  2323     069B  0827               	movf	___simple_search_fl@last+1,w
  2324     069C  1803               	skipnc
  2325     069D  3E01               	addlw	1
  2326     069E  3E00               	addlw	0
  2327     069F  00F7               	movwf	??___simple_search_fl+5
  2328     06A0  0876               	movf	??___simple_search_fl+4,w
  2329     06A1  0084               	movwf	4
  2330     06A2  1783               	bsf	3,7
  2331     06A3  1C77               	btfss	??___simple_search_fl+5,0
  2332     06A4  1383               	bcf	3,7
  2333     06A5  0874               	movf	??___simple_search_fl+2,w
  2334     06A6  0080               	movwf	0
  2335     06A7  0875               	movf	??___simple_search_fl+3,w
  2336     06A8  0A84               	incf	4,f
  2337     06A9  0080               	movwf	0
  2338     06AA  0384               	decf	4,f
  2339     06AB  2EBF               	goto	l1194
  2340     06AC                     l1192:
  2341     06AC  082A               	movf	___simple_search_fl@c,w
  2342     06AD  3E02               	addlw	2
  2343     06AE  00F2               	movwf	??___simple_search_fl
  2344     06AF  082B               	movf	___simple_search_fl@c+1,w
  2345     06B0  1803               	skipnc
  2346     06B1  3E01               	addlw	1
  2347     06B2  3E00               	addlw	0
  2348     06B3  00F3               	movwf	??___simple_search_fl+1
  2349     06B4  0872               	movf	??___simple_search_fl,w
  2350     06B5  0084               	movwf	4
  2351     06B6  1783               	bsf	3,7
  2352     06B7  1C73               	btfss	??___simple_search_fl+1,0
  2353     06B8  1383               	bcf	3,7
  2354     06B9  0800               	movf	0,w
  2355     06BA  00E7               	movwf	___freelist
  2356     06BB  0A84               	incf	4,f
  2357     06BC  0800               	movf	0,w
  2358     06BD  0384               	decf	4,f
  2359     06BE  00E8               	movwf	___freelist+1
  2360     06BF                     l1194:
  2361     06BF  082A               	movf	___simple_search_fl@c,w
  2362     06C0  3E02               	addlw	2
  2363     06C1  00F0               	movwf	?___simple_search_fl
  2364     06C2  082B               	movf	___simple_search_fl@c+1,w
  2365     06C3  1803               	skipnc
  2366     06C4  3E01               	addlw	1
  2367     06C5  3E00               	addlw	0
  2368     06C6  00F1               	movwf	?___simple_search_fl+1
  2369     06C7  2FDB               	goto	l694
  2370     06C8                     l1198:
  2371     06C8  082A               	movf	___simple_search_fl@c,w
  2372     06C9  0084               	movwf	4
  2373     06CA  1783               	bsf	3,7
  2374     06CB  1C2B               	btfss	___simple_search_fl@c+1,0
  2375     06CC  1383               	bcf	3,7
  2376     06CD  0800               	movf	0,w
  2377     06CE  00F2               	movwf	??___simple_search_fl
  2378     06CF  0A84               	incf	4,f
  2379     06D0  0800               	movf	0,w
  2380     06D1  00F3               	movwf	??___simple_search_fl+1
  2381     06D2  0873               	movf	??___simple_search_fl+1,w
  2382     06D3  0271               	subwf	___simple_search_fl@n+1,w
  2383     06D4  1D03               	skipz
  2384     06D5  2ED8               	goto	u505
  2385     06D6  0872               	movf	??___simple_search_fl,w
  2386     06D7  0270               	subwf	___simple_search_fl@n,w
  2387     06D8                     u505:
  2388     06D8  1803               	skipnc
  2389     06D9  2EDB               	goto	u501
  2390     06DA  2EDC               	goto	u500
  2391     06DB                     u501:
  2392     06DB  2F09               	goto	l702
  2393     06DC                     u500:
  2394     06DC                     l1200:
  2395     06DC  082C               	movf	___simple_search_fl@best,w
  2396     06DD  042D               	iorwf	___simple_search_fl@best+1,w
  2397     06DE  1903               	btfsc	3,2
  2398     06DF  2EE1               	goto	u511
  2399     06E0  2EE2               	goto	u510
  2400     06E1                     u511:
  2401     06E1  2F01               	goto	l1206
  2402     06E2                     u510:
  2403     06E2                     l1202:
  2404     06E2  082C               	movf	___simple_search_fl@best,w
  2405     06E3  0084               	movwf	4
  2406     06E4  1783               	bsf	3,7
  2407     06E5  1C2D               	btfss	___simple_search_fl@best+1,0
  2408     06E6  1383               	bcf	3,7
  2409     06E7  0800               	movf	0,w
  2410     06E8  00F2               	movwf	??___simple_search_fl
  2411     06E9  0A84               	incf	4,f
  2412     06EA  0800               	movf	0,w
  2413     06EB  00F3               	movwf	??___simple_search_fl+1
  2414     06EC  082A               	movf	___simple_search_fl@c,w
  2415     06ED  0084               	movwf	4
  2416     06EE  1783               	bsf	3,7
  2417     06EF  1C2B               	btfss	___simple_search_fl@c+1,0
  2418     06F0  1383               	bcf	3,7
  2419     06F1  0800               	movf	0,w
  2420     06F2  00F4               	movwf	??___simple_search_fl+2
  2421     06F3  0A84               	incf	4,f
  2422     06F4  0800               	movf	0,w
  2423     06F5  00F5               	movwf	??___simple_search_fl+3
  2424     06F6  0873               	movf	??___simple_search_fl+1,w
  2425     06F7  0275               	subwf	??___simple_search_fl+3,w
  2426     06F8  1D03               	skipz
  2427     06F9  2EFC               	goto	u525
  2428     06FA  0872               	movf	??___simple_search_fl,w
  2429     06FB  0274               	subwf	??___simple_search_fl+2,w
  2430     06FC                     u525:
  2431     06FC  1C03               	skipc
  2432     06FD  2EFF               	goto	u521
  2433     06FE  2F00               	goto	u520
  2434     06FF                     u521:
  2435     06FF  2F01               	goto	l1206
  2436     0700                     u520:
  2437     0700  2F09               	goto	l702
  2438     0701                     l1206:
  2439     0701  082A               	movf	___simple_search_fl@c,w
  2440     0702  00AC               	movwf	___simple_search_fl@best
  2441     0703  082B               	movf	___simple_search_fl@c+1,w
  2442     0704  00AD               	movwf	___simple_search_fl@best+1
  2443     0705  0826               	movf	___simple_search_fl@last,w
  2444     0706  00A2               	movwf	___simple_search_fl@best_last
  2445     0707  0827               	movf	___simple_search_fl@last+1,w
  2446     0708  00A3               	movwf	___simple_search_fl@best_last+1
  2447     0709                     l702:
  2448     0709  082A               	movf	___simple_search_fl@c,w
  2449     070A  00A6               	movwf	___simple_search_fl@last
  2450     070B  082B               	movf	___simple_search_fl@c+1,w
  2451     070C  00A7               	movwf	___simple_search_fl@last+1
  2452     070D                     l1208:
  2453     070D  082A               	movf	___simple_search_fl@c,w
  2454     070E  3E02               	addlw	2
  2455     070F  00F2               	movwf	??___simple_search_fl
  2456     0710  082B               	movf	___simple_search_fl@c+1,w
  2457     0711  1803               	skipnc
  2458     0712  3E01               	addlw	1
  2459     0713  3E00               	addlw	0
  2460     0714  00F3               	movwf	??___simple_search_fl+1
  2461     0715  0872               	movf	??___simple_search_fl,w
  2462     0716  0084               	movwf	4
  2463     0717  1783               	bsf	3,7
  2464     0718  1C73               	btfss	??___simple_search_fl+1,0
  2465     0719  1383               	bcf	3,7
  2466     071A  0800               	movf	0,w
  2467     071B  00AA               	movwf	___simple_search_fl@c
  2468     071C  0A84               	incf	4,f
  2469     071D  0800               	movf	0,w
  2470     071E  0384               	decf	4,f
  2471     071F  00AB               	movwf	___simple_search_fl@c+1
  2472     0720                     l1210:
  2473     0720  082A               	movf	___simple_search_fl@c,w
  2474     0721  042B               	iorwf	___simple_search_fl@c+1,w
  2475     0722  1D03               	btfss	3,2
  2476     0723  2F25               	goto	u531
  2477     0724  2F26               	goto	u530
  2478     0725                     u531:
  2479     0725  2E6C               	goto	l1186
  2480     0726                     u530:
  2481     0726                     l1212:
  2482     0726  082C               	movf	___simple_search_fl@best,w
  2483     0727  042D               	iorwf	___simple_search_fl@best+1,w
  2484     0728  1903               	btfsc	3,2
  2485     0729  2F2B               	goto	u541
  2486     072A  2F2C               	goto	u540
  2487     072B                     u541:
  2488     072B  2E64               	goto	l1180
  2489     072C                     u540:
  2490     072C                     l1214:
  2491     072C  082C               	movf	___simple_search_fl@best,w
  2492     072D  3E02               	addlw	2
  2493     072E  00F2               	movwf	??___simple_search_fl
  2494     072F  082D               	movf	___simple_search_fl@best+1,w
  2495     0730  1803               	skipnc
  2496     0731  3E01               	addlw	1
  2497     0732  3E00               	addlw	0
  2498     0733  00F3               	movwf	??___simple_search_fl+1
  2499     0734  0872               	movf	??___simple_search_fl,w
  2500     0735  0084               	movwf	4
  2501     0736  1783               	bsf	3,7
  2502     0737  1C73               	btfss	??___simple_search_fl+1,0
  2503     0738  1383               	bcf	3,7
  2504     0739  0800               	movf	0,w
  2505     073A  00A8               	movwf	___simple_search_fl@next
  2506     073B  0A84               	incf	4,f
  2507     073C  0800               	movf	0,w
  2508     073D  0384               	decf	4,f
  2509     073E  00A9               	movwf	___simple_search_fl@next+1
  2510     073F  082C               	movf	___simple_search_fl@best,w
  2511     0740  0084               	movwf	4
  2512     0741  1783               	bsf	3,7
  2513     0742  1C2D               	btfss	___simple_search_fl@best+1,0
  2514     0743  1383               	bcf	3,7
  2515     0744  0800               	movf	0,w
  2516     0745  00F2               	movwf	??___simple_search_fl
  2517     0746  0A84               	incf	4,f
  2518     0747  0800               	movf	0,w
  2519     0748  00F3               	movwf	??___simple_search_fl+1
  2520     0749  0870               	movf	___simple_search_fl@n,w
  2521     074A  0272               	subwf	??___simple_search_fl,w
  2522     074B  00F4               	movwf	??___simple_search_fl+2
  2523     074C  0871               	movf	___simple_search_fl@n+1,w
  2524     074D  1C03               	skipc
  2525     074E  0A71               	incf	___simple_search_fl@n+1,w
  2526     074F  0273               	subwf	??___simple_search_fl+1,w
  2527     0750  00F5               	movwf	??___simple_search_fl+3
  2528     0751  3000               	movlw	0
  2529     0752  0275               	subwf	??___simple_search_fl+3,w
  2530     0753  3005               	movlw	5
  2531     0754  1903               	skipnz
  2532     0755  0274               	subwf	??___simple_search_fl+2,w
  2533     0756  1C03               	skipc
  2534     0757  2F59               	goto	u551
  2535     0758  2F5A               	goto	u550
  2536     0759                     u551:
  2537     0759  2FB2               	goto	l705
  2538     075A                     u550:
  2539     075A                     l1216:
  2540     075A  082C               	movf	___simple_search_fl@best,w
  2541     075B  0084               	movwf	4
  2542     075C  1783               	bsf	3,7
  2543     075D  1C2D               	btfss	___simple_search_fl@best+1,0
  2544     075E  1383               	bcf	3,7
  2545     075F  0800               	movf	0,w
  2546     0760  00F2               	movwf	??___simple_search_fl
  2547     0761  0A84               	incf	4,f
  2548     0762  0800               	movf	0,w
  2549     0763  00F3               	movwf	??___simple_search_fl+1
  2550     0764  0870               	movf	___simple_search_fl@n,w
  2551     0765  0272               	subwf	??___simple_search_fl,w
  2552     0766  00F4               	movwf	??___simple_search_fl+2
  2553     0767  0871               	movf	___simple_search_fl@n+1,w
  2554     0768  1C03               	skipc
  2555     0769  0A71               	incf	___simple_search_fl@n+1,w
  2556     076A  0273               	subwf	??___simple_search_fl+1,w
  2557     076B  00F5               	movwf	??___simple_search_fl+3
  2558     076C  0874               	movf	??___simple_search_fl+2,w
  2559     076D  3EFE               	addlw	254
  2560     076E  00A0               	movwf	___simple_search_fl@remaining_size
  2561     076F  0875               	movf	??___simple_search_fl+3,w
  2562     0770  1803               	skipnc
  2563     0771  3E01               	addlw	1
  2564     0772  3EFF               	addlw	255
  2565     0773  00A1               	movwf	___simple_search_fl@remaining_size+1
  2566     0774                     l1218:
  2567     0774  082C               	movf	___simple_search_fl@best,w
  2568     0775  0084               	movwf	4
  2569     0776  1783               	bsf	3,7
  2570     0777  1C2D               	btfss	___simple_search_fl@best+1,0
  2571     0778  1383               	bcf	3,7
  2572     0779  0870               	movf	___simple_search_fl@n,w
  2573     077A  0080               	movwf	0
  2574     077B  0A84               	incf	4,f
  2575     077C  0871               	movf	___simple_search_fl@n+1,w
  2576     077D  0080               	movwf	0
  2577     077E                     l1220:
  2578     077E  082C               	movf	___simple_search_fl@best,w
  2579     077F  0084               	movwf	4
  2580     0780  1783               	bsf	3,7
  2581     0781  1C2D               	btfss	___simple_search_fl@best+1,0
  2582     0782  1383               	bcf	3,7
  2583     0783  0800               	movf	0,w
  2584     0784  072C               	addwf	___simple_search_fl@best,w
  2585     0785  00F2               	movwf	??___simple_search_fl
  2586     0786  082D               	movf	___simple_search_fl@best+1,w
  2587     0787  1803               	skipnc
  2588     0788  3E01               	addlw	1
  2589     0789  00F3               	movwf	??___simple_search_fl+1
  2590     078A  0872               	movf	??___simple_search_fl,w
  2591     078B  3E02               	addlw	2
  2592     078C  00A4               	movwf	___simple_search_fl@split
  2593     078D  0873               	movf	??___simple_search_fl+1,w
  2594     078E  1803               	skipnc
  2595     078F  3E01               	addlw	1
  2596     0790  3E00               	addlw	0
  2597     0791  00A5               	movwf	___simple_search_fl@split+1
  2598     0792  0824               	movf	___simple_search_fl@split,w
  2599     0793  0084               	movwf	4
  2600     0794  1783               	bsf	3,7
  2601     0795  1C25               	btfss	___simple_search_fl@split+1,0
  2602     0796  1383               	bcf	3,7
  2603     0797  0820               	movf	___simple_search_fl@remaining_size,w
  2604     0798  0080               	movwf	0
  2605     0799  0A84               	incf	4,f
  2606     079A  0821               	movf	___simple_search_fl@remaining_size+1,w
  2607     079B  0080               	movwf	0
  2608     079C                     l1222:
  2609     079C  0824               	movf	___simple_search_fl@split,w
  2610     079D  3E02               	addlw	2
  2611     079E  00F2               	movwf	??___simple_search_fl
  2612     079F  0825               	movf	___simple_search_fl@split+1,w
  2613     07A0  1803               	skipnc
  2614     07A1  3E01               	addlw	1
  2615     07A2  3E00               	addlw	0
  2616     07A3  00F3               	movwf	??___simple_search_fl+1
  2617     07A4  0872               	movf	??___simple_search_fl,w
  2618     07A5  0084               	movwf	4
  2619     07A6  1783               	bsf	3,7
  2620     07A7  1C73               	btfss	??___simple_search_fl+1,0
  2621     07A8  1383               	bcf	3,7
  2622     07A9  0828               	movf	___simple_search_fl@next,w
  2623     07AA  0080               	movwf	0
  2624     07AB  0A84               	incf	4,f
  2625     07AC  0829               	movf	___simple_search_fl@next+1,w
  2626     07AD  0080               	movwf	0
  2627     07AE                     l1224:
  2628     07AE  0824               	movf	___simple_search_fl@split,w
  2629     07AF  00A8               	movwf	___simple_search_fl@next
  2630     07B0  0825               	movf	___simple_search_fl@split+1,w
  2631     07B1  00A9               	movwf	___simple_search_fl@next+1
  2632     07B2                     l705:
  2633     07B2  082D               	movf	___simple_search_fl@best+1,w
  2634     07B3  0668               	xorwf	___freelist+1,w
  2635     07B4  1D03               	skipz
  2636     07B5  2FB8               	goto	u565
  2637     07B6  082C               	movf	___simple_search_fl@best,w
  2638     07B7  0667               	xorwf	___freelist,w
  2639     07B8                     u565:
  2640     07B8  1D03               	skipz
  2641     07B9  2FBB               	goto	u561
  2642     07BA  2FBC               	goto	u560
  2643     07BB                     u561:
  2644     07BB  2FC1               	goto	l1228
  2645     07BC                     u560:
  2646     07BC                     l1226:
  2647     07BC  0828               	movf	___simple_search_fl@next,w
  2648     07BD  00E7               	movwf	___freelist
  2649     07BE  0829               	movf	___simple_search_fl@next+1,w
  2650     07BF  00E8               	movwf	___freelist+1
  2651     07C0  2FD3               	goto	l1230
  2652     07C1                     l1228:
  2653     07C1  0822               	movf	___simple_search_fl@best_last,w
  2654     07C2  3E02               	addlw	2
  2655     07C3  00F2               	movwf	??___simple_search_fl
  2656     07C4  0823               	movf	___simple_search_fl@best_last+1,w
  2657     07C5  1803               	skipnc
  2658     07C6  3E01               	addlw	1
  2659     07C7  3E00               	addlw	0
  2660     07C8  00F3               	movwf	??___simple_search_fl+1
  2661     07C9  0872               	movf	??___simple_search_fl,w
  2662     07CA  0084               	movwf	4
  2663     07CB  1783               	bsf	3,7
  2664     07CC  1C73               	btfss	??___simple_search_fl+1,0
  2665     07CD  1383               	bcf	3,7
  2666     07CE  0828               	movf	___simple_search_fl@next,w
  2667     07CF  0080               	movwf	0
  2668     07D0  0A84               	incf	4,f
  2669     07D1  0829               	movf	___simple_search_fl@next+1,w
  2670     07D2  0080               	movwf	0
  2671     07D3                     l1230:
  2672     07D3  082C               	movf	___simple_search_fl@best,w
  2673     07D4  3E02               	addlw	2
  2674     07D5  00F0               	movwf	?___simple_search_fl
  2675     07D6  082D               	movf	___simple_search_fl@best+1,w
  2676     07D7  1803               	skipnc
  2677     07D8  3E01               	addlw	1
  2678     07D9  3E00               	addlw	0
  2679     07DA  00F1               	movwf	?___simple_search_fl+1
  2680     07DB                     l694:
  2681     07DB  0008               	return
  2682     07DC                     __end_of___simple_search_fl:
  2683                           
  2684                           	psect	text9
  2685     01EB                     __ptext9:	
  2686 ;; *************** function ___expand_heap *****************
  2687 ;; Defined at:
  2688 ;;		line 14 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/expand_heap.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  pn              1    0[COMMON] PTR unsigned int 
  2691 ;;		 -> malloc@m(2), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  2694 ;;		 -> __heap_hi(0), NULL(0), 
  2695 ;;  n               2    1[COMMON] unsigned int 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    0[COMMON] PTR void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         1       0       0       0       0
  2706 ;;      Locals:         4       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0
  2708 ;;      Totals:         5       0       0       0       0
  2709 ;;Total ram usage:        5 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_malloc
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     01EB                     ___expand_heap:	
  2719                           ;psect for function ___expand_heap
  2720                           
  2721     01EB                     l1238:	
  2722                           ;incstack = 0
  2723                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  2724                           
  2725     01EB  0870               	movf	___expand_heap@pn,w
  2726     01EC  0084               	movwf	4
  2727     01ED  1383               	bcf	3,7	;select IRP bank0
  2728     01EE  0800               	movf	0,w
  2729     01EF  00F1               	movwf	___expand_heap@n
  2730     01F0  0A84               	incf	4,f
  2731     01F1  0800               	movf	0,w
  2732     01F2  00F2               	movwf	___expand_heap@n+1
  2733     01F3                     l1240:
  2734     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2735     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2736     01F5  085F               	movf	_brkp,w
  2737     01F6  0460               	iorwf	_brkp+1,w
  2738     01F7  1D03               	btfss	3,2
  2739     01F8  29FA               	goto	u571
  2740     01F9  29FB               	goto	u570
  2741     01FA                     u571:
  2742     01FA  29FF               	goto	l753
  2743     01FB                     u570:
  2744     01FB                     l1242:
  2745     01FB  3070               	movlw	low ___heap_hi
  2746     01FC  00DF               	movwf	_brkp
  2747     01FD  3001               	movlw	high ___heap_hi
  2748     01FE  00E0               	movwf	_brkp+1
  2749     01FF                     l753:
  2750     01FF  3000               	movlw	0
  2751     0200  0272               	subwf	___expand_heap@n+1,w
  2752     0201  3004               	movlw	4
  2753     0202  1903               	skipnz
  2754     0203  0271               	subwf	___expand_heap@n,w
  2755     0204  1803               	skipnc
  2756     0205  2A07               	goto	u581
  2757     0206  2A08               	goto	u580
  2758     0207                     u581:
  2759     0207  2A0C               	goto	l1246
  2760     0208                     u580:
  2761     0208                     l1244:
  2762     0208  3004               	movlw	4
  2763     0209  00F1               	movwf	___expand_heap@n
  2764     020A  3000               	movlw	0
  2765     020B  00F2               	movwf	___expand_heap@n+1
  2766     020C                     l1246:
  2767     020C  0871               	movf	___expand_heap@n,w
  2768     020D  025F               	subwf	_brkp,w
  2769     020E  00F3               	movwf	___expand_heap@new_brkp
  2770     020F  0860               	movf	_brkp+1,w
  2771     0210  1C03               	skipc
  2772     0211  0360               	decf	_brkp+1,w
  2773     0212  00F4               	movwf	___expand_heap@new_brkp+1
  2774     0213                     l1248:
  2775     0213  3001               	movlw	high ___heap_lo
  2776     0214  0274               	subwf	___expand_heap@new_brkp+1,w
  2777     0215  3010               	movlw	low ___heap_lo
  2778     0216  1903               	skipnz
  2779     0217  0273               	subwf	___expand_heap@new_brkp,w
  2780     0218  1C03               	skipc
  2781     0219  2A1B               	goto	u591
  2782     021A  2A1C               	goto	u590
  2783     021B                     u591:
  2784     021B  2A26               	goto	l1252
  2785     021C                     u590:
  2786     021C                     l1250:
  2787     021C  0860               	movf	_brkp+1,w
  2788     021D  0274               	subwf	___expand_heap@new_brkp+1,w
  2789     021E  1D03               	skipz
  2790     021F  2A22               	goto	u605
  2791     0220  085F               	movf	_brkp,w
  2792     0221  0273               	subwf	___expand_heap@new_brkp,w
  2793     0222                     u605:
  2794     0222  1C03               	skipc
  2795     0223  2A25               	goto	u601
  2796     0224  2A26               	goto	u600
  2797     0225                     u601:
  2798     0225  2A2D               	goto	l1258
  2799     0226                     u600:
  2800     0226                     l1252:
  2801     0226  300C               	movlw	12
  2802     0227  00E5               	movwf	_errno
  2803     0228  3000               	movlw	0
  2804     0229  00E6               	movwf	_errno+1
  2805     022A                     l1254:
  2806     022A  01F0               	clrf	?___expand_heap
  2807     022B  01F1               	clrf	?___expand_heap+1
  2808     022C  2A35               	goto	l758
  2809     022D                     l1258:
  2810     022D  0873               	movf	___expand_heap@new_brkp,w
  2811     022E  00DF               	movwf	_brkp
  2812     022F  0874               	movf	___expand_heap@new_brkp+1,w
  2813     0230  00E0               	movwf	_brkp+1
  2814     0231  085F               	movf	_brkp,w
  2815     0232  00F0               	movwf	?___expand_heap
  2816     0233  0860               	movf	_brkp+1,w
  2817     0234  00F1               	movwf	?___expand_heap+1
  2818     0235                     l758:
  2819     0235  0008               	return
  2820     0236                     __end_of___expand_heap:
  2821                           
  2822                           	psect	text10
  2823     013E                     __ptext10:	
  2824 ;; *************** function ___wmul *****************
  2825 ;; Defined at:
  2826 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  multiplier      2    0[COMMON] unsigned int 
  2829 ;;  multiplicand    2    2[COMMON] unsigned int 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  product         2    4[COMMON] unsigned int 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2    0[COMMON] unsigned int 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         4       0       0       0       0
  2842 ;;      Locals:         2       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         6       0       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_calloc
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854     013E                     ___wmul:	
  2855                           ;psect for function ___wmul
  2856                           
  2857     013E                     l1288:	
  2858                           ;incstack = 0
  2859                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2860                           
  2861     013E  01F4               	clrf	___wmul@product
  2862     013F  01F5               	clrf	___wmul@product+1
  2863     0140                     l1290:
  2864     0140  1C70               	btfss	___wmul@multiplier,0
  2865     0141  2943               	goto	u641
  2866     0142  2944               	goto	u640
  2867     0143                     u641:
  2868     0143  294A               	goto	l224
  2869     0144                     u640:
  2870     0144                     l1292:
  2871     0144  0872               	movf	___wmul@multiplicand,w
  2872     0145  07F4               	addwf	___wmul@product,f
  2873     0146  1803               	skipnc
  2874     0147  0AF5               	incf	___wmul@product+1,f
  2875     0148  0873               	movf	___wmul@multiplicand+1,w
  2876     0149  07F5               	addwf	___wmul@product+1,f
  2877     014A                     l224:
  2878     014A  3001               	movlw	1
  2879     014B                     u655:
  2880     014B  1003               	clrc
  2881     014C  0DF2               	rlf	___wmul@multiplicand,f
  2882     014D  0DF3               	rlf	___wmul@multiplicand+1,f
  2883     014E  3EFF               	addlw	-1
  2884     014F  1D03               	skipz
  2885     0150  294B               	goto	u655
  2886     0151                     l1294:
  2887     0151  3001               	movlw	1
  2888     0152                     u665:
  2889     0152  1003               	clrc
  2890     0153  0CF1               	rrf	___wmul@multiplier+1,f
  2891     0154  0CF0               	rrf	___wmul@multiplier,f
  2892     0155  3EFF               	addlw	-1
  2893     0156  1D03               	skipz
  2894     0157  2952               	goto	u665
  2895     0158                     l1296:
  2896     0158  0870               	movf	___wmul@multiplier,w
  2897     0159  0471               	iorwf	___wmul@multiplier+1,w
  2898     015A  1D03               	btfss	3,2
  2899     015B  295D               	goto	u671
  2900     015C  295E               	goto	u670
  2901     015D                     u671:
  2902     015D  2940               	goto	l1290
  2903     015E                     u670:
  2904     015E                     l1298:
  2905     015E  0875               	movf	___wmul@product+1,w
  2906     015F  00F1               	movwf	?___wmul+1
  2907     0160  0874               	movf	___wmul@product,w
  2908     0161  00F0               	movwf	?___wmul
  2909     0162                     l226:
  2910     0162  0008               	return
  2911     0163                     __end_of___wmul:
  2912                           
  2913                           	psect	text11
  2914     006D                     __ptext11:	
  2915 ;; *************** function _PortBInit *****************
  2916 ;; Defined at:
  2917 ;;		line 13 in file "portsinit.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		status,2
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944     006D                     _PortBInit:	
  2945                           ;psect for function _PortBInit
  2946                           
  2947     006D                     l1518:	
  2948                           ;incstack = 0
  2949                           ; Regs used in _PortBInit: [status,2]
  2950                           
  2951                           
  2952                           ;portsinit.c: 14:     TRISB = 0x00;
  2953     006D  1683               	bsf	3,5	;RP0=1, select bank1
  2954     006E  1303               	bcf	3,6	;RP1=0, select bank1
  2955     006F  0186               	clrf	6	;volatile
  2956                           
  2957                           ;portsinit.c: 15:     PORTB = 0x00;
  2958     0070  1283               	bcf	3,5	;RP0=0, select bank0
  2959     0071  1303               	bcf	3,6	;RP1=0, select bank0
  2960     0072  0186               	clrf	6	;volatile
  2961     0073                     l61:
  2962     0073  0008               	return
  2963     0074                     __end_of_PortBInit:
  2964                           
  2965                           	psect	text12
  2966     0163                     __ptext12:	
  2967 ;; *************** function _MatrixInit *****************
  2968 ;; Defined at:
  2969 ;;		line 20 in file "matrix.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0
  2985 ;;      Temps:          3       0       0       0       0
  2986 ;;      Totals:         3       0       0       0       0
  2987 ;;Total ram usage:        3 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 3
  2990 ;; This function calls:
  2991 ;;		_SendToSegment
  2992 ;;		_SpiClearMatrix
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998     0163                     _MatrixInit:	
  2999                           ;psect for function _MatrixInit
  3000                           
  3001     0163                     l1504:	
  3002                           ;incstack = 0
  3003                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  3004                           
  3005                           
  3006                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  3007     0163  3003               	movlw	3
  3008     0164  00F9               	movwf	??_MatrixInit+2
  3009     0165  3008               	movlw	8
  3010     0166  00F8               	movwf	??_MatrixInit+1
  3011     0167  3077               	movlw	119
  3012     0168  00F7               	movwf	??_MatrixInit
  3013     0169                     u917:
  3014     0169  0BF7               	decfsz	??_MatrixInit,f
  3015     016A  2969               	goto	u917
  3016     016B  0BF8               	decfsz	??_MatrixInit+1,f
  3017     016C  2969               	goto	u917
  3018     016D  0BF9               	decfsz	??_MatrixInit+2,f
  3019     016E  2969               	goto	u917
  3020     016F                     l1506:
  3021                           
  3022                           ;matrix.c: 22:     RA5=1;
  3023     016F  1283               	bcf	3,5	;RP0=0, select bank0
  3024     0170  1303               	bcf	3,6	;RP1=0, select bank0
  3025     0171  1685               	bsf	5,5	;volatile
  3026     0172                     l1508:
  3027                           
  3028                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  3029     0172  3009               	movlw	9
  3030     0173  00F1               	movwf	SendToSegment@segment
  3031     0174  3000               	movlw	0
  3032     0175  00F2               	movwf	SendToSegment@segment+1
  3033     0176  01F3               	clrf	SendToSegment@data
  3034     0177  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3035     017C                     l1510:
  3036                           
  3037                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  3038     017C  300B               	movlw	11
  3039     017D  00F1               	movwf	SendToSegment@segment
  3040     017E  3000               	movlw	0
  3041     017F  00F2               	movwf	SendToSegment@segment+1
  3042     0180  3007               	movlw	7
  3043     0181  00F3               	movwf	SendToSegment@data
  3044     0182  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3045     0187                     l1512:
  3046                           
  3047                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  3048     0187  300A               	movlw	10
  3049     0188  00F1               	movwf	SendToSegment@segment
  3050     0189  3000               	movlw	0
  3051     018A  00F2               	movwf	SendToSegment@segment+1
  3052     018B  3002               	movlw	2
  3053     018C  00F3               	movwf	SendToSegment@data
  3054     018D  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3055     0192                     l1514:
  3056                           
  3057                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  3058     0192  300C               	movlw	12
  3059     0193  00F1               	movwf	SendToSegment@segment
  3060     0194  3000               	movlw	0
  3061     0195  00F2               	movwf	SendToSegment@segment+1
  3062     0196  01F3               	clrf	SendToSegment@data
  3063     0197  0AF3               	incf	SendToSegment@data,f
  3064     0198  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3065     019D                     l1516:
  3066                           
  3067                           ;matrix.c: 27:     SpiClearMatrix();
  3068     019D  120A  118A  20D3  120A  118A  	fcall	_SpiClearMatrix
  3069     01A2                     l100:
  3070     01A2  0008               	return
  3071     01A3                     __end_of_MatrixInit:
  3072                           
  3073                           	psect	text13
  3074     035F                     __ptext13:	
  3075 ;; *************** function _ChangeOfCoordinates *****************
  3076 ;; Defined at:
  3077 ;;		line 19 in file "main.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  _shapePositi    2   12[BANK0 ] PTR struct .
  3080 ;;		 -> main@shapePosition(4), 
  3081 ;;  _figure         1   14[BANK0 ] PTR unsigned char 
  3082 ;;		 -> main@square_1(3), 
  3083 ;;  _countElemnt    2   15[BANK0 ] int 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  i               2   22[BANK0 ] int 
  3086 ;;  step            2   20[BANK0 ] int 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       5       0       0       0
  3097 ;;      Locals:         0       4       0       0       0
  3098 ;;      Temps:          0       3       0       0       0
  3099 ;;      Totals:         0      12       0       0       0
  3100 ;;Total ram usage:       12 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 4
  3103 ;; This function calls:
  3104 ;;		_MovieShape
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110     035F                     _ChangeOfCoordinates:	
  3111                           ;psect for function _ChangeOfCoordinates
  3112                           
  3113     035F                     l1426:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _ChangeOfCoordinates: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3116                           
  3117                           
  3118                           ;main.c: 20:     const unsigned long delay = 100;;main.c: 21:     int step = 0;
  3119     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3120     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3121     0361  01B4               	clrf	ChangeOfCoordinates@step
  3122     0362  01B5               	clrf	ChangeOfCoordinates@step+1
  3123     0363                     l21:	
  3124                           ;main.c: 22:         do{
  3125                           
  3126                           
  3127                           ;main.c: 23:             for(int i = 0; i < 5; i++){
  3128     0363  1283               	bcf	3,5	;RP0=0, select bank0
  3129     0364  1303               	bcf	3,6	;RP1=0, select bank0
  3130     0365  01B6               	clrf	ChangeOfCoordinates@i
  3131     0366  01B7               	clrf	ChangeOfCoordinates@i+1
  3132     0367  2BAC               	goto	l1442
  3133     0368                     l1432:
  3134                           
  3135                           ;main.c: 26:                         MovieShape(right, _shapePosition, _figure, _countEl
      +                          emntArray);
  3136     0368  082C               	movf	ChangeOfCoordinates@_shapePosition,w
  3137     0369  00A4               	movwf	MovieShape@_shapePosition
  3138     036A  082D               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3139     036B  00A5               	movwf	MovieShape@_shapePosition+1
  3140     036C  082E               	movf	ChangeOfCoordinates@_figure,w
  3141     036D  00A6               	movwf	MovieShape@shapeArray
  3142     036E  0830               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3143     036F  00A8               	movwf	MovieShape@countElemntArray+1
  3144     0370  082F               	movf	ChangeOfCoordinates@_countElemntArray,w
  3145     0371  00A7               	movwf	MovieShape@countElemntArray
  3146     0372  3003               	movlw	3
  3147     0373  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3148                           
  3149                           ;main.c: 27:                         break;
  3150     0378  2BC1               	goto	l1444
  3151     0379                     l1434:
  3152                           
  3153                           ;main.c: 29:                         MovieShape(down, _shapePosition, _figure, _countEle
      +                          mntArray);
  3154     0379  082C               	movf	ChangeOfCoordinates@_shapePosition,w
  3155     037A  00A4               	movwf	MovieShape@_shapePosition
  3156     037B  082D               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3157     037C  00A5               	movwf	MovieShape@_shapePosition+1
  3158     037D  082E               	movf	ChangeOfCoordinates@_figure,w
  3159     037E  00A6               	movwf	MovieShape@shapeArray
  3160     037F  0830               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3161     0380  00A8               	movwf	MovieShape@countElemntArray+1
  3162     0381  082F               	movf	ChangeOfCoordinates@_countElemntArray,w
  3163     0382  00A7               	movwf	MovieShape@countElemntArray
  3164     0383  3000               	movlw	0
  3165     0384  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3166                           
  3167                           ;main.c: 30:                         break;
  3168     0389  2BC1               	goto	l1444
  3169     038A                     l1436:
  3170                           
  3171                           ;main.c: 32:                         MovieShape(left, _shapePosition, _figure, _countEle
      +                          mntArray);
  3172     038A  082C               	movf	ChangeOfCoordinates@_shapePosition,w
  3173     038B  00A4               	movwf	MovieShape@_shapePosition
  3174     038C  082D               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3175     038D  00A5               	movwf	MovieShape@_shapePosition+1
  3176     038E  082E               	movf	ChangeOfCoordinates@_figure,w
  3177     038F  00A6               	movwf	MovieShape@shapeArray
  3178     0390  0830               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3179     0391  00A8               	movwf	MovieShape@countElemntArray+1
  3180     0392  082F               	movf	ChangeOfCoordinates@_countElemntArray,w
  3181     0393  00A7               	movwf	MovieShape@countElemntArray
  3182     0394  3002               	movlw	2
  3183     0395  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3184                           
  3185                           ;main.c: 33:                         break;
  3186     039A  2BC1               	goto	l1444
  3187     039B                     l1438:
  3188                           
  3189                           ;main.c: 35:                         MovieShape(up, _shapePosition, _figure, _countElemn
      +                          tArray);
  3190     039B  082C               	movf	ChangeOfCoordinates@_shapePosition,w
  3191     039C  00A4               	movwf	MovieShape@_shapePosition
  3192     039D  082D               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3193     039E  00A5               	movwf	MovieShape@_shapePosition+1
  3194     039F  082E               	movf	ChangeOfCoordinates@_figure,w
  3195     03A0  00A6               	movwf	MovieShape@shapeArray
  3196     03A1  0830               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3197     03A2  00A8               	movwf	MovieShape@countElemntArray+1
  3198     03A3  082F               	movf	ChangeOfCoordinates@_countElemntArray,w
  3199     03A4  00A7               	movwf	MovieShape@countElemntArray
  3200     03A5  3001               	movlw	1
  3201     03A6  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3202                           
  3203                           ;main.c: 36:                         break;
  3204     03AB  2BC1               	goto	l1444
  3205     03AC                     l1442:
  3206                           
  3207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3208                           ; Switch size 1, requested type "simple"
  3209                           ; Number of cases is 1, Range of values is 0 to 0
  3210                           ; switch strategies available:
  3211                           ; Name         Instructions Cycles
  3212                           ; simple_byte            4     3 (average)
  3213                           ; direct_byte           11     8 (fixed)
  3214                           ; jumptable            260     6 (fixed)
  3215                           ;	Chosen strategy is simple_byte
  3216     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3217     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3218     03AE  0835               	movf	ChangeOfCoordinates@step+1,w
  3219     03AF  3A00               	xorlw	0	; case 0
  3220     03B0  1903               	skipnz
  3221     03B1  2BB3               	goto	l1584
  3222     03B2  2BC1               	goto	l1444
  3223     03B3                     l1584:
  3224                           
  3225                           ; Switch size 1, requested type "simple"
  3226                           ; Number of cases is 4, Range of values is 0 to 3
  3227                           ; switch strategies available:
  3228                           ; Name         Instructions Cycles
  3229                           ; simple_byte           13     7 (average)
  3230                           ; direct_byte           20     8 (fixed)
  3231                           ; jumptable            260     6 (fixed)
  3232                           ;	Chosen strategy is simple_byte
  3233     03B3  0834               	movf	ChangeOfCoordinates@step,w
  3234     03B4  3A00               	xorlw	0	; case 0
  3235     03B5  1903               	skipnz
  3236     03B6  2B68               	goto	l1432
  3237     03B7  3A01               	xorlw	1	; case 1
  3238     03B8  1903               	skipnz
  3239     03B9  2B79               	goto	l1434
  3240     03BA  3A03               	xorlw	3	; case 2
  3241     03BB  1903               	skipnz
  3242     03BC  2B8A               	goto	l1436
  3243     03BD  3A01               	xorlw	1	; case 3
  3244     03BE  1903               	skipnz
  3245     03BF  2B9B               	goto	l1438
  3246     03C0  2BC1               	goto	l1444
  3247     03C1                     l1444:
  3248                           
  3249                           ;main.c: 38:                 _delay((unsigned long)((delay)*(16000000/4000.0)));
  3250     03C1  3003               	movlw	3
  3251     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3252     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3253     03C4  00B3               	movwf	??_ChangeOfCoordinates+2
  3254     03C5  3008               	movlw	8
  3255     03C6  00B2               	movwf	??_ChangeOfCoordinates+1
  3256     03C7  3076               	movlw	118
  3257     03C8  00B1               	movwf	??_ChangeOfCoordinates
  3258     03C9                     u927:
  3259     03C9  0BB1               	decfsz	??_ChangeOfCoordinates,f
  3260     03CA  2BC9               	goto	u927
  3261     03CB  0BB2               	decfsz	??_ChangeOfCoordinates+1,f
  3262     03CC  2BC9               	goto	u927
  3263     03CD  0BB3               	decfsz	??_ChangeOfCoordinates+2,f
  3264     03CE  2BC9               	goto	u927
  3265     03CF  0000               	nop
  3266                           
  3267                           ;main.c: 39:             }
  3268     03D0  3001               	movlw	1
  3269     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3270     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3271     03D3  07B6               	addwf	ChangeOfCoordinates@i,f
  3272     03D4  1803               	skipnc
  3273     03D5  0AB7               	incf	ChangeOfCoordinates@i+1,f
  3274     03D6  3000               	movlw	0
  3275     03D7  07B7               	addwf	ChangeOfCoordinates@i+1,f
  3276     03D8                     l1446:
  3277     03D8  0837               	movf	ChangeOfCoordinates@i+1,w
  3278     03D9  3A80               	xorlw	128
  3279     03DA  00FF               	movwf	btemp+1
  3280     03DB  3080               	movlw	128
  3281     03DC  027F               	subwf	btemp+1,w
  3282     03DD  1D03               	skipz
  3283     03DE  2BE1               	goto	u815
  3284     03DF  3005               	movlw	5
  3285     03E0  0236               	subwf	ChangeOfCoordinates@i,w
  3286     03E1                     u815:
  3287     03E1  1C03               	skipc
  3288     03E2  2BE4               	goto	u811
  3289     03E3  2BE5               	goto	u810
  3290     03E4                     u811:
  3291     03E4  2BAC               	goto	l1442
  3292     03E5                     u810:
  3293     03E5                     l1448:
  3294                           
  3295                           ;main.c: 40:             step++;
  3296     03E5  3001               	movlw	1
  3297     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3298     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3299     03E8  07B4               	addwf	ChangeOfCoordinates@step,f
  3300     03E9  1803               	skipnc
  3301     03EA  0AB5               	incf	ChangeOfCoordinates@step+1,f
  3302     03EB  3000               	movlw	0
  3303     03EC  07B5               	addwf	ChangeOfCoordinates@step+1,f
  3304     03ED                     l1450:
  3305                           
  3306                           ;main.c: 41:         } while(step < 4);
  3307     03ED  0835               	movf	ChangeOfCoordinates@step+1,w
  3308     03EE  3A80               	xorlw	128
  3309     03EF  00FF               	movwf	btemp+1
  3310     03F0  3080               	movlw	128
  3311     03F1  027F               	subwf	btemp+1,w
  3312     03F2  1D03               	skipz
  3313     03F3  2BF6               	goto	u825
  3314     03F4  3004               	movlw	4
  3315     03F5  0234               	subwf	ChangeOfCoordinates@step,w
  3316     03F6                     u825:
  3317     03F6  1C03               	skipc
  3318     03F7  2BF9               	goto	u821
  3319     03F8  2BFA               	goto	u820
  3320     03F9                     u821:
  3321     03F9  2B63               	goto	l21
  3322     03FA                     u820:
  3323     03FA                     l31:
  3324     03FA  0008               	return
  3325     03FB                     __end_of_ChangeOfCoordinates:
  3326                           
  3327                           	psect	text14
  3328     0282                     __ptext14:	
  3329 ;; *************** function _MovieShape *****************
  3330 ;; Defined at:
  3331 ;;		line 32 in file "shape.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  dir             1    wreg     enum E885
  3334 ;;  _shapePositi    2    4[BANK0 ] PTR struct .
  3335 ;;		 -> main@shapePosition(4), 
  3336 ;;  shapeArray      1    6[BANK0 ] PTR unsigned char 
  3337 ;;		 -> main@square_1(3), 
  3338 ;;  countElemntA    2    7[BANK0 ] int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  dir             1   11[BANK0 ] enum E885
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       5       0       0       0
  3351 ;;      Locals:         0       1       0       0       0
  3352 ;;      Temps:          0       2       0       0       0
  3353 ;;      Totals:         0       8       0       0       0
  3354 ;;Total ram usage:        8 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 3
  3357 ;; This function calls:
  3358 ;;		_MovieDown
  3359 ;;		_MovieLeft
  3360 ;;		_MovieRigth
  3361 ;;		_MovieUp
  3362 ;;		_ShowShape
  3363 ;;		_SpiClearMatrix
  3364 ;; This function is called by:
  3365 ;;		_ChangeOfCoordinates
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     0282                     _MovieShape:	
  3370                           ;psect for function _MovieShape
  3371                           
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _MovieShape: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3375                           ;MovieShape@dir stored from wreg
  3376     0282  1283               	bcf	3,5	;RP0=0, select bank0
  3377     0283  1303               	bcf	3,6	;RP1=0, select bank0
  3378     0284  00AB               	movwf	MovieShape@dir
  3379     0285                     l1362:
  3380                           
  3381                           ;shape.c: 34:     switch (dir){
  3382     0285  2AAE               	goto	l1374
  3383     0286                     l1364:
  3384                           
  3385                           ;shape.c: 36:             MovieDown(_shapePosition);
  3386     0286  0824               	movf	MovieShape@_shapePosition,w
  3387     0287  00F0               	movwf	MovieDown@_shapePosition
  3388     0288  0825               	movf	MovieShape@_shapePosition+1,w
  3389     0289  00F1               	movwf	MovieDown@_shapePosition+1
  3390     028A  120A  118A  20AD  120A  118A  	fcall	_MovieDown
  3391                           
  3392                           ;shape.c: 37:             break;
  3393     028F  2AC7               	goto	l1376
  3394     0290                     l1366:
  3395                           
  3396                           ;shape.c: 39:             MovieUp(_shapePosition);
  3397     0290  0824               	movf	MovieShape@_shapePosition,w
  3398     0291  00F0               	movwf	MovieUp@_shapePosition
  3399     0292  0825               	movf	MovieShape@_shapePosition+1,w
  3400     0293  00F1               	movwf	MovieUp@_shapePosition+1
  3401     0294  120A  118A  20E9  120A  118A  	fcall	_MovieUp
  3402                           
  3403                           ;shape.c: 40:             break;
  3404     0299  2AC7               	goto	l1376
  3405     029A                     l1368:
  3406                           
  3407                           ;shape.c: 42:             MovieLeft(_shapePosition);
  3408     029A  0824               	movf	MovieShape@_shapePosition,w
  3409     029B  00F0               	movwf	MovieLeft@_shapePosition
  3410     029C  0825               	movf	MovieShape@_shapePosition+1,w
  3411     029D  00F1               	movwf	MovieLeft@_shapePosition+1
  3412     029E  120A  118A  208A  120A  118A  	fcall	_MovieLeft
  3413                           
  3414                           ;shape.c: 43:             break;
  3415     02A3  2AC7               	goto	l1376
  3416     02A4                     l1370:
  3417                           
  3418                           ;shape.c: 45:             MovieRigth(_shapePosition);
  3419     02A4  0824               	movf	MovieShape@_shapePosition,w
  3420     02A5  00F0               	movwf	MovieRigth@_shapePosition
  3421     02A6  0825               	movf	MovieShape@_shapePosition+1,w
  3422     02A7  00F1               	movwf	MovieRigth@_shapePosition+1
  3423     02A8  120A  118A  2074  120A  118A  	fcall	_MovieRigth
  3424                           
  3425                           ;shape.c: 46:             break;
  3426     02AD  2AC7               	goto	l1376
  3427     02AE                     l1374:
  3428     02AE  082B               	movf	MovieShape@dir,w
  3429     02AF  00A9               	movwf	??_MovieShape
  3430     02B0  01AA               	clrf	??_MovieShape+1
  3431                           
  3432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3433                           ; Switch size 1, requested type "simple"
  3434                           ; Number of cases is 1, Range of values is 0 to 0
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte            4     3 (average)
  3438                           ; direct_byte           11     8 (fixed)
  3439                           ; jumptable            260     6 (fixed)
  3440                           ;	Chosen strategy is simple_byte
  3441     02B1  082A               	movf	??_MovieShape+1,w
  3442     02B2  3A00               	xorlw	0	; case 0
  3443     02B3  1903               	skipnz
  3444     02B4  2AB6               	goto	l1586
  3445     02B5  2AC7               	goto	l1376
  3446     02B6                     l1586:
  3447                           
  3448                           ; Switch size 1, requested type "simple"
  3449                           ; Number of cases is 5, Range of values is 0 to 4
  3450                           ; switch strategies available:
  3451                           ; Name         Instructions Cycles
  3452                           ; simple_byte           16     9 (average)
  3453                           ; direct_byte           23     8 (fixed)
  3454                           ; jumptable            260     6 (fixed)
  3455                           ;	Chosen strategy is simple_byte
  3456     02B6  0829               	movf	??_MovieShape,w
  3457     02B7  3A00               	xorlw	0	; case 0
  3458     02B8  1903               	skipnz
  3459     02B9  2A86               	goto	l1364
  3460     02BA  3A01               	xorlw	1	; case 1
  3461     02BB  1903               	skipnz
  3462     02BC  2A90               	goto	l1366
  3463     02BD  3A03               	xorlw	3	; case 2
  3464     02BE  1903               	skipnz
  3465     02BF  2A9A               	goto	l1368
  3466     02C0  3A01               	xorlw	1	; case 3
  3467     02C1  1903               	skipnz
  3468     02C2  2AA4               	goto	l1370
  3469     02C3  3A07               	xorlw	7	; case 4
  3470     02C4  1903               	skipnz
  3471     02C5  2AC7               	goto	l1376
  3472     02C6  2AC7               	goto	l1376
  3473     02C7                     l1376:
  3474                           
  3475                           ;shape.c: 51:     SpiClearMatrix();
  3476     02C7  120A  118A  20D3  120A  118A  	fcall	_SpiClearMatrix
  3477     02CC                     l1378:
  3478                           
  3479                           ;shape.c: 52:     ShowShape(_shapePosition, countElemntArray, shapeArray);
  3480     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3481     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3482     02CE  0824               	movf	MovieShape@_shapePosition,w
  3483     02CF  00F4               	movwf	ShowShape@coord
  3484     02D0  0825               	movf	MovieShape@_shapePosition+1,w
  3485     02D1  00F5               	movwf	ShowShape@coord+1
  3486     02D2  0828               	movf	MovieShape@countElemntArray+1,w
  3487     02D3  00F7               	movwf	ShowShape@countElemntArray+1
  3488     02D4  0827               	movf	MovieShape@countElemntArray,w
  3489     02D5  00F6               	movwf	ShowShape@countElemntArray
  3490     02D6  0826               	movf	MovieShape@shapeArray,w
  3491     02D7  00F8               	movwf	ShowShape@shapeArray
  3492     02D8  120A  118A  22DE  120A  118A  	fcall	_ShowShape
  3493     02DD                     l138:
  3494     02DD  0008               	return
  3495     02DE                     __end_of_MovieShape:
  3496                           
  3497                           	psect	text15
  3498     00D3                     __ptext15:	
  3499 ;; *************** function _SpiClearMatrix *****************
  3500 ;; Defined at:
  3501 ;;		line 10 in file "matrix.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  i               1    6[COMMON] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0
  3517 ;;      Temps:          2       0       0       0       0
  3518 ;;      Totals:         3       0       0       0       0
  3519 ;;Total ram usage:        3 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 2
  3522 ;; This function calls:
  3523 ;;		_SendToSegment
  3524 ;; This function is called by:
  3525 ;;		_MatrixInit
  3526 ;;		_MovieShape
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530     00D3                     _SpiClearMatrix:	
  3531                           ;psect for function _SpiClearMatrix
  3532                           
  3533     00D3                     l1262:	
  3534                           ;incstack = 0
  3535                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  3536                           
  3537                           
  3538                           ;matrix.c: 12:   char i = 8;
  3539     00D3  3008               	movlw	8
  3540     00D4  00F6               	movwf	SpiClearMatrix@i
  3541     00D5                     l1264:
  3542                           
  3543                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  3544     00D5  0876               	movf	SpiClearMatrix@i,w
  3545     00D6  00F4               	movwf	??_SpiClearMatrix
  3546     00D7  01F5               	clrf	??_SpiClearMatrix+1
  3547     00D8  0874               	movf	??_SpiClearMatrix,w
  3548     00D9  00F1               	movwf	SendToSegment@segment
  3549     00DA  0875               	movf	??_SpiClearMatrix+1,w
  3550     00DB  00F2               	movwf	SendToSegment@segment+1
  3551     00DC  01F3               	clrf	SendToSegment@data
  3552     00DD  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3553     00E2                     l1266:
  3554                           
  3555                           ;matrix.c: 16:   } while (--i);
  3556     00E2  3001               	movlw	1
  3557     00E3  02F6               	subwf	SpiClearMatrix@i,f
  3558     00E4  1D03               	btfss	3,2
  3559     00E5  28E7               	goto	u611
  3560     00E6  28E8               	goto	u610
  3561     00E7                     u611:
  3562     00E7  28D5               	goto	l1264
  3563     00E8                     u610:
  3564     00E8                     l97:
  3565     00E8  0008               	return
  3566     00E9                     __end_of_SpiClearMatrix:
  3567                           
  3568                           	psect	text16
  3569     02DE                     __ptext16:	
  3570 ;; *************** function _ShowShape *****************
  3571 ;; Defined at:
  3572 ;;		line 8 in file "shape.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  coord           2    4[COMMON] PTR struct .
  3575 ;;		 -> main@shapePosition(4), 
  3576 ;;  countElemntA    2    6[COMMON] int 
  3577 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
  3578 ;;		 -> main@square_1(3), 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  pos             2    2[BANK0 ] int 
  3581 ;;  _pos            2    0[BANK0 ] int 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         5       0       0       0       0
  3592 ;;      Locals:         0       4       0       0       0
  3593 ;;      Temps:          5       0       0       0       0
  3594 ;;      Totals:        10       4       0       0       0
  3595 ;;Total ram usage:       14 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 2
  3598 ;; This function calls:
  3599 ;;		_SendToSegment
  3600 ;; This function is called by:
  3601 ;;		_MovieShape
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     02DE                     _ShowShape:	
  3606                           ;psect for function _ShowShape
  3607                           
  3608     02DE                     l1268:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3611                           
  3612     02DE                     l1270:
  3613                           
  3614                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  3615     02DE  0874               	movf	ShowShape@coord,w
  3616     02DF  0084               	movwf	4
  3617     02E0  1783               	bsf	3,7
  3618     02E1  1C75               	btfss	ShowShape@coord+1,0
  3619     02E2  1383               	bcf	3,7
  3620     02E3  0800               	movf	0,w
  3621     02E4  00F9               	movwf	??_ShowShape
  3622     02E5  0A84               	incf	4,f
  3623     02E6  0800               	movf	0,w
  3624     02E7  00FA               	movwf	??_ShowShape+1
  3625     02E8  0879               	movf	??_ShowShape,w
  3626     02E9  3E01               	addlw	1
  3627     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3628     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3629     02EC  00A2               	movwf	ShowShape@pos
  3630     02ED  087A               	movf	??_ShowShape+1,w
  3631     02EE  1803               	skipnc
  3632     02EF  3E01               	addlw	1
  3633     02F0  3E00               	addlw	0
  3634     02F1  00A3               	movwf	ShowShape@pos+1
  3635     02F2  2B3E               	goto	l1278
  3636     02F3                     l1272:
  3637                           
  3638                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  3639     02F3  0874               	movf	ShowShape@coord,w
  3640     02F4  0084               	movwf	4
  3641     02F5  1783               	bsf	3,7
  3642     02F6  1C75               	btfss	ShowShape@coord+1,0
  3643     02F7  1383               	bcf	3,7
  3644     02F8  0800               	movf	0,w
  3645     02F9  00F9               	movwf	??_ShowShape
  3646     02FA  0A84               	incf	4,f
  3647     02FB  0800               	movf	0,w
  3648     02FC  00FA               	movwf	??_ShowShape+1
  3649     02FD  0879               	movf	??_ShowShape,w
  3650     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3651     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3652     0300  0222               	subwf	ShowShape@pos,w
  3653     0301  00FB               	movwf	??_ShowShape+2
  3654     0302  087A               	movf	??_ShowShape+1,w
  3655     0303  1C03               	skipc
  3656     0304  0A7A               	incf	??_ShowShape+1,w
  3657     0305  0223               	subwf	ShowShape@pos+1,w
  3658     0306  00FC               	movwf	??_ShowShape+3
  3659     0307  087B               	movf	??_ShowShape+2,w
  3660     0308  3EFF               	addlw	255
  3661     0309  00A0               	movwf	ShowShape@_pos
  3662     030A  087C               	movf	??_ShowShape+3,w
  3663     030B  1803               	skipnc
  3664     030C  3E01               	addlw	1
  3665     030D  3EFF               	addlw	255
  3666     030E  00A1               	movwf	ShowShape@_pos+1
  3667     030F                     l1274:
  3668                           
  3669                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  3670     030F  0823               	movf	ShowShape@pos+1,w
  3671     0310  00F2               	movwf	SendToSegment@segment+1
  3672     0311  0822               	movf	ShowShape@pos,w
  3673     0312  00F1               	movwf	SendToSegment@segment
  3674     0313  0820               	movf	ShowShape@_pos,w
  3675     0314  0778               	addwf	ShowShape@shapeArray,w
  3676     0315  00F9               	movwf	??_ShowShape
  3677     0316  0879               	movf	??_ShowShape,w
  3678     0317  0084               	movwf	4
  3679     0318  1383               	bcf	3,7	;select IRP bank0
  3680     0319  0800               	movf	0,w
  3681     031A  00FA               	movwf	??_ShowShape+1
  3682     031B  0874               	movf	ShowShape@coord,w
  3683     031C  3E02               	addlw	2
  3684     031D  00FB               	movwf	??_ShowShape+2
  3685     031E  0875               	movf	ShowShape@coord+1,w
  3686     031F  1803               	skipnc
  3687     0320  3E01               	addlw	1
  3688     0321  3E00               	addlw	0
  3689     0322  00FC               	movwf	??_ShowShape+3
  3690     0323  087B               	movf	??_ShowShape+2,w
  3691     0324  0084               	movwf	4
  3692     0325  1783               	bsf	3,7
  3693     0326  1C7C               	btfss	??_ShowShape+3,0
  3694     0327  1383               	bcf	3,7
  3695     0328  0A00               	incf	0,w
  3696     0329  2B2C               	goto	u624
  3697     032A                     u625:
  3698     032A  1003               	clrc
  3699     032B  0DFA               	rlf	??_ShowShape+1,f
  3700     032C                     u624:
  3701     032C  3EFF               	addlw	-1
  3702     032D  1D03               	skipz
  3703     032E  2B2A               	goto	u625
  3704     032F  087A               	movf	??_ShowShape+1,w
  3705     0330  00F3               	movwf	SendToSegment@data
  3706     0331  120A  118A  20C0  120A  118A  	fcall	_SendToSegment
  3707     0336                     l1276:
  3708                           
  3709                           ;shape.c: 13:     }
  3710     0336  3001               	movlw	1
  3711     0337  1283               	bcf	3,5	;RP0=0, select bank0
  3712     0338  1303               	bcf	3,6	;RP1=0, select bank0
  3713     0339  07A2               	addwf	ShowShape@pos,f
  3714     033A  1803               	skipnc
  3715     033B  0AA3               	incf	ShowShape@pos+1,f
  3716     033C  3000               	movlw	0
  3717     033D  07A3               	addwf	ShowShape@pos+1,f
  3718     033E                     l1278:
  3719     033E  0874               	movf	ShowShape@coord,w
  3720     033F  0084               	movwf	4
  3721     0340  1783               	bsf	3,7
  3722     0341  1C75               	btfss	ShowShape@coord+1,0
  3723     0342  1383               	bcf	3,7
  3724     0343  0800               	movf	0,w
  3725     0344  00F9               	movwf	??_ShowShape
  3726     0345  0A84               	incf	4,f
  3727     0346  0800               	movf	0,w
  3728     0347  00FA               	movwf	??_ShowShape+1
  3729     0348  0876               	movf	ShowShape@countElemntArray,w
  3730     0349  0779               	addwf	??_ShowShape,w
  3731     034A  00FB               	movwf	??_ShowShape+2
  3732     034B  0877               	movf	ShowShape@countElemntArray+1,w
  3733     034C  1803               	skipnc
  3734     034D  0A77               	incf	ShowShape@countElemntArray+1,w
  3735     034E  077A               	addwf	??_ShowShape+1,w
  3736     034F  00FC               	movwf	??_ShowShape+3
  3737     0350  087C               	movf	??_ShowShape+3,w
  3738     0351  3A80               	xorlw	128
  3739     0352  00FD               	movwf	??_ShowShape+4
  3740     0353  0823               	movf	ShowShape@pos+1,w
  3741     0354  3A80               	xorlw	128
  3742     0355  027D               	subwf	??_ShowShape+4,w
  3743     0356  1D03               	skipz
  3744     0357  2B5A               	goto	u635
  3745     0358  0822               	movf	ShowShape@pos,w
  3746     0359  027B               	subwf	??_ShowShape+2,w
  3747     035A                     u635:
  3748     035A  1803               	skipnc
  3749     035B  2B5D               	goto	u631
  3750     035C  2B5E               	goto	u630
  3751     035D                     u631:
  3752     035D  2AF3               	goto	l1272
  3753     035E                     u630:
  3754     035E                     l116:
  3755     035E  0008               	return
  3756     035F                     __end_of_ShowShape:
  3757                           
  3758                           	psect	text17
  3759     00C0                     __ptext17:	
  3760 ;; *************** function _SendToSegment *****************
  3761 ;; Defined at:
  3762 ;;		line 34 in file "matrix.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  segment         2    1[COMMON] int 
  3765 ;;  data            1    3[COMMON] unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         3       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         3       0       0       0       0
  3781 ;;Total ram usage:        3 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 1
  3784 ;; This function calls:
  3785 ;;		_SpiSendByte
  3786 ;; This function is called by:
  3787 ;;		_SpiClearMatrix
  3788 ;;		_MatrixInit
  3789 ;;		_ShowShape
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793     00C0                     _SendToSegment:	
  3794                           ;psect for function _SendToSegment
  3795                           
  3796     00C0                     l1170:	
  3797                           ;incstack = 0
  3798                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  3799                           
  3800                           
  3801                           ;matrix.c: 35:     RA5 = 0;
  3802     00C0  1283               	bcf	3,5	;RP0=0, select bank0
  3803     00C1  1303               	bcf	3,6	;RP1=0, select bank0
  3804     00C2  1285               	bcf	5,5	;volatile
  3805     00C3                     l1172:
  3806                           
  3807                           ;matrix.c: 36:     SpiSendByte((char)segment);
  3808     00C3  0871               	movf	SendToSegment@segment,w
  3809     00C4  120A  118A  207F  120A  118A  	fcall	_SpiSendByte
  3810                           
  3811                           ;matrix.c: 37:     SpiSendByte(data);
  3812     00C9  0873               	movf	SendToSegment@data,w
  3813     00CA  120A  118A  207F  120A  118A  	fcall	_SpiSendByte
  3814     00CF                     l1174:
  3815                           
  3816                           ;matrix.c: 38:     RA5 = 1;
  3817     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  3818     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  3819     00D1  1685               	bsf	5,5	;volatile
  3820     00D2                     l103:
  3821     00D2  0008               	return
  3822     00D3                     __end_of_SendToSegment:
  3823                           
  3824                           	psect	text18
  3825     007F                     __ptext18:	
  3826 ;; *************** function _SpiSendByte *****************
  3827 ;; Defined at:
  3828 ;;		line 18 in file "spi.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  data            1    wreg     unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  data            1    0[COMMON] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         0       0       0       0       0
  3843 ;;      Locals:         1       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0
  3845 ;;      Totals:         1       0       0       0       0
  3846 ;;Total ram usage:        1 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_SendToSegment
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855     007F                     _SpiSendByte:	
  3856                           ;psect for function _SpiSendByte
  3857                           
  3858                           
  3859                           ;incstack = 0
  3860                           ; Regs used in _SpiSendByte: [wreg]
  3861                           ;SpiSendByte@data stored from wreg
  3862     007F  00F0               	movwf	SpiSendByte@data
  3863     0080                     l1168:
  3864                           
  3865                           ;spi.c: 19:     SSPBUF = data;
  3866     0080  0870               	movf	SpiSendByte@data,w
  3867     0081  1283               	bcf	3,5	;RP0=0, select bank0
  3868     0082  1303               	bcf	3,6	;RP1=0, select bank0
  3869     0083  0093               	movwf	19	;volatile
  3870     0084                     l81:	
  3871                           ;spi.c: 20:     while (!SSPIF);
  3872                           
  3873     0084  1D8C               	btfss	12,3	;volatile
  3874     0085  2887               	goto	u461
  3875     0086  2888               	goto	u460
  3876     0087                     u461:
  3877     0087  2884               	goto	l81
  3878     0088                     u460:
  3879     0088                     l83:
  3880                           
  3881                           ;spi.c: 21:     SSPIF = 0;
  3882     0088  118C               	bcf	12,3	;volatile
  3883     0089                     l84:
  3884     0089  0008               	return
  3885     008A                     __end_of_SpiSendByte:
  3886                           
  3887                           	psect	text19
  3888     00E9                     __ptext19:	
  3889 ;; *************** function _MovieUp *****************
  3890 ;; Defined at:
  3891 ;;		line 20 in file "shape.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3894 ;;		 -> main@shapePosition(4), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         2       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0
  3908 ;;      Temps:          2       0       0       0       0
  3909 ;;      Totals:         4       0       0       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_MovieShape
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919     00E9                     _MovieUp:	
  3920                           ;psect for function _MovieUp
  3921                           
  3922     00E9                     l1282:	
  3923                           ;incstack = 0
  3924                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3925                           
  3926                           
  3927                           ;shape.c: 21:     _shapePosition->y--;
  3928     00E9  0870               	movf	MovieUp@_shapePosition,w
  3929     00EA  3E02               	addlw	2
  3930     00EB  00F2               	movwf	??_MovieUp
  3931     00EC  0871               	movf	MovieUp@_shapePosition+1,w
  3932     00ED  1803               	skipnc
  3933     00EE  3E01               	addlw	1
  3934     00EF  3E00               	addlw	0
  3935     00F0  00F3               	movwf	??_MovieUp+1
  3936     00F1  0872               	movf	??_MovieUp,w
  3937     00F2  0084               	movwf	4
  3938     00F3  1783               	bsf	3,7
  3939     00F4  1C73               	btfss	??_MovieUp+1,0
  3940     00F5  1383               	bcf	3,7
  3941     00F6  30FF               	movlw	255
  3942     00F7  0780               	addwf	0,f
  3943     00F8  0F84               	incfsz	4,f
  3944     00F9  0800               	movf	0,w
  3945     00FA  1803               	skipnc
  3946     00FB  0A00               	incf	0,w
  3947     00FC  00FF               	movwf	btemp+1
  3948     00FD  30FF               	movlw	255
  3949     00FE  077F               	addwf	btemp+1,w
  3950     00FF  0080               	movwf	0
  3951     0100  0384               	decf	4,f
  3952     0101                     l122:
  3953     0101  0008               	return
  3954     0102                     __end_of_MovieUp:
  3955                           
  3956                           	psect	text20
  3957     0074                     __ptext20:	
  3958 ;; *************** function _MovieRigth *****************
  3959 ;; Defined at:
  3960 ;;		line 28 in file "shape.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3963 ;;		 -> main@shapePosition(4), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         2       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         2       0       0       0       0
  3979 ;;Total ram usage:        2 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_MovieShape
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988     0074                     _MovieRigth:	
  3989                           ;psect for function _MovieRigth
  3990                           
  3991     0074                     l1286:	
  3992                           ;incstack = 0
  3993                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  3994                           
  3995                           
  3996                           ;shape.c: 29:     _shapePosition->x++;
  3997     0074  0870               	movf	MovieRigth@_shapePosition,w
  3998     0075  0084               	movwf	4
  3999     0076  1783               	bsf	3,7
  4000     0077  1C71               	btfss	MovieRigth@_shapePosition+1,0
  4001     0078  1383               	bcf	3,7
  4002     0079  3001               	movlw	1
  4003     007A  0780               	addwf	0,f
  4004     007B  0A84               	incf	4,f
  4005     007C  1803               	skipnc
  4006     007D  0A80               	incf	0,f
  4007     007E                     l128:
  4008     007E  0008               	return
  4009     007F                     __end_of_MovieRigth:
  4010                           
  4011                           	psect	text21
  4012     008A                     __ptext21:	
  4013 ;; *************** function _MovieLeft *****************
  4014 ;; Defined at:
  4015 ;;		line 24 in file "shape.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4018 ;;		 -> main@shapePosition(4), 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr0l, fsr0h, btemp+1
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         2       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0
  4033 ;;      Totals:         2       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_MovieShape
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043     008A                     _MovieLeft:	
  4044                           ;psect for function _MovieLeft
  4045                           
  4046     008A                     l1284:	
  4047                           ;incstack = 0
  4048                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  4049                           
  4050                           
  4051                           ;shape.c: 25:     _shapePosition->x--;
  4052     008A  0870               	movf	MovieLeft@_shapePosition,w
  4053     008B  0084               	movwf	4
  4054     008C  1783               	bsf	3,7
  4055     008D  1C71               	btfss	MovieLeft@_shapePosition+1,0
  4056     008E  1383               	bcf	3,7
  4057     008F  30FF               	movlw	255
  4058     0090  0780               	addwf	0,f
  4059     0091  0F84               	incfsz	4,f
  4060     0092  0800               	movf	0,w
  4061     0093  1803               	skipnc
  4062     0094  0A00               	incf	0,w
  4063     0095  00FF               	movwf	btemp+1
  4064     0096  30FF               	movlw	255
  4065     0097  077F               	addwf	btemp+1,w
  4066     0098  0080               	movwf	0
  4067     0099  0384               	decf	4,f
  4068     009A                     l125:
  4069     009A  0008               	return
  4070     009B                     __end_of_MovieLeft:
  4071                           
  4072                           	psect	text22
  4073     00AD                     __ptext22:	
  4074 ;; *************** function _MovieDown *****************
  4075 ;; Defined at:
  4076 ;;		line 16 in file "shape.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4079 ;;		 -> main@shapePosition(4), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         2       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0
  4093 ;;      Temps:          2       0       0       0       0
  4094 ;;      Totals:         4       0       0       0       0
  4095 ;;Total ram usage:        4 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_MovieShape
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104     00AD                     _MovieDown:	
  4105                           ;psect for function _MovieDown
  4106                           
  4107     00AD                     l1280:	
  4108                           ;incstack = 0
  4109                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  4110                           
  4111                           
  4112                           ;shape.c: 17:     _shapePosition->y++;
  4113     00AD  0870               	movf	MovieDown@_shapePosition,w
  4114     00AE  3E02               	addlw	2
  4115     00AF  00F2               	movwf	??_MovieDown
  4116     00B0  0871               	movf	MovieDown@_shapePosition+1,w
  4117     00B1  1803               	skipnc
  4118     00B2  3E01               	addlw	1
  4119     00B3  3E00               	addlw	0
  4120     00B4  00F3               	movwf	??_MovieDown+1
  4121     00B5  0872               	movf	??_MovieDown,w
  4122     00B6  0084               	movwf	4
  4123     00B7  1783               	bsf	3,7
  4124     00B8  1C73               	btfss	??_MovieDown+1,0
  4125     00B9  1383               	bcf	3,7
  4126     00BA  3001               	movlw	1
  4127     00BB  0780               	addwf	0,f
  4128     00BC  0A84               	incf	4,f
  4129     00BD  1803               	skipnc
  4130     00BE  0A80               	incf	0,f
  4131     00BF                     l119:
  4132     00BF  0008               	return
  4133     00C0                     __end_of_MovieDown:
  4134     0002                     ___latbits      equ	2
  4135     007E                     btemp           set	126	;btemp
  4136     007E                     wtemp0          set	126
  4137                           
  4138                           	psect	config
  4139                           
  4140                           ;Config register CONFIG @ 0x2007
  4141                           ;	Oscillator Selection bits
  4142                           ;	FOSC = HS, HS oscillator
  4143                           ;	Watchdog Timer Enable bit
  4144                           ;	WDTE = OFF, WDT disabled
  4145                           ;	Power-up Timer Enable bit
  4146                           ;	PWRTE = OFF, PWRT disabled
  4147                           ;	FLASH Program Memory Code Protection bits
  4148                           ;	CP = OFF, Code protection off
  4149                           ;	Brown-out Reset Enable bit
  4150                           ;	BOREN = OFF, BOR disabled
  4151                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  4152                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4153                           ;	Data EE Memory Code Protection
  4154                           ;	CPD = OFF, Code Protection off
  4155                           ;	FLASH Program Memory Write Enable
  4156                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  4157                           ;	In-Circuit Debugger Mode bit
  4158                           ;	DEBUG = 0x1, unprogrammed default
  4159     2007                     	org	8199
  4160     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    8
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    calloc@new_ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    ChangeOfCoordinates@_figure	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ChangeOfCoordinates@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    Rotate@array_	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@res	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    S644$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    SetPosition@position	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__calloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _calloc->_memset
    _memset->___wmul
    _malloc->___simple_search_fl
    _MatrixInit->_SpiClearMatrix
    _MovieShape->_ShowShape
    _SpiClearMatrix->_SendToSegment
    _ShowShape->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_Rotate
    _Rotate->_calloc
    _calloc->_malloc
    _malloc->___simple_search_fl
    _ChangeOfCoordinates->_MovieShape
    _MovieShape->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4123
                                             50 BANK0      9     9      0
                _ChangeOfCoordinates
                         _MatrixInit
                          _PortBInit
                             _Rotate
                        _SetPosition
                            _SpiInit
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPosition                                          8     2      6      91
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _Rotate                                              20    17      3    2575
                                             30 BANK0     20    17      3
                             _calloc
                               _free
 ---------------------------------------------------------------------------------
 (2) _free                                                12    10      2     289
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (2) _calloc                                               6     2      4    1813
                                             24 BANK0      6     2      4
                             ___wmul
                             _malloc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6      99
                                              6 COMMON     8     2      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _malloc                                              14    12      2    1461
                                              8 COMMON     4     2      2
                                             14 BANK0     10    10      0
                      ___expand_heap
                 ___simple_search_fl
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___simple_search_fl                                  22    20      2     827
                                              0 COMMON     8     6      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (4) ___expand_heap                                        5     4      1     136
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _ChangeOfCoordinates                                 12     7      5    1088
                                             12 BANK0     12     7      5
                         _MovieShape
 ---------------------------------------------------------------------------------
 (2) _MovieShape                                           8     3      5     729
                                              4 BANK0      8     3      5
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _ShowShape
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (2) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _ShowShape                                           14     9      5     312
                                              4 COMMON    10     5      5
                                              0 BANK0      4     4      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (4) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeOfCoordinates
     _MovieShape
       _MovieDown
       _MovieLeft
       _MovieRigth
       _MovieUp
       _ShowShape
         _SendToSegment
           _SpiSendByte
       _SpiClearMatrix
         _SendToSegment
   _MatrixInit
     _SendToSegment
     _SpiClearMatrix
   _PortBInit
   _Rotate
     _calloc
       ___wmul
       _malloc
         ___expand_heap
         ___simple_search_fl
         ___wmul (ARG)
       _memset
         ___wmul (ARG)
     _free
   _SetPosition
   _SpiInit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     59      76     95.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      90      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 18 08:55:41 2024

                      _SpiClearMatrix 00D3                                     pc 0002  
                                  l21 0363                                    l31 03FA  
                                  l42 0567                                    l61 0073  
                                  l81 0084                                    l83 0088  
                                  l84 0089                                    l78 00AC  
                                  l97 00E8                                    fsr 0004  
                 ___wmul@multiplicand 0072                       SpiSendByte@data 0070  
                                 l100 01A2                                   l110 011E  
                                 l103 00D2                                   l122 0101  
                                 l116 035E                                   l125 009A  
                                 l119 00BF                                   l128 007E  
                                 l224 014A                                   l138 02DD  
                                 l226 0162                                   l702 0709  
                                 l711 0655                                   l705 07B2  
                                 l731 040B                                   l735 04AA  
                                 l753 01FF                                   l737 0487  
                                 l739 0480                                   l764 013D  
                                 l758 0235                                   l694 07DB  
                                 l688 01EA                                   _RA5 002D  
                                 u500 06DC                                   u501 06DB  
                                 u510 06E2                                   u511 06E1  
                                 u600 0226                                   u520 0700  
                                 u601 0225                                   u521 06FF  
                                 u505 06D8                                   u610 00E8  
                                 u530 0726                                   u611 00E7  
                                 u531 0725                                   u460 0088  
                                 u540 072C                                   u700 0428  
                                 u461 0087                                   u605 0222  
                                 u541 072B                                   u525 06FC  
                                 u701 0427                                   u630 035E  
                                 u550 075A                                   u470 0664  
                                 u710 0444                                   u631 035D  
                                 u551 0759                                   u471 0663  
                                 u711 0443                                   u624 032C  
                                 u640 0144                                   u560 07BC  
                                 u480 0680                                   u720 0456  
                                 u800 060E                                   u625 032A  
                                 u641 0143                                   u561 07BB  
                                 u481 067F                                   u721 0455  
                                 u801 060D                                   u810 03E5  
                                 u570 01FB                                   u490 0686  
                                 u730 0471                                   u635 035A  
                                 u811 03E4                                   u571 01FA  
                                 u491 0685                                   u731 0470  
                                 u820 03FA                                   u580 0208  
                                 u740 047C                                   u900 055C  
                                 u821 03F9                                   u581 0207  
                                 u565 07B8                                   u485 067C  
                                 u741 047B                                   u725 0452  
                                 u805 060A                                   u901 055B  
                                 u670 015E                                   u590 021C  
                                 u750 013D                                   u830 04C6  
                                 u815 03E1                                   u671 015D  
                                 u655 014B                                   u591 021B  
                                 u751 013C                                   u831 04C5  
                                 u680 0405                                   u760 01C7  
                                 u840 04D2                                   u825 03F6  
                                 u665 0152                                   u745 0478  
                                 u681 0404                                   u761 01C6  
                                 u905 0558                                   u841 04D1  
                                 u690 0414                                   u770 0572  
                                 u850 04E1                                   u691 0413  
                                 u771 0571                                   u851 04E0  
                                 u780 0588                                   u917 0169  
                                 u781 0587                                   u790 059E  
                                 u927 03C9                                   u791 059D  
                                 u880 0507                                   u864 04EE  
                                 u865 04EC                                   u890 0535  
                                 u874 04F8                                   u795 059A  
                                 u875 04F6                                   fsr0 0004  
                                 indf 0000                                  l1200 06DC  
                                l1202 06E2                                  l1210 0720  
                                l1220 077E                                  l1212 0726  
                                l1230 07D3                                  l1222 079C  
                                l1214 072C                                  l1206 0701  
                                l1310 0419                                  l1302 03FB  
                                l1240 01F3                                  l1224 07AE  
                                l1216 075A                                  l1208 070D  
                                l1320 042F                                  l1312 0428  
                                l1304 03FF                                  l1400 0573  
                                l1170 00C0                                  l1250 021C  
                                l1242 01FB                                  l1226 07BC  
                                l1218 0774                                  l1330 046B  
                                l1322 043E                                  l1314 042C  
                                l1306 0405                                  l1402 0588  
                                l1172 00C3                                  l1252 0226  
                                l1244 0208                                  l1228 07C1  
                                l1180 0664                                  l1340 048B  
                                l1324 0444                                  l1308 0414  
                                l1420 0631                                  l1404 059E  
                                l1500 00A6                                  l1174 00CF  
                                l1270 02DE                                  l1262 00D3  
                                l1510 017C                                  l1254 022A  
                                l1246 020C                                  l1238 01EB  
                                l1190 0686                                  l1342 048F  
                                l1326 0456                                  l1350 04A6  
                                l1318 042F                                  l1406 05C3  
                                l1414 05EA                                  l1422 0644  
                                l1502 00A8                                  l1280 00AD  
                                l1168 0080                                  l1272 02F3  
                                l1264 00D5                                  l1432 0368  
                                l1512 0187                                  l1504 0163  
                                l1248 0213                                  l1192 06AC  
                                l1184 0667                                  l1176 0656  
                                l1344 0499                                  l1336 0472  
                                l1328 045E                                  l1360 012F  
                                l1416 060E                                  l1408 05E5  
                                l1520 0102                                  l1282 00E9  
                                l1274 030F                                  l1266 00E2  
                                l1370 02A4                                  l1362 0285  
                                l1450 03ED                                  l1434 0379  
                                l1442 03AC                                  l1426 035F  
                                l1514 0192                                  l1506 016F  
                                l1290 0140                                  l1258 022D  
                                l1194 06BF                                  l1186 066C  
                                l1178 065E                                  l1346 049D  
                                l1338 047C                                  l1354 011F  
                                l1522 010C                                  l1530 0260  
                                l1284 008A                                  l1276 0336  
                                l1268 02DE                                  l1364 0286  
                                l1436 038A                                  l1444 03C1  
                                l1516 019D                                  l1508 0172  
                                l1292 0144                                  l1188 0680  
                                l1348 04A1                                  l1356 0124  
                                l1460 04C6                                  l1532 026D  
                                l1524 0236                                  l1286 0074  
                                l1278 033E                                  l1366 0290  
                                l1374 02AE                                  l1446 03D8  
                                l1438 039B                                  l1518 006D  
                                l1294 0151                                  l1198 06C8  
                                l1358 012B                                  l1390 01C7  
                                l1470 04DD                                  l1462 04CE  
                                l1526 0240                                  l1368 029A  
                                l1376 02C7                                  l1448 03E5  
                                l1296 0158                                  l1288 013E  
                                l1392 01E4                                  l1456 04AB  
                                l1528 0251                                  l1378 02CC  
                                l1298 015E                                  l1386 01A3  
                                l1490 0548                                  l1482 051F  
                                l1474 04E2                                  l1466 04D3  
                                l1458 04C0                                  l1388 01C1  
                                l1396 0568                                  l1492 054E  
                                l1476 0512                                  l1468 04DB  
                                l1478 0518                                  l1486 0526  
                                l1494 055C                                  l1584 03B3  
                                l1488 0529                                  l1496 009B  
                                l1586 02B6                                  l1498 009E  
                                _brkp 005F                                  _free 0568  
                                _main 0236                                  btemp 007E  
                                start 0000                __end_of_SpiClearMatrix 00E9  
                     __end_of_MovieUp 0102                       __end_of_SpiInit 00AD  
                               ?_free 0070                                 ?_main 0070  
                 _ChangeOfCoordinates 035F                                 _PORTA 0005  
                               _PORTB 0006                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _SSPIF 0063                       SpiClearMatrix@i 0076  
                   SendToSegment@data 0073                                 _errno 0065  
                               free@c 007A                                 pclath 000A  
                    ___expand_heap@pn 0070                                 status 0003  
                               wtemp0 007E                          main@square_1 0052  
                ?_ChangeOfCoordinates 002C                       ?_SpiClearMatrix 0070  
                     __initialization 07DC                          __end_of_free 0656  
                        __end_of_main 0282                         ___expand_heap 01EB  
                          _MatrixInit 0163                                ??_free 0072  
                              ??_main 007E                         ??_SetPosition 0076  
                       calloc@new_ptr 003C                 ??_ChangeOfCoordinates 0031  
                              _SSPCON 0014                                _SSPBUF 0013  
                          _MovieShape 0282                            _MovieRigth 0074  
                MovieShape@shapeArray 0026                             ??_MovieUp 0072  
                           ??_SpiInit 0070                         ??_SpiSendByte 0070  
                              _Rotate 04AB                        ?___expand_heap 0070  
             ___simple_search_fl@best 002C               ___simple_search_fl@last 0026  
             ___simple_search_fl@next 0028                                ___wmul 013E  
                              _calloc 01A3                                _malloc 03FB  
                              _memset 011F                        ShowShape@coord 0074  
             __end_of__initialization 07FC                   __end_of_SetPosition 011F  
                          ___freelist 0067                        __pcstackCOMMON 0070  
                        __pidataBANK0 006A                           ?_MatrixInit 0070  
                 __end_of_SpiSendByte 008A     ChangeOfCoordinates@_shapePosition 002C  
ChangeOfCoordinates@_countElemntArray 002F            __end_of___simple_search_fl 07DC  
                          __pbssBANK0 005B                     __end_of_MovieLeft 009B  
                   __end_of_MovieDown 00C0              MovieShape@_shapePosition 0024  
                   __end_of_PortBInit 0074                     __end_of_ShowShape 035F  
                         ?_MovieShape 0024                     main@shapePosition 0057  
                         ?_MovieRigth 0070                       ??___expand_heap 0071  
                          __pmaintext 0236                               ?_Rotate 003E  
                             ?___wmul 0070                               ?_calloc 0038  
                             ?_malloc 0078                               ?_memset 0076  
                       MovieShape@dir 002B             ShowShape@countElemntArray 0076  
                         _SetPosition 0102                               _SSPSTAT 0094  
                          __stringtab 0003                      ??_SpiClearMatrix 0074  
                          calloc@size 003A                               _MovieUp 00E9  
                             _SpiInit 009B                         _SendToSegment 00C0  
                ___simple_search_fl@c 002A                  ___simple_search_fl@n 0070  
                         _SpiSendByte 007F                               Rotate@i 004A  
                             Rotate@x 0048                               Rotate@y 004C  
            ___simple_search_fl@split 0024                               __ptext1 009B  
                             __ptext2 0102                               __ptext3 04AB  
                             __ptext4 0568                               __ptext5 01A3  
                             __ptext6 011F                               __ptext7 03FB  
                             __ptext8 0656                               __ptext9 01EB  
             ChangeOfCoordinates@step 0034                               free@ptr 0070  
                end_of_initialization 07FC                               malloc@m 002E  
                             malloc@n 0078                               malloc@p 0034  
              ___expand_heap@new_brkp 0073                               memset@c 0078  
                             memset@n 007A                               memset@p 007C  
                      ?_SendToSegment 0071                     __end_ofmain@delay 000D  
                 SetPosition@position 0070           __end_of_ChangeOfCoordinates 03FB  
             MovieLeft@_shapePosition 0070            ChangeOfCoordinates@_figure 002E  
                      __end_of_Rotate 0568                        __end_of___wmul 0163  
                        ??_MatrixInit 0077                        __end_of_calloc 01EB  
                      __end_of_malloc 04AB                        __end_of_memset 013E  
                     ___expand_heap@n 0071                   start_initialization 07DC  
                          malloc@lock 005B                            malloc@size 0032  
                  __end_of_MatrixInit 01A3                       ??_SendToSegment 0074  
                        ??_MovieShape 0029                          ??_MovieRigth 0072  
                           _MovieLeft 008A                             _MovieDown 00AD  
                  ___simple_search_fl 0656                             _PortBInit 006D  
                            ??_Rotate 0041                             _ShowShape 02DE  
        ___simple_search_fl@best_last 0022                              ??___wmul 0074  
                            ??_calloc 007E                           __pdataBANK0 0069  
                            ??_malloc 007A                              ??_memset 007C  
                 ?___simple_search_fl 0070                            memset@dest 0076  
                       ShowShape@_pos 0020                          SetPosition@x 0072  
                        SetPosition@y 0074                             Rotate@res 004E  
                           ___heap_hi 0170                             ___heap_lo 0110  
                           ___latbits 0002                         __pcstackBANK0 0020  
                  __end_of_MovieShape 02DE                    __end_of_MovieRigth 007F  
                        ?_SetPosition 0070                  main@countElemntArray 0055  
                 ShowShape@shapeArray 0078                  ??___simple_search_fl 0072  
                          ?_MovieLeft 0070                            ?_MovieDown 0070  
                            ?_MovieUp 0070                              ?_SpiInit 0070  
                          ?_PortBInit 0070                 __end_of___expand_heap 0236  
                        ?_SpiSendByte 0070                            ?_ShowShape 0074  
                           __pstrings 0003               MovieDown@_shapePosition 0070  
    __end_ofChangeOfCoordinates@delay 0011                 MovieUp@_shapePosition 0070  
                      ___wmul@product 0074                           __stringbase 0008  
                   ___wmul@multiplier 0070                             main@delay 0009  
                           malloc@end 0061                             malloc@cur 0063  
                           malloc@new 0036                           ??_MovieLeft 0072  
                         ??_MovieDown 0072                           calloc@nmemb 0038  
                         ??_PortBInit 0070                           ??_ShowShape 0079  
                        ShowShape@pos 0022                              Rotate@_i 0050  
                  __end_of__stringtab 0009                              __ptext10 013E  
                            __ptext11 006D                              __ptext20 0074  
                            __ptext12 0163                              __ptext21 008A  
                            __ptext13 035F                              __ptext22 00AD  
                            __ptext14 0282                              __ptext15 00D3  
                            __ptext16 02DE                              __ptext17 00C0  
                            __ptext18 007F                              __ptext19 00E9  
            ChangeOfCoordinates@delay 000D                              main@F929 0069  
                SendToSegment@segment 0071                              free@cptr 0078  
                            malloc@sz 0030     ___simple_search_fl@remaining_size 0020  
                ChangeOfCoordinates@i 0036                             stringcode 0003  
               __end_of_SendToSegment 00D3              MovieRigth@_shapePosition 0070  
          MovieShape@countElemntArray 0027                              stringdir 0003  
                            stringtab 0003                          Rotate@array_ 003E  
                        Rotate@length 003F  
