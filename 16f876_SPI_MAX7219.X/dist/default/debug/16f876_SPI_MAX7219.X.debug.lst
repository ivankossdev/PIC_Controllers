

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 18 17:16:56 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F876 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008D                     PIE2            equ	141	;# 
   120     008E                     PCON            equ	142	;# 
   121     0091                     SSPCON2         equ	145	;# 
   122     0092                     PR2             equ	146	;# 
   123     0093                     SSPADD          equ	147	;# 
   124     0094                     SSPSTAT         equ	148	;# 
   125     0098                     TXSTA           equ	152	;# 
   126     0099                     SPBRG           equ	153	;# 
   127     009E                     ADRESL          equ	158	;# 
   128     009F                     ADCON1          equ	159	;# 
   129     010C                     EEDATA          equ	268	;# 
   130     010D                     EEADR           equ	269	;# 
   131     010E                     EEDATH          equ	270	;# 
   132     010F                     EEADRH          equ	271	;# 
   133     018C                     EECON1          equ	396	;# 
   134     018D                     EECON2          equ	397	;# 
   135     0000                     INDF            equ	0	;# 
   136     0001                     TMR0            equ	1	;# 
   137     0002                     PCL             equ	2	;# 
   138     0003                     STATUS          equ	3	;# 
   139     0004                     FSR             equ	4	;# 
   140     0005                     PORTA           equ	5	;# 
   141     0006                     PORTB           equ	6	;# 
   142     0007                     PORTC           equ	7	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     008C                     PIE1            equ	140	;# 
   173     008D                     PIE2            equ	141	;# 
   174     008E                     PCON            equ	142	;# 
   175     0091                     SSPCON2         equ	145	;# 
   176     0092                     PR2             equ	146	;# 
   177     0093                     SSPADD          equ	147	;# 
   178     0094                     SSPSTAT         equ	148	;# 
   179     0098                     TXSTA           equ	152	;# 
   180     0099                     SPBRG           equ	153	;# 
   181     009E                     ADRESL          equ	158	;# 
   182     009F                     ADCON1          equ	159	;# 
   183     010C                     EEDATA          equ	268	;# 
   184     010D                     EEADR           equ	269	;# 
   185     010E                     EEDATH          equ	270	;# 
   186     010F                     EEADRH          equ	271	;# 
   187     018C                     EECON1          equ	396	;# 
   188     018D                     EECON2          equ	397	;# 
   189     0000                     INDF            equ	0	;# 
   190     0001                     TMR0            equ	1	;# 
   191     0002                     PCL             equ	2	;# 
   192     0003                     STATUS          equ	3	;# 
   193     0004                     FSR             equ	4	;# 
   194     0005                     PORTA           equ	5	;# 
   195     0006                     PORTB           equ	6	;# 
   196     0007                     PORTC           equ	7	;# 
   197     000A                     PCLATH          equ	10	;# 
   198     000B                     INTCON          equ	11	;# 
   199     000C                     PIR1            equ	12	;# 
   200     000D                     PIR2            equ	13	;# 
   201     000E                     TMR1            equ	14	;# 
   202     000E                     TMR1L           equ	14	;# 
   203     000F                     TMR1H           equ	15	;# 
   204     0010                     T1CON           equ	16	;# 
   205     0011                     TMR2            equ	17	;# 
   206     0012                     T2CON           equ	18	;# 
   207     0013                     SSPBUF          equ	19	;# 
   208     0014                     SSPCON          equ	20	;# 
   209     0015                     CCPR1           equ	21	;# 
   210     0015                     CCPR1L          equ	21	;# 
   211     0016                     CCPR1H          equ	22	;# 
   212     0017                     CCP1CON         equ	23	;# 
   213     0018                     RCSTA           equ	24	;# 
   214     0019                     TXREG           equ	25	;# 
   215     001A                     RCREG           equ	26	;# 
   216     001B                     CCPR2           equ	27	;# 
   217     001B                     CCPR2L          equ	27	;# 
   218     001C                     CCPR2H          equ	28	;# 
   219     001D                     CCP2CON         equ	29	;# 
   220     001E                     ADRESH          equ	30	;# 
   221     001F                     ADCON0          equ	31	;# 
   222     0081                     OPTION_REG      equ	129	;# 
   223     0085                     TRISA           equ	133	;# 
   224     0086                     TRISB           equ	134	;# 
   225     0087                     TRISC           equ	135	;# 
   226     008C                     PIE1            equ	140	;# 
   227     008D                     PIE2            equ	141	;# 
   228     008E                     PCON            equ	142	;# 
   229     0091                     SSPCON2         equ	145	;# 
   230     0092                     PR2             equ	146	;# 
   231     0093                     SSPADD          equ	147	;# 
   232     0094                     SSPSTAT         equ	148	;# 
   233     0098                     TXSTA           equ	152	;# 
   234     0099                     SPBRG           equ	153	;# 
   235     009E                     ADRESL          equ	158	;# 
   236     009F                     ADCON1          equ	159	;# 
   237     010C                     EEDATA          equ	268	;# 
   238     010D                     EEADR           equ	269	;# 
   239     010E                     EEDATH          equ	270	;# 
   240     010F                     EEADRH          equ	271	;# 
   241     018C                     EECON1          equ	396	;# 
   242     018D                     EECON2          equ	397	;# 
   243     0000                     INDF            equ	0	;# 
   244     0001                     TMR0            equ	1	;# 
   245     0002                     PCL             equ	2	;# 
   246     0003                     STATUS          equ	3	;# 
   247     0004                     FSR             equ	4	;# 
   248     0005                     PORTA           equ	5	;# 
   249     0006                     PORTB           equ	6	;# 
   250     0007                     PORTC           equ	7	;# 
   251     000A                     PCLATH          equ	10	;# 
   252     000B                     INTCON          equ	11	;# 
   253     000C                     PIR1            equ	12	;# 
   254     000D                     PIR2            equ	13	;# 
   255     000E                     TMR1            equ	14	;# 
   256     000E                     TMR1L           equ	14	;# 
   257     000F                     TMR1H           equ	15	;# 
   258     0010                     T1CON           equ	16	;# 
   259     0011                     TMR2            equ	17	;# 
   260     0012                     T2CON           equ	18	;# 
   261     0013                     SSPBUF          equ	19	;# 
   262     0014                     SSPCON          equ	20	;# 
   263     0015                     CCPR1           equ	21	;# 
   264     0015                     CCPR1L          equ	21	;# 
   265     0016                     CCPR1H          equ	22	;# 
   266     0017                     CCP1CON         equ	23	;# 
   267     0018                     RCSTA           equ	24	;# 
   268     0019                     TXREG           equ	25	;# 
   269     001A                     RCREG           equ	26	;# 
   270     001B                     CCPR2           equ	27	;# 
   271     001B                     CCPR2L          equ	27	;# 
   272     001C                     CCPR2H          equ	28	;# 
   273     001D                     CCP2CON         equ	29	;# 
   274     001E                     ADRESH          equ	30	;# 
   275     001F                     ADCON0          equ	31	;# 
   276     0081                     OPTION_REG      equ	129	;# 
   277     0085                     TRISA           equ	133	;# 
   278     0086                     TRISB           equ	134	;# 
   279     0087                     TRISC           equ	135	;# 
   280     008C                     PIE1            equ	140	;# 
   281     008D                     PIE2            equ	141	;# 
   282     008E                     PCON            equ	142	;# 
   283     0091                     SSPCON2         equ	145	;# 
   284     0092                     PR2             equ	146	;# 
   285     0093                     SSPADD          equ	147	;# 
   286     0094                     SSPSTAT         equ	148	;# 
   287     0098                     TXSTA           equ	152	;# 
   288     0099                     SPBRG           equ	153	;# 
   289     009E                     ADRESL          equ	158	;# 
   290     009F                     ADCON1          equ	159	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010D                     EEADR           equ	269	;# 
   293     010E                     EEDATH          equ	270	;# 
   294     010F                     EEADRH          equ	271	;# 
   295     018C                     EECON1          equ	396	;# 
   296     018D                     EECON2          equ	397	;# 
   297     0000                     INDF            equ	0	;# 
   298     0001                     TMR0            equ	1	;# 
   299     0002                     PCL             equ	2	;# 
   300     0003                     STATUS          equ	3	;# 
   301     0004                     FSR             equ	4	;# 
   302     0005                     PORTA           equ	5	;# 
   303     0006                     PORTB           equ	6	;# 
   304     0007                     PORTC           equ	7	;# 
   305     000A                     PCLATH          equ	10	;# 
   306     000B                     INTCON          equ	11	;# 
   307     000C                     PIR1            equ	12	;# 
   308     000D                     PIR2            equ	13	;# 
   309     000E                     TMR1            equ	14	;# 
   310     000E                     TMR1L           equ	14	;# 
   311     000F                     TMR1H           equ	15	;# 
   312     0010                     T1CON           equ	16	;# 
   313     0011                     TMR2            equ	17	;# 
   314     0012                     T2CON           equ	18	;# 
   315     0013                     SSPBUF          equ	19	;# 
   316     0014                     SSPCON          equ	20	;# 
   317     0015                     CCPR1           equ	21	;# 
   318     0015                     CCPR1L          equ	21	;# 
   319     0016                     CCPR1H          equ	22	;# 
   320     0017                     CCP1CON         equ	23	;# 
   321     0018                     RCSTA           equ	24	;# 
   322     0019                     TXREG           equ	25	;# 
   323     001A                     RCREG           equ	26	;# 
   324     001B                     CCPR2           equ	27	;# 
   325     001B                     CCPR2L          equ	27	;# 
   326     001C                     CCPR2H          equ	28	;# 
   327     001D                     CCP2CON         equ	29	;# 
   328     001E                     ADRESH          equ	30	;# 
   329     001F                     ADCON0          equ	31	;# 
   330     0081                     OPTION_REG      equ	129	;# 
   331     0085                     TRISA           equ	133	;# 
   332     0086                     TRISB           equ	134	;# 
   333     0087                     TRISC           equ	135	;# 
   334     008C                     PIE1            equ	140	;# 
   335     008D                     PIE2            equ	141	;# 
   336     008E                     PCON            equ	142	;# 
   337     0091                     SSPCON2         equ	145	;# 
   338     0092                     PR2             equ	146	;# 
   339     0093                     SSPADD          equ	147	;# 
   340     0094                     SSPSTAT         equ	148	;# 
   341     0098                     TXSTA           equ	152	;# 
   342     0099                     SPBRG           equ	153	;# 
   343     009E                     ADRESL          equ	158	;# 
   344     009F                     ADCON1          equ	159	;# 
   345     010C                     EEDATA          equ	268	;# 
   346     010D                     EEADR           equ	269	;# 
   347     010E                     EEDATH          equ	270	;# 
   348     010F                     EEADRH          equ	271	;# 
   349     018C                     EECON1          equ	396	;# 
   350     018D                     EECON2          equ	397	;# 
   351     0000                     INDF            equ	0	;# 
   352     0001                     TMR0            equ	1	;# 
   353     0002                     PCL             equ	2	;# 
   354     0003                     STATUS          equ	3	;# 
   355     0004                     FSR             equ	4	;# 
   356     0005                     PORTA           equ	5	;# 
   357     0006                     PORTB           equ	6	;# 
   358     0007                     PORTC           equ	7	;# 
   359     000A                     PCLATH          equ	10	;# 
   360     000B                     INTCON          equ	11	;# 
   361     000C                     PIR1            equ	12	;# 
   362     000D                     PIR2            equ	13	;# 
   363     000E                     TMR1            equ	14	;# 
   364     000E                     TMR1L           equ	14	;# 
   365     000F                     TMR1H           equ	15	;# 
   366     0010                     T1CON           equ	16	;# 
   367     0011                     TMR2            equ	17	;# 
   368     0012                     T2CON           equ	18	;# 
   369     0013                     SSPBUF          equ	19	;# 
   370     0014                     SSPCON          equ	20	;# 
   371     0015                     CCPR1           equ	21	;# 
   372     0015                     CCPR1L          equ	21	;# 
   373     0016                     CCPR1H          equ	22	;# 
   374     0017                     CCP1CON         equ	23	;# 
   375     0018                     RCSTA           equ	24	;# 
   376     0019                     TXREG           equ	25	;# 
   377     001A                     RCREG           equ	26	;# 
   378     001B                     CCPR2           equ	27	;# 
   379     001B                     CCPR2L          equ	27	;# 
   380     001C                     CCPR2H          equ	28	;# 
   381     001D                     CCP2CON         equ	29	;# 
   382     001E                     ADRESH          equ	30	;# 
   383     001F                     ADCON0          equ	31	;# 
   384     0081                     OPTION_REG      equ	129	;# 
   385     0085                     TRISA           equ	133	;# 
   386     0086                     TRISB           equ	134	;# 
   387     0087                     TRISC           equ	135	;# 
   388     008C                     PIE1            equ	140	;# 
   389     008D                     PIE2            equ	141	;# 
   390     008E                     PCON            equ	142	;# 
   391     0091                     SSPCON2         equ	145	;# 
   392     0092                     PR2             equ	146	;# 
   393     0093                     SSPADD          equ	147	;# 
   394     0094                     SSPSTAT         equ	148	;# 
   395     0098                     TXSTA           equ	152	;# 
   396     0099                     SPBRG           equ	153	;# 
   397     009E                     ADRESL          equ	158	;# 
   398     009F                     ADCON1          equ	159	;# 
   399     010C                     EEDATA          equ	268	;# 
   400     010D                     EEADR           equ	269	;# 
   401     010E                     EEDATH          equ	270	;# 
   402     010F                     EEADRH          equ	271	;# 
   403     018C                     EECON1          equ	396	;# 
   404     018D                     EECON2          equ	397	;# 
   405                           
   406                           	psect	idataBANK1
   407     0FD6                     __pidataBANK1:
   408                           
   409                           ;initializer for main@F928
   410     0FD6  3407               	retlw	7
   411     0FD7  3405               	retlw	5
   412     0FD8  3402               	retlw	2
   413                           
   414                           	psect	strings
   415     0800                     __pstrings:
   416     0800                     stringtab:
   417     0800                     __stringtab:
   418     0800                     stringcode:	
   419                           ;	String table - string pointers are 1 byte each
   420                           
   421     0800                     stringdir:
   422     0800  3008               	movlw	high stringdir
   423     0801  008A               	movwf	10
   424     0802  0804               	movf	4,w
   425     0803  0A84               	incf	4,f
   426     0804  0782               	addwf	2,f
   427     0805                     __stringbase:
   428     0805  3400               	retlw	0
   429     0806                     __end_of__stringtab:
   430     0806                     ChangeOfCoordinates@delay:
   431     0806  3496               	retlw	150
   432     0807  3400               	retlw	0
   433     0808  3400               	retlw	0
   434     0809  3400               	retlw	0
   435     080A                     __end_ofChangeOfCoordinates@delay:
   436     0013                     _SSPBUF         set	19
   437     0014                     _SSPCON         set	20
   438     0005                     _PORTA          set	5
   439     0006                     _PORTB          set	6
   440     002D                     _RA5            set	45
   441     0063                     _SSPIF          set	99
   442     0094                     _SSPSTAT        set	148
   443     0085                     _TRISA          set	133
   444     0087                     _TRISC          set	135
   445     0086                     _TRISB          set	134
   446                           
   447                           	psect	cinit
   448     07D8                     start_initialization:	
   449                           ; #config settings
   450                           
   451     07D8                     __initialization:
   452                           
   453                           ; Initialize objects allocated to BANK1
   454     07D8  1683               	bsf	3,5	;RP0=1, select bank1
   455     07D9  1303               	bcf	3,6	;RP1=0, select bank1
   456     07DA  120A  158A  27D6  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   457     07DF  00A8               	movwf	__pdataBANK1& (0+127)
   458     07E0  120A  158A  27D7  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   459     07E5  00A9               	movwf	(__pdataBANK1+1)& (0+127)
   460     07E6  120A  158A  27D8  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   461     07EB  00AA               	movwf	(__pdataBANK1+2)& (0+127)
   462                           
   463                           ; Clear objects allocated to BANK1
   464     07EC  01A0               	clrf	__pbssBANK1& (0+127)
   465     07ED  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   466     07EE  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   467     07EF  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   468     07F0  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   469     07F1  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   470     07F2  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   471     07F3  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   472                           
   473                           ; Clear objects allocated to BANK0
   474     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   475     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   476     07F6  01E9               	clrf	__pbssBANK0& (0+127)
   477     07F7  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   478     07F8  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   479     07F9  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   480     07FA  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   481     07FB  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   482     07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485     07FC                     __end_of__initialization:
   486     07FC  0183               	clrf	3
   487     07FD  120A  118A  29EC   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssBANK0
   490     0069                     __pbssBANK0:
   491     0069                     _brkp:
   492     0069                     	ds	2
   493     006B                     malloc@cur:
   494     006B                     	ds	2
   495     006D                     ___freelist:
   496     006D                     	ds	2
   497                           
   498                           	psect	bssBANK1
   499     00A0                     __pbssBANK1:
   500     00A0                     malloc@lock:
   501     00A0                     	ds	4
   502     00A4                     malloc@end:
   503     00A4                     	ds	2
   504     00A6                     _errno:
   505     00A6                     	ds	2
   506                           
   507                           	psect	dataBANK1
   508     00A8                     __pdataBANK1:
   509     00A8                     main@F928:
   510     00A8                     	ds	3
   511                           
   512                           	psect	cstackCOMMON
   513     0071                     __pcstackCOMMON:
   514     0071                     ?_Reverse:
   515     0071                     ?_SpiInit:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0071                     ?_MatrixInit:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0071                     ?_PortBInit:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0071                     ?_SetPosition:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0071                     ?_free:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0071                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0071                     ?_SpiSendByte:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0071                     ?_SpiClearMatrix:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0071                     ?_MovieDown:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0071                     ?_MovieUp:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0071                     ?_MovieLeft:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0071                     ?_MovieRigth:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0071                     ?___simple_search_fl:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0071                     ?___expand_heap:	
   555                           ; 2 bytes @ 0x0
   556                           
   557     0071                     ?___wmul:	
   558                           ; 2 bytes @ 0x0
   559                           
   560     0071                     SpiSendByte@data:	
   561                           ; 2 bytes @ 0x0
   562                           
   563     0071                     Reverse@array:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0071                     ___expand_heap@pn:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0071                     SetPosition@position:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0071                     MovieDown@_shapePosition:	
   573                           ; 2 bytes @ 0x0
   574                           
   575     0071                     MovieUp@_shapePosition:	
   576                           ; 2 bytes @ 0x0
   577                           
   578     0071                     MovieLeft@_shapePosition:	
   579                           ; 2 bytes @ 0x0
   580                           
   581     0071                     MovieRigth@_shapePosition:	
   582                           ; 2 bytes @ 0x0
   583                           
   584     0071                     ___wmul@multiplier:	
   585                           ; 2 bytes @ 0x0
   586                           
   587     0071                     ___simple_search_fl@n:	
   588                           ; 2 bytes @ 0x0
   589                           
   590     0071                     free@ptr:	
   591                           ; 2 bytes @ 0x0
   592                           
   593     0071                     ??_SpiInit:	
   594                           ; 2 bytes @ 0x0
   595                           
   596     0071                     ??_PortBInit:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0071                     ??_SpiSendByte:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604     0071                     	ds	1
   605     0072                     ?_SendToSegment:
   606     0072                     SendToSegment@segment:	
   607                           ; 1 bytes @ 0x1
   608                           
   609     0072                     Reverse@countElemnt:	
   610                           ; 2 bytes @ 0x1
   611                           
   612     0072                     ___expand_heap@n:	
   613                           ; 2 bytes @ 0x1
   614                           
   615     0072                     ??___expand_heap:	
   616                           ; 2 bytes @ 0x1
   617                           
   618                           
   619                           ; 1 bytes @ 0x1
   620     0072                     	ds	1
   621     0073                     SetPosition@x:
   622     0073                     ___wmul@multiplicand:	
   623                           ; 2 bytes @ 0x2
   624                           
   625     0073                     ??_free:	
   626                           ; 2 bytes @ 0x2
   627                           
   628     0073                     ??___simple_search_fl:	
   629                           ; 1 bytes @ 0x2
   630                           
   631     0073                     ??_MovieDown:	
   632                           ; 1 bytes @ 0x2
   633                           
   634     0073                     ??_MovieUp:	
   635                           ; 1 bytes @ 0x2
   636                           
   637     0073                     ??_MovieLeft:	
   638                           ; 1 bytes @ 0x2
   639                           
   640     0073                     ??_MovieRigth:	
   641                           ; 1 bytes @ 0x2
   642                           
   643                           
   644                           ; 1 bytes @ 0x2
   645     0073                     	ds	1
   646     0074                     SendToSegment@data:
   647     0074                     ___expand_heap@new_brkp:	
   648                           ; 1 bytes @ 0x3
   649                           
   650     0074                     ??_Reverse:	
   651                           ; 2 bytes @ 0x3
   652                           
   653                           
   654                           ; 1 bytes @ 0x3
   655     0074                     	ds	1
   656     0075                     ?_ShowShape:
   657     0075                     SetPosition@y:	
   658                           ; 1 bytes @ 0x4
   659                           
   660     0075                     ShowShape@coord:	
   661                           ; 2 bytes @ 0x4
   662                           
   663     0075                     ___wmul@product:	
   664                           ; 2 bytes @ 0x4
   665                           
   666     0075                     ??_SendToSegment:	
   667                           ; 2 bytes @ 0x4
   668                           
   669     0075                     ??_SpiClearMatrix:	
   670                           ; 1 bytes @ 0x4
   671                           
   672     0075                     ??___wmul:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 1 bytes @ 0x4
   677     0075                     	ds	2
   678     0077                     ?_memset:
   679     0077                     SpiClearMatrix@i:	
   680                           ; 2 bytes @ 0x6
   681                           
   682     0077                     Reverse@t:	
   683                           ; 1 bytes @ 0x6
   684                           
   685     0077                     ShowShape@countElemntArray:	
   686                           ; 1 bytes @ 0x6
   687                           
   688     0077                     memset@dest:	
   689                           ; 2 bytes @ 0x6
   690                           
   691     0077                     ??_SetPosition:	
   692                           ; 2 bytes @ 0x6
   693                           
   694                           
   695                           ; 1 bytes @ 0x6
   696     0077                     	ds	1
   697     0078                     Reverse@i:
   698     0078                     ??_MatrixInit:	
   699                           ; 2 bytes @ 0x7
   700                           
   701                           
   702                           ; 1 bytes @ 0x7
   703     0078                     	ds	1
   704     0079                     ?_malloc:
   705     0079                     ShowShape@shapeArray:	
   706                           ; 2 bytes @ 0x8
   707                           
   708     0079                     free@cptr:	
   709                           ; 1 bytes @ 0x8
   710                           
   711     0079                     malloc@n:	
   712                           ; 2 bytes @ 0x8
   713                           
   714     0079                     memset@c:	
   715                           ; 2 bytes @ 0x8
   716                           
   717                           
   718                           ; 2 bytes @ 0x8
   719     0079                     	ds	1
   720     007A                     ShowShape@_pos:
   721     007A                     Reverse@j:	
   722                           ; 2 bytes @ 0x9
   723                           
   724                           
   725                           ; 2 bytes @ 0x9
   726     007A                     	ds	1
   727     007B                     free@c:
   728     007B                     memset@n:	
   729                           ; 2 bytes @ 0xA
   730                           
   731     007B                     ??_malloc:	
   732                           ; 2 bytes @ 0xA
   733                           
   734                           
   735                           ; 1 bytes @ 0xA
   736     007B                     	ds	1
   737     007C                     ShowShape@pos:
   738                           
   739                           ; 2 bytes @ 0xB
   740     007C                     	ds	1
   741     007D                     ??_calloc:
   742     007D                     ??_memset:	
   743                           ; 1 bytes @ 0xC
   744                           
   745                           
   746                           ; 1 bytes @ 0xC
   747     007D                     	ds	1
   748     007E                     ??_main:
   749                           
   750                           	psect	cstackBANK0
   751     0020                     __pcstackBANK0:	
   752                           ; 1 bytes @ 0xD
   753                           
   754     0020                     ___simple_search_fl@remaining_size:
   755     0020                     memset@p:	
   756                           ; 2 bytes @ 0x0
   757                           
   758     0020                     ??_ShowShape:	
   759                           ; 2 bytes @ 0x0
   760                           
   761                           
   762                           ; 1 bytes @ 0x0
   763     0020                     	ds	2
   764     0022                     ___simple_search_fl@best_last:
   765                           
   766                           ; 2 bytes @ 0x2
   767     0022                     	ds	2
   768     0024                     ___simple_search_fl@split:
   769                           
   770                           ; 2 bytes @ 0x4
   771     0024                     	ds	1
   772     0025                     ?_MovieShape:
   773     0025                     MovieShape@_shapePosition:	
   774                           ; 1 bytes @ 0x5
   775                           
   776                           
   777                           ; 2 bytes @ 0x5
   778     0025                     	ds	1
   779     0026                     ___simple_search_fl@last:
   780                           
   781                           ; 2 bytes @ 0x6
   782     0026                     	ds	1
   783     0027                     MovieShape@shapeArray:
   784                           
   785                           ; 1 bytes @ 0x7
   786     0027                     	ds	1
   787     0028                     MovieShape@countElemntArray:
   788     0028                     ___simple_search_fl@next:	
   789                           ; 2 bytes @ 0x8
   790                           
   791                           
   792                           ; 2 bytes @ 0x8
   793     0028                     	ds	2
   794     002A                     ___simple_search_fl@c:
   795     002A                     ??_MovieShape:	
   796                           ; 2 bytes @ 0xA
   797                           
   798                           
   799                           ; 1 bytes @ 0xA
   800     002A                     	ds	2
   801     002C                     MovieShape@dir:
   802     002C                     ___simple_search_fl@best:	
   803                           ; 1 bytes @ 0xC
   804                           
   805                           
   806                           ; 2 bytes @ 0xC
   807     002C                     	ds	2
   808     002E                     malloc@m:
   809                           
   810                           ; 2 bytes @ 0xE
   811     002E                     	ds	2
   812     0030                     malloc@sz:
   813                           
   814                           ; 2 bytes @ 0x10
   815     0030                     	ds	2
   816     0032                     malloc@size:
   817                           
   818                           ; 2 bytes @ 0x12
   819     0032                     	ds	2
   820     0034                     malloc@p:
   821                           
   822                           ; 2 bytes @ 0x14
   823     0034                     	ds	2
   824     0036                     malloc@new:
   825                           
   826                           ; 2 bytes @ 0x16
   827     0036                     	ds	2
   828     0038                     ?_calloc:
   829     0038                     calloc@nmemb:	
   830                           ; 2 bytes @ 0x18
   831                           
   832                           
   833                           ; 2 bytes @ 0x18
   834     0038                     	ds	2
   835     003A                     calloc@size:
   836                           
   837                           ; 2 bytes @ 0x1A
   838     003A                     	ds	2
   839     003C                     calloc@new_ptr:
   840                           
   841                           ; 2 bytes @ 0x1C
   842     003C                     	ds	2
   843     003E                     ?_Rotate:
   844     003E                     Rotate@array_:	
   845                           ; 1 bytes @ 0x1E
   846                           
   847                           
   848                           ; 1 bytes @ 0x1E
   849     003E                     	ds	1
   850     003F                     Rotate@length:
   851                           
   852                           ; 2 bytes @ 0x1F
   853     003F                     	ds	2
   854     0041                     ??_Rotate:
   855                           
   856                           ; 1 bytes @ 0x21
   857     0041                     	ds	7
   858     0048                     Rotate@x:
   859                           
   860                           ; 2 bytes @ 0x28
   861     0048                     	ds	2
   862     004A                     Rotate@i:
   863                           
   864                           ; 2 bytes @ 0x2A
   865     004A                     	ds	2
   866     004C                     Rotate@y:
   867                           
   868                           ; 2 bytes @ 0x2C
   869     004C                     	ds	2
   870     004E                     Rotate@res:
   871                           
   872                           ; 2 bytes @ 0x2E
   873     004E                     	ds	2
   874     0050                     Rotate@_i:
   875                           
   876                           ; 2 bytes @ 0x30
   877     0050                     	ds	2
   878     0052                     ?_ChangeOfCoordinates:
   879     0052                     ChangeOfCoordinates@_shapePosition:	
   880                           ; 1 bytes @ 0x32
   881                           
   882                           
   883                           ; 2 bytes @ 0x32
   884     0052                     	ds	2
   885     0054                     ChangeOfCoordinates@_figure:
   886                           
   887                           ; 1 bytes @ 0x34
   888     0054                     	ds	1
   889     0055                     ChangeOfCoordinates@_countElemntArray:
   890                           
   891                           ; 2 bytes @ 0x35
   892     0055                     	ds	2
   893     0057                     ChangeOfCoordinates@_reverse:
   894                           
   895                           ; 1 bytes @ 0x37
   896     0057                     	ds	1
   897     0058                     ??_ChangeOfCoordinates:
   898                           
   899                           ; 1 bytes @ 0x38
   900     0058                     	ds	3
   901     005B                     ChangeOfCoordinates@i:
   902                           
   903                           ; 2 bytes @ 0x3B
   904     005B                     	ds	2
   905     005D                     ChangeOfCoordinates@step:
   906                           
   907                           ; 2 bytes @ 0x3D
   908     005D                     	ds	2
   909     005F                     main@square_1:
   910                           
   911                           ; 3 bytes @ 0x3F
   912     005F                     	ds	3
   913     0062                     main@countElemntArray:
   914                           
   915                           ; 2 bytes @ 0x42
   916     0062                     	ds	2
   917     0064                     main@reverse:
   918                           
   919                           ; 1 bytes @ 0x44
   920     0064                     	ds	1
   921     0065                     main@shapePosition:
   922                           
   923                           ; 4 bytes @ 0x45
   924     0065                     	ds	4
   925                           
   926                           	psect	maintext
   927     01EC                     __pmaintext:	
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 53 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  shapePositio    4   69[BANK0 ] struct .
   938 ;;  square_1        3   63[BANK0 ] unsigned char [3]
   939 ;;  countElemntA    2   66[BANK0 ] int 
   940 ;;  reverse         1   68[BANK0 ] _Bool 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : B00/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0      10       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0      10       0       0       0
   954 ;;Total ram usage:       10 bytes
   955 ;; Hardware stack levels required when called: 5
   956 ;; This function calls:
   957 ;;		_ChangeOfCoordinates
   958 ;;		_MatrixInit
   959 ;;		_PortBInit
   960 ;;		_SetPosition
   961 ;;		_SpiInit
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     01EC                     _main:	
   968                           ;psect for function _main
   969                           
   970     01EC                     l1577:	
   971                           ;incstack = 0
   972                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   973                           
   974                           
   975                           ;main.c: 54:     SpiInit();
   976     01EC  120A  118A  200A  120A  118A  	fcall	_SpiInit
   977                           
   978                           ;main.c: 55:     MatrixInit();
   979     01F1  120A  118A  20D4  120A  118A  	fcall	_MatrixInit
   980     01F6                     l1579:
   981                           
   982                           ;main.c: 56:     PortBInit();
   983     01F6  120A  118A  2003  120A  118A  	fcall	_PortBInit
   984                           
   985                           ;main.c: 58:     TCoord shapePosition;;main.c: 59:     char square_1[3] = { 0x07, 0x05, 
      +                          0x02 };
   986     01FB  1683               	bsf	3,5	;RP0=1, select bank1
   987     01FC  1303               	bcf	3,6	;RP1=0, select bank1
   988     01FD  0828               	movf	main@F928^(0+128),w
   989     01FE  1283               	bcf	3,5	;RP0=0, select bank0
   990     01FF  1303               	bcf	3,6	;RP1=0, select bank0
   991     0200  00DF               	movwf	main@square_1
   992     0201  1683               	bsf	3,5	;RP0=1, select bank1
   993     0202  1303               	bcf	3,6	;RP1=0, select bank1
   994     0203  0829               	movf	(main@F928+1)^(0+128),w
   995     0204  1283               	bcf	3,5	;RP0=0, select bank0
   996     0205  1303               	bcf	3,6	;RP1=0, select bank0
   997     0206  00E0               	movwf	main@square_1+1
   998     0207  1683               	bsf	3,5	;RP0=1, select bank1
   999     0208  1303               	bcf	3,6	;RP1=0, select bank1
  1000     0209  082A               	movf	(main@F928+2)^(0+128),w
  1001     020A  1283               	bcf	3,5	;RP0=0, select bank0
  1002     020B  1303               	bcf	3,6	;RP1=0, select bank0
  1003     020C  00E1               	movwf	main@square_1+2
  1004                           
  1005                           ;main.c: 60:     int countElemntArray = 3;
  1006     020D  3003               	movlw	3
  1007     020E  00E2               	movwf	main@countElemntArray
  1008     020F  3000               	movlw	0
  1009     0210  00E3               	movwf	main@countElemntArray+1
  1010     0211                     l1581:
  1011                           
  1012                           ;main.c: 61:     _Bool reverse = 1;
  1013     0211  3001               	movlw	1
  1014     0212  00E4               	movwf	main@reverse
  1015     0213                     l1583:
  1016                           
  1017                           ;main.c: 64:         SetPosition(&shapePosition, 0, 0);
  1018     0213  3065               	movlw	low main@shapePosition
  1019     0214  00F1               	movwf	SetPosition@position
  1020     0215  3000               	movlw	high main@shapePosition
  1021     0216  00F2               	movwf	SetPosition@position+1
  1022     0217  3000               	movlw	0
  1023     0218  00F3               	movwf	SetPosition@x
  1024     0219  00F4               	movwf	SetPosition@x+1
  1025     021A  3000               	movlw	0
  1026     021B  00F5               	movwf	SetPosition@y
  1027     021C  00F6               	movwf	SetPosition@y+1
  1028     021D  120A  118A  2071  120A  118A  	fcall	_SetPosition
  1029     0222                     l1585:
  1030                           
  1031                           ;main.c: 65:         ChangeOfCoordinates(&shapePosition, square_1, countElemntArray, &re
      +                          verse);
  1032     0222  3065               	movlw	low main@shapePosition
  1033     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1034     0224  1303               	bcf	3,6	;RP1=0, select bank0
  1035     0225  00D2               	movwf	ChangeOfCoordinates@_shapePosition
  1036     0226  3000               	movlw	high main@shapePosition
  1037     0227  00D3               	movwf	ChangeOfCoordinates@_shapePosition+1
  1038     0228  305F               	movlw	(low (main@square_1| 0))& (0+255)
  1039     0229  00D4               	movwf	ChangeOfCoordinates@_figure
  1040     022A  0863               	movf	main@countElemntArray+1,w
  1041     022B  00D6               	movwf	ChangeOfCoordinates@_countElemntArray+1
  1042     022C  0862               	movf	main@countElemntArray,w
  1043     022D  00D5               	movwf	ChangeOfCoordinates@_countElemntArray
  1044     022E  3064               	movlw	(low (main@reverse| 0))& (0+255)
  1045     022F  00D7               	movwf	ChangeOfCoordinates@_reverse
  1046     0230  120A  118A  23D3  120A  118A  	fcall	_ChangeOfCoordinates
  1047     0235  2A13               	goto	l1583
  1048     0236  120A  118A  2800   	ljmp	start
  1049     0239                     __end_of_main:
  1050                           
  1051                           	psect	text1
  1052     000A                     __ptext1:	
  1053 ;; *************** function _SpiInit *****************
  1054 ;; Defined at:
  1055 ;;		line 9 in file "spi.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082     000A                     _SpiInit:	
  1083                           ;psect for function _SpiInit
  1084                           
  1085     000A                     l1549:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
  1088                           
  1089                           
  1090                           ;spi.c: 10:     TRISC |= 0x10;
  1091     000A  1683               	bsf	3,5	;RP0=1, select bank1
  1092     000B  1303               	bcf	3,6	;RP1=0, select bank1
  1093     000C  1607               	bsf	7,4	;volatile
  1094     000D                     l1551:
  1095                           
  1096                           ;spi.c: 11:     TRISC &= ~0x28;
  1097     000D  30D7               	movlw	215
  1098     000E  0587               	andwf	7,f	;volatile
  1099                           
  1100                           ;spi.c: 12:     TRISA &= ~0x20;
  1101     000F  30DF               	movlw	223
  1102     0010  0585               	andwf	5,f	;volatile
  1103                           
  1104                           ;spi.c: 13:     PORTA &= ~0x20;
  1105     0011  30DF               	movlw	223
  1106     0012  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0013  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0014  0585               	andwf	5,f	;volatile
  1109     0015                     l1553:
  1110                           
  1111                           ;spi.c: 14:     SSPCON = 0x30;
  1112     0015  3030               	movlw	48
  1113     0016  0094               	movwf	20	;volatile
  1114     0017                     l1555:
  1115                           
  1116                           ;spi.c: 15:     SSPSTAT = 0x80;
  1117     0017  3080               	movlw	128
  1118     0018  1683               	bsf	3,5	;RP0=1, select bank1
  1119     0019  1303               	bcf	3,6	;RP1=0, select bank1
  1120     001A  0094               	movwf	20	;volatile
  1121     001B                     l66:
  1122     001B  0008               	return
  1123     001C                     __end_of_SpiInit:
  1124                           
  1125                           	psect	text2
  1126     0071                     __ptext2:	
  1127 ;; *************** function _SetPosition *****************
  1128 ;; Defined at:
  1129 ;;		line 3 in file "shape.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  position        2    0[COMMON] PTR struct .
  1132 ;;		 -> main@shapePosition(4), 
  1133 ;;  x               2    2[COMMON] int 
  1134 ;;  y               2    4[COMMON] int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         6       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0
  1149 ;;      Totals:         8       0       0       0       0
  1150 ;;Total ram usage:        8 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0071                     _SetPosition:	
  1160                           ;psect for function _SetPosition
  1161                           
  1162     0071                     l1573:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _SetPosition: [wreg-fsr0h+status,2+status,0]
  1165                           
  1166                           
  1167                           ;shape.c: 4:     position->x = x;
  1168     0071  0871               	movf	SetPosition@position,w
  1169     0072  0084               	movwf	4
  1170     0073  1783               	bsf	3,7
  1171     0074  1C72               	btfss	SetPosition@position+1,0
  1172     0075  1383               	bcf	3,7
  1173     0076  0873               	movf	SetPosition@x,w
  1174     0077  0080               	movwf	0
  1175     0078  0A84               	incf	4,f
  1176     0079  0874               	movf	SetPosition@x+1,w
  1177     007A  0080               	movwf	0
  1178     007B                     l1575:
  1179                           
  1180                           ;shape.c: 5:     position->y = y;
  1181     007B  0871               	movf	SetPosition@position,w
  1182     007C  3E02               	addlw	2
  1183     007D  00F7               	movwf	??_SetPosition
  1184     007E  0872               	movf	SetPosition@position+1,w
  1185     007F  1803               	skipnc
  1186     0080  3E01               	addlw	1
  1187     0081  3E00               	addlw	0
  1188     0082  00F8               	movwf	??_SetPosition+1
  1189     0083  0877               	movf	??_SetPosition,w
  1190     0084  0084               	movwf	4
  1191     0085  1783               	bsf	3,7
  1192     0086  1C78               	btfss	??_SetPosition+1,0
  1193     0087  1383               	bcf	3,7
  1194     0088  0875               	movf	SetPosition@y,w
  1195     0089  0080               	movwf	0
  1196     008A  0A84               	incf	4,f
  1197     008B  0876               	movf	SetPosition@y+1,w
  1198     008C  0080               	movwf	0
  1199     008D                     l102:
  1200     008D  0008               	return
  1201     008E                     __end_of_SetPosition:
  1202                           
  1203                           	psect	text3
  1204     0003                     __ptext3:	
  1205 ;; *************** function _PortBInit *****************
  1206 ;; Defined at:
  1207 ;;		line 13 in file "portsinit.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		status,2
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234     0003                     _PortBInit:	
  1235                           ;psect for function _PortBInit
  1236                           
  1237     0003                     l1571:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _PortBInit: [status,2]
  1240                           
  1241                           
  1242                           ;portsinit.c: 14:     TRISB = 0x00;
  1243     0003  1683               	bsf	3,5	;RP0=1, select bank1
  1244     0004  1303               	bcf	3,6	;RP1=0, select bank1
  1245     0005  0186               	clrf	6	;volatile
  1246                           
  1247                           ;portsinit.c: 15:     PORTB = 0x00;
  1248     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1249     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1250     0008  0186               	clrf	6	;volatile
  1251     0009                     l49:
  1252     0009  0008               	return
  1253     000A                     __end_of_PortBInit:
  1254                           
  1255                           	psect	text4
  1256     00D4                     __ptext4:	
  1257 ;; *************** function _MatrixInit *****************
  1258 ;; Defined at:
  1259 ;;		line 20 in file "matrix.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0
  1275 ;;      Temps:          3       0       0       0       0
  1276 ;;      Totals:         3       0       0       0       0
  1277 ;;Total ram usage:        3 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 3
  1280 ;; This function calls:
  1281 ;;		_SendToSegment
  1282 ;;		_SpiClearMatrix
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288     00D4                     _MatrixInit:	
  1289                           ;psect for function _MatrixInit
  1290                           
  1291     00D4                     l1557:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  1294                           
  1295                           
  1296                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1297     00D4  3003               	movlw	3
  1298     00D5  00FA               	movwf	??_MatrixInit+2
  1299     00D6  3008               	movlw	8
  1300     00D7  00F9               	movwf	??_MatrixInit+1
  1301     00D8  3077               	movlw	119
  1302     00D9  00F8               	movwf	??_MatrixInit
  1303     00DA                     u977:
  1304     00DA  0BF8               	decfsz	??_MatrixInit,f
  1305     00DB  28DA               	goto	u977
  1306     00DC  0BF9               	decfsz	??_MatrixInit+1,f
  1307     00DD  28DA               	goto	u977
  1308     00DE  0BFA               	decfsz	??_MatrixInit+2,f
  1309     00DF  28DA               	goto	u977
  1310     00E0                     l1559:
  1311                           
  1312                           ;matrix.c: 22:     RA5=1;
  1313     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1314     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1315     00E2  1685               	bsf	5,5	;volatile
  1316     00E3                     l1561:
  1317                           
  1318                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  1319     00E3  3009               	movlw	9
  1320     00E4  00F2               	movwf	SendToSegment@segment
  1321     00E5  3000               	movlw	0
  1322     00E6  00F3               	movwf	SendToSegment@segment+1
  1323     00E7  01F4               	clrf	SendToSegment@data
  1324     00E8  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  1325     00ED                     l1563:
  1326                           
  1327                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  1328     00ED  300B               	movlw	11
  1329     00EE  00F2               	movwf	SendToSegment@segment
  1330     00EF  3000               	movlw	0
  1331     00F0  00F3               	movwf	SendToSegment@segment+1
  1332     00F1  3007               	movlw	7
  1333     00F2  00F4               	movwf	SendToSegment@data
  1334     00F3  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  1335     00F8                     l1565:
  1336                           
  1337                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  1338     00F8  300A               	movlw	10
  1339     00F9  00F2               	movwf	SendToSegment@segment
  1340     00FA  3000               	movlw	0
  1341     00FB  00F3               	movwf	SendToSegment@segment+1
  1342     00FC  3002               	movlw	2
  1343     00FD  00F4               	movwf	SendToSegment@data
  1344     00FE  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  1345     0103                     l1567:
  1346                           
  1347                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  1348     0103  300C               	movlw	12
  1349     0104  00F2               	movwf	SendToSegment@segment
  1350     0105  3000               	movlw	0
  1351     0106  00F3               	movwf	SendToSegment@segment+1
  1352     0107  01F4               	clrf	SendToSegment@data
  1353     0108  0AF4               	incf	SendToSegment@data,f
  1354     0109  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  1355     010E                     l1569:
  1356                           
  1357                           ;matrix.c: 27:     SpiClearMatrix();
  1358     010E  120A  118A  2042  120A  118A  	fcall	_SpiClearMatrix
  1359     0113                     l88:
  1360     0113  0008               	return
  1361     0114                     __end_of_MatrixInit:
  1362                           
  1363                           	psect	text5
  1364     03D3                     __ptext5:	
  1365 ;; *************** function _ChangeOfCoordinates *****************
  1366 ;; Defined at:
  1367 ;;		line 19 in file "main.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  _shapePositi    2   50[BANK0 ] PTR struct .
  1370 ;;		 -> main@shapePosition(4), 
  1371 ;;  _figure         1   52[BANK0 ] PTR unsigned char 
  1372 ;;		 -> main@square_1(3), 
  1373 ;;  _countElemnt    2   53[BANK0 ] int 
  1374 ;;  _reverse        1   55[BANK0 ] PTR _Bool 
  1375 ;;		 -> main@reverse(1), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  i               2   59[BANK0 ] int 
  1378 ;;  step            2   61[BANK0 ] int 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       6       0       0       0
  1389 ;;      Locals:         0       4       0       0       0
  1390 ;;      Temps:          0       3       0       0       0
  1391 ;;      Totals:         0      13       0       0       0
  1392 ;;Total ram usage:       13 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 4
  1395 ;; This function calls:
  1396 ;;		_MovieShape
  1397 ;;		_Reverse
  1398 ;;		_Rotate
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404     03D3                     _ChangeOfCoordinates:	
  1405                           ;psect for function _ChangeOfCoordinates
  1406                           
  1407     03D3                     l1509:	
  1408                           ;incstack = 0
  1409                           ; Regs used in _ChangeOfCoordinates: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1410                           
  1411                           
  1412                           ;main.c: 20:     const unsigned long delay = 150;;main.c: 22:     int step = 0;
  1413     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1414     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1415     03D5  01DD               	clrf	ChangeOfCoordinates@step
  1416     03D6  01DE               	clrf	ChangeOfCoordinates@step+1
  1417     03D7                     l21:	
  1418                           ;main.c: 23:         do{
  1419                           
  1420                           
  1421                           ;main.c: 24:             for(int i = 0; i < 5; i++){
  1422     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1423     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1424     03D9  01DB               	clrf	ChangeOfCoordinates@i
  1425     03DA  01DC               	clrf	ChangeOfCoordinates@i+1
  1426     03DB  2C20               	goto	l1525
  1427     03DC                     l1515:
  1428                           
  1429                           ;main.c: 27:                         MovieShape(right, _shapePosition, _figure, _countEl
      +                          emntArray);
  1430     03DC  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1431     03DD  00A5               	movwf	MovieShape@_shapePosition
  1432     03DE  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1433     03DF  00A6               	movwf	MovieShape@_shapePosition+1
  1434     03E0  0854               	movf	ChangeOfCoordinates@_figure,w
  1435     03E1  00A7               	movwf	MovieShape@shapeArray
  1436     03E2  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1437     03E3  00A9               	movwf	MovieShape@countElemntArray+1
  1438     03E4  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1439     03E5  00A8               	movwf	MovieShape@countElemntArray
  1440     03E6  3003               	movlw	3
  1441     03E7  120A  118A  2239  120A  118A  	fcall	_MovieShape
  1442                           
  1443                           ;main.c: 28:                         break;
  1444     03EC  2C35               	goto	l1527
  1445     03ED                     l1517:
  1446                           
  1447                           ;main.c: 30:                         MovieShape(down, _shapePosition, _figure, _countEle
      +                          mntArray);
  1448     03ED  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1449     03EE  00A5               	movwf	MovieShape@_shapePosition
  1450     03EF  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1451     03F0  00A6               	movwf	MovieShape@_shapePosition+1
  1452     03F1  0854               	movf	ChangeOfCoordinates@_figure,w
  1453     03F2  00A7               	movwf	MovieShape@shapeArray
  1454     03F3  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1455     03F4  00A9               	movwf	MovieShape@countElemntArray+1
  1456     03F5  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1457     03F6  00A8               	movwf	MovieShape@countElemntArray
  1458     03F7  3000               	movlw	0
  1459     03F8  120A  118A  2239  120A  118A  	fcall	_MovieShape
  1460                           
  1461                           ;main.c: 31:                         break;
  1462     03FD  2C35               	goto	l1527
  1463     03FE                     l1519:
  1464                           
  1465                           ;main.c: 33:                         MovieShape(left, _shapePosition, _figure, _countEle
      +                          mntArray);
  1466     03FE  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1467     03FF  00A5               	movwf	MovieShape@_shapePosition
  1468     0400  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1469     0401  00A6               	movwf	MovieShape@_shapePosition+1
  1470     0402  0854               	movf	ChangeOfCoordinates@_figure,w
  1471     0403  00A7               	movwf	MovieShape@shapeArray
  1472     0404  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1473     0405  00A9               	movwf	MovieShape@countElemntArray+1
  1474     0406  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1475     0407  00A8               	movwf	MovieShape@countElemntArray
  1476     0408  3002               	movlw	2
  1477     0409  120A  118A  2239  120A  118A  	fcall	_MovieShape
  1478                           
  1479                           ;main.c: 34:                         break;
  1480     040E  2C35               	goto	l1527
  1481     040F                     l1521:
  1482                           
  1483                           ;main.c: 36:                         MovieShape(up, _shapePosition, _figure, _countElemn
      +                          tArray);
  1484     040F  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1485     0410  00A5               	movwf	MovieShape@_shapePosition
  1486     0411  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1487     0412  00A6               	movwf	MovieShape@_shapePosition+1
  1488     0413  0854               	movf	ChangeOfCoordinates@_figure,w
  1489     0414  00A7               	movwf	MovieShape@shapeArray
  1490     0415  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1491     0416  00A9               	movwf	MovieShape@countElemntArray+1
  1492     0417  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1493     0418  00A8               	movwf	MovieShape@countElemntArray
  1494     0419  3001               	movlw	1
  1495     041A  120A  118A  2239  120A  118A  	fcall	_MovieShape
  1496                           
  1497                           ;main.c: 37:                         break;
  1498     041F  2C35               	goto	l1527
  1499     0420                     l1525:
  1500                           
  1501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 1, Range of values is 0 to 0
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte            4     3 (average)
  1507                           ; direct_byte           11     8 (fixed)
  1508                           ; jumptable            260     6 (fixed)
  1509                           ;	Chosen strategy is simple_byte
  1510     0420  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0421  1303               	bcf	3,6	;RP1=0, select bank0
  1512     0422  085E               	movf	ChangeOfCoordinates@step+1,w
  1513     0423  3A00               	xorlw	0	; case 0
  1514     0424  1903               	skipnz
  1515     0425  2C27               	goto	l1637
  1516     0426  2C35               	goto	l1527
  1517     0427                     l1637:
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 4, Range of values is 0 to 3
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           13     7 (average)
  1524                           ; direct_byte           20     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527     0427  085D               	movf	ChangeOfCoordinates@step,w
  1528     0428  3A00               	xorlw	0	; case 0
  1529     0429  1903               	skipnz
  1530     042A  2BDC               	goto	l1515
  1531     042B  3A01               	xorlw	1	; case 1
  1532     042C  1903               	skipnz
  1533     042D  2BED               	goto	l1517
  1534     042E  3A03               	xorlw	3	; case 2
  1535     042F  1903               	skipnz
  1536     0430  2BFE               	goto	l1519
  1537     0431  3A01               	xorlw	1	; case 3
  1538     0432  1903               	skipnz
  1539     0433  2C0F               	goto	l1521
  1540     0434  2C35               	goto	l1527
  1541     0435                     l1527:
  1542                           
  1543                           ;main.c: 39:                 _delay((unsigned long)((delay)*(16000000/4000.0)));
  1544     0435  3004               	movlw	4
  1545     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1546     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0438  00DA               	movwf	??_ChangeOfCoordinates+2
  1548     0439  300C               	movlw	12
  1549     043A  00D9               	movwf	??_ChangeOfCoordinates+1
  1550     043B  3033               	movlw	51
  1551     043C  00D8               	movwf	??_ChangeOfCoordinates
  1552     043D                     u987:
  1553     043D  0BD8               	decfsz	??_ChangeOfCoordinates,f
  1554     043E  2C3D               	goto	u987
  1555     043F  0BD9               	decfsz	??_ChangeOfCoordinates+1,f
  1556     0440  2C3D               	goto	u987
  1557     0441  0BDA               	decfsz	??_ChangeOfCoordinates+2,f
  1558     0442  2C3D               	goto	u987
  1559                           
  1560                           ;main.c: 41:             }
  1561     0443  3001               	movlw	1
  1562     0444  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0445  1303               	bcf	3,6	;RP1=0, select bank0
  1564     0446  07DB               	addwf	ChangeOfCoordinates@i,f
  1565     0447  1803               	skipnc
  1566     0448  0ADC               	incf	ChangeOfCoordinates@i+1,f
  1567     0449  3000               	movlw	0
  1568     044A  07DC               	addwf	ChangeOfCoordinates@i+1,f
  1569     044B                     l1529:
  1570     044B  085C               	movf	ChangeOfCoordinates@i+1,w
  1571     044C  3A80               	xorlw	128
  1572     044D  00FF               	movwf	btemp+1
  1573     044E  3080               	movlw	128
  1574     044F  027F               	subwf	btemp+1,w
  1575     0450  1D03               	skipz
  1576     0451  2C54               	goto	u935
  1577     0452  3005               	movlw	5
  1578     0453  025B               	subwf	ChangeOfCoordinates@i,w
  1579     0454                     u935:
  1580     0454  1C03               	skipc
  1581     0455  2C57               	goto	u931
  1582     0456  2C58               	goto	u930
  1583     0457                     u931:
  1584     0457  2C20               	goto	l1525
  1585     0458                     u930:
  1586     0458                     l1531:
  1587                           
  1588                           ;main.c: 42:             if(step == 0 && *_reverse) {
  1589     0458  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0459  1303               	bcf	3,6	;RP1=0, select bank0
  1591     045A  085D               	movf	ChangeOfCoordinates@step,w
  1592     045B  045E               	iorwf	ChangeOfCoordinates@step+1,w
  1593     045C  1D03               	btfss	3,2
  1594     045D  2C5F               	goto	u941
  1595     045E  2C60               	goto	u940
  1596     045F                     u941:
  1597     045F  2C79               	goto	l1539
  1598     0460                     u940:
  1599     0460                     l1533:
  1600     0460  0857               	movf	ChangeOfCoordinates@_reverse,w
  1601     0461  0084               	movwf	4
  1602     0462  1383               	bcf	3,7	;select IRP bank0
  1603     0463  0800               	movf	0,w
  1604     0464  1903               	btfsc	3,2
  1605     0465  2C67               	goto	u951
  1606     0466  2C68               	goto	u950
  1607     0467                     u951:
  1608     0467  2C79               	goto	l1539
  1609     0468                     u950:
  1610     0468                     l1535:
  1611                           
  1612                           ;main.c: 43:                 Reverse(_figure, _countElemntArray);
  1613     0468  0854               	movf	ChangeOfCoordinates@_figure,w
  1614     0469  00F1               	movwf	Reverse@array
  1615     046A  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1616     046B  00F3               	movwf	Reverse@countElemnt+1
  1617     046C  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1618     046D  00F2               	movwf	Reverse@countElemnt
  1619     046E  120A  118A  2114  120A  118A  	fcall	_Reverse
  1620     0473                     l1537:
  1621                           
  1622                           ;main.c: 44:                 *_reverse = 0;
  1623     0473  1283               	bcf	3,5	;RP0=0, select bank0
  1624     0474  1303               	bcf	3,6	;RP1=0, select bank0
  1625     0475  0857               	movf	ChangeOfCoordinates@_reverse,w
  1626     0476  0084               	movwf	4
  1627     0477  1383               	bcf	3,7	;select IRP bank0
  1628     0478  0180               	clrf	0
  1629     0479                     l1539:
  1630                           
  1631                           ;main.c: 46:             Rotate(_figure, _countElemntArray);
  1632     0479  0854               	movf	ChangeOfCoordinates@_figure,w
  1633     047A  00BE               	movwf	Rotate@array_
  1634     047B  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1635     047C  00C0               	movwf	Rotate@length+1
  1636     047D  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1637     047E  00BF               	movwf	Rotate@length
  1638     047F  120A  118A  2316  120A  118A  	fcall	_Rotate
  1639     0484                     l1541:
  1640                           
  1641                           ;main.c: 47:             step++;
  1642     0484  3001               	movlw	1
  1643     0485  1283               	bcf	3,5	;RP0=0, select bank0
  1644     0486  1303               	bcf	3,6	;RP1=0, select bank0
  1645     0487  07DD               	addwf	ChangeOfCoordinates@step,f
  1646     0488  1803               	skipnc
  1647     0489  0ADE               	incf	ChangeOfCoordinates@step+1,f
  1648     048A  3000               	movlw	0
  1649     048B  07DE               	addwf	ChangeOfCoordinates@step+1,f
  1650     048C                     l1543:
  1651                           
  1652                           ;main.c: 48:         } while(step < 4);
  1653     048C  085E               	movf	ChangeOfCoordinates@step+1,w
  1654     048D  3A80               	xorlw	128
  1655     048E  00FF               	movwf	btemp+1
  1656     048F  3080               	movlw	128
  1657     0490  027F               	subwf	btemp+1,w
  1658     0491  1D03               	skipz
  1659     0492  2C95               	goto	u965
  1660     0493  3004               	movlw	4
  1661     0494  025D               	subwf	ChangeOfCoordinates@step,w
  1662     0495                     u965:
  1663     0495  1C03               	skipc
  1664     0496  2C98               	goto	u961
  1665     0497  2C99               	goto	u960
  1666     0498                     u961:
  1667     0498  2BD7               	goto	l21
  1668     0499                     u960:
  1669     0499                     l32:
  1670     0499  0008               	return
  1671     049A                     __end_of_ChangeOfCoordinates:
  1672                           
  1673                           	psect	text6
  1674     0316                     __ptext6:	
  1675 ;; *************** function _Rotate *****************
  1676 ;; Defined at:
  1677 ;;		line 55 in file "shape.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  array_          1   30[BANK0 ] PTR unsigned char 
  1680 ;;		 -> main@square_1(3), 
  1681 ;;  length          2   31[BANK0 ] int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               2   42[BANK0 ] int 
  1684 ;;  x               2   40[BANK0 ] int 
  1685 ;;  y               2   44[BANK0 ] int 
  1686 ;;  _i              2   48[BANK0 ] int 
  1687 ;;  res             2   46[BANK0 ] PTR unsigned char 
  1688 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       3       0       0       0
  1699 ;;      Locals:         0      10       0       0       0
  1700 ;;      Temps:          0       7       0       0       0
  1701 ;;      Totals:         0      20       0       0       0
  1702 ;;Total ram usage:       20 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 3
  1705 ;; This function calls:
  1706 ;;		_calloc
  1707 ;;		_free
  1708 ;; This function is called by:
  1709 ;;		_ChangeOfCoordinates
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713     0316                     _Rotate:	
  1714                           ;psect for function _Rotate
  1715                           
  1716     0316                     l1469:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _Rotate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1719                           
  1720                           
  1721                           ;shape.c: 57:     char * res = calloc((size_t)length, sizeof(char));
  1722     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1723     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0318  0840               	movf	Rotate@length+1,w
  1725     0319  00B9               	movwf	calloc@nmemb+1
  1726     031A  083F               	movf	Rotate@length,w
  1727     031B  00B8               	movwf	calloc@nmemb
  1728     031C  3001               	movlw	1
  1729     031D  00BA               	movwf	calloc@size
  1730     031E  3000               	movlw	0
  1731     031F  00BB               	movwf	calloc@size+1
  1732     0320  120A  118A  2157  120A  118A  	fcall	_calloc
  1733     0325  1283               	bcf	3,5	;RP0=0, select bank0
  1734     0326  1303               	bcf	3,6	;RP1=0, select bank0
  1735     0327  0838               	movf	?_calloc,w
  1736     0328  00CE               	movwf	Rotate@res
  1737     0329  0839               	movf	?_calloc+1,w
  1738     032A  00CF               	movwf	Rotate@res+1
  1739     032B                     l1471:
  1740                           
  1741                           ;shape.c: 59:     if (res){
  1742     032B  084E               	movf	Rotate@res,w
  1743     032C  044F               	iorwf	Rotate@res+1,w
  1744     032D  1903               	btfsc	3,2
  1745     032E  2B30               	goto	u851
  1746     032F  2B31               	goto	u850
  1747     0330                     u851:
  1748     0330  2BC7               	goto	l1507
  1749     0331                     u850:
  1750     0331                     l1473:
  1751                           
  1752                           ;shape.c: 60:         for(int _i = length - 1; _i >= 0; _i--){
  1753     0331  083F               	movf	Rotate@length,w
  1754     0332  3EFF               	addlw	255
  1755     0333  00D0               	movwf	Rotate@_i
  1756     0334  0840               	movf	Rotate@length+1,w
  1757     0335  1803               	skipnc
  1758     0336  3E01               	addlw	1
  1759     0337  3EFF               	addlw	255
  1760     0338  00D1               	movwf	Rotate@_i+1
  1761     0339                     l1475:
  1762     0339  1FD1               	btfss	Rotate@_i+1,7
  1763     033A  2B3C               	goto	u861
  1764     033B  2B3D               	goto	u860
  1765     033C                     u861:
  1766     033C  2B3E               	goto	l1479
  1767     033D                     u860:
  1768     033D  2B91               	goto	l1499
  1769     033E                     l1479:
  1770                           
  1771                           ;shape.c: 61:             for(int i = length - 1, x = 0; i >= 0; i--, x++){
  1772     033E  083F               	movf	Rotate@length,w
  1773     033F  3EFF               	addlw	255
  1774     0340  00CA               	movwf	Rotate@i
  1775     0341  0840               	movf	Rotate@length+1,w
  1776     0342  1803               	skipnc
  1777     0343  3E01               	addlw	1
  1778     0344  3EFF               	addlw	255
  1779     0345  00CB               	movwf	Rotate@i+1
  1780     0346                     l1481:
  1781     0346  01C8               	clrf	Rotate@x
  1782     0347  01C9               	clrf	Rotate@x+1
  1783     0348                     l1483:
  1784     0348  1FCB               	btfss	Rotate@i+1,7
  1785     0349  2B4B               	goto	u871
  1786     034A  2B4C               	goto	u870
  1787     034B                     u871:
  1788     034B  2B4D               	goto	l1487
  1789     034C                     u870:
  1790     034C  2B8A               	goto	l1495
  1791     034D                     l1487:
  1792                           
  1793                           ;shape.c: 62:                 res[_i] |= ((array_[x] >> _i ) & 1) << i;
  1794     034D  0848               	movf	Rotate@x,w
  1795     034E  073E               	addwf	Rotate@array_,w
  1796     034F  00C1               	movwf	??_Rotate
  1797     0350  0841               	movf	??_Rotate,w
  1798     0351  0084               	movwf	4
  1799     0352  1383               	bcf	3,7	;select IRP bank0
  1800     0353  0800               	movf	0,w
  1801     0354  00C2               	movwf	??_Rotate+1
  1802     0355  0A50               	incf	Rotate@_i,w
  1803     0356  2B59               	goto	u884
  1804     0357                     u885:
  1805     0357  1003               	clrc
  1806     0358  0CC2               	rrf	??_Rotate+1,f
  1807     0359                     u884:
  1808     0359  3EFF               	addlw	-1
  1809     035A  1D03               	skipz
  1810     035B  2B57               	goto	u885
  1811     035C  0842               	movf	??_Rotate+1,w
  1812     035D  3901               	andlw	1
  1813     035E  00C3               	movwf	??_Rotate+2
  1814     035F  0A4A               	incf	Rotate@i,w
  1815     0360  2B63               	goto	u894
  1816     0361                     u895:
  1817     0361  1003               	clrc
  1818     0362  0DC3               	rlf	??_Rotate+2,f
  1819     0363                     u894:
  1820     0363  3EFF               	addlw	-1
  1821     0364  1D03               	skipz
  1822     0365  2B61               	goto	u895
  1823     0366  0843               	movf	??_Rotate+2,w
  1824     0367  00C4               	movwf	??_Rotate+3
  1825     0368  0850               	movf	Rotate@_i,w
  1826     0369  074E               	addwf	Rotate@res,w
  1827     036A  00C6               	movwf	??_Rotate+5
  1828     036B  084F               	movf	Rotate@res+1,w
  1829     036C  00C5               	movwf	??_Rotate+4
  1830     036D  1803               	skipnc
  1831     036E  0AC5               	incf	??_Rotate+4,f
  1832     036F  1FD0               	btfss	Rotate@_i,7
  1833     0370  2B72               	goto	u900
  1834     0371  03C5               	decf	??_Rotate+4,f
  1835     0372                     u900:
  1836     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1837     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1838     0374  0845               	movf	??_Rotate+4,w
  1839     0375  00C7               	movwf	??_Rotate+6
  1840     0376  0846               	movf	??_Rotate+5,w
  1841     0377  0084               	movwf	4
  1842     0378  1783               	bsf	3,7
  1843     0379  1C47               	btfss	??_Rotate+6,0
  1844     037A  1383               	bcf	3,7
  1845     037B  0844               	movf	??_Rotate+3,w
  1846     037C  0480               	iorwf	0,f
  1847     037D                     l1489:
  1848                           
  1849                           ;shape.c: 63:             }
  1850     037D  30FF               	movlw	255
  1851     037E  07CA               	addwf	Rotate@i,f
  1852     037F  1803               	skipnc
  1853     0380  0ACB               	incf	Rotate@i+1,f
  1854     0381  30FF               	movlw	255
  1855     0382  07CB               	addwf	Rotate@i+1,f
  1856     0383                     l1491:
  1857     0383  3001               	movlw	1
  1858     0384  07C8               	addwf	Rotate@x,f
  1859     0385  1803               	skipnc
  1860     0386  0AC9               	incf	Rotate@x+1,f
  1861     0387  3000               	movlw	0
  1862     0388  07C9               	addwf	Rotate@x+1,f
  1863     0389  2B48               	goto	l1483
  1864     038A                     l1495:
  1865                           
  1866                           ;shape.c: 64:         }
  1867     038A  30FF               	movlw	255
  1868     038B  07D0               	addwf	Rotate@_i,f
  1869     038C  1803               	skipnc
  1870     038D  0AD1               	incf	Rotate@_i+1,f
  1871     038E  30FF               	movlw	255
  1872     038F  07D1               	addwf	Rotate@_i+1,f
  1873     0390  2B39               	goto	l1475
  1874     0391                     l1499:
  1875                           
  1876                           ;shape.c: 66:         for(int y = 0; y < length; y++){
  1877     0391  01CC               	clrf	Rotate@y
  1878     0392  01CD               	clrf	Rotate@y+1
  1879     0393  2BB9               	goto	l1505
  1880     0394                     l1501:
  1881                           
  1882                           ;shape.c: 67:             array_[y] = res[y];
  1883     0394  1283               	bcf	3,5	;RP0=0, select bank0
  1884     0395  1303               	bcf	3,6	;RP1=0, select bank0
  1885     0396  084C               	movf	Rotate@y,w
  1886     0397  074E               	addwf	Rotate@res,w
  1887     0398  00C2               	movwf	??_Rotate+1
  1888     0399  084F               	movf	Rotate@res+1,w
  1889     039A  00C1               	movwf	??_Rotate
  1890     039B  1803               	skipnc
  1891     039C  0AC1               	incf	??_Rotate,f
  1892     039D  1FCC               	btfss	Rotate@y,7
  1893     039E  2BA0               	goto	u910
  1894     039F  03C1               	decf	??_Rotate,f
  1895     03A0                     u910:
  1896     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1897     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1898     03A2  0841               	movf	??_Rotate,w
  1899     03A3  00C3               	movwf	??_Rotate+2
  1900     03A4  0842               	movf	??_Rotate+1,w
  1901     03A5  0084               	movwf	4
  1902     03A6  1783               	bsf	3,7
  1903     03A7  1C43               	btfss	??_Rotate+2,0
  1904     03A8  1383               	bcf	3,7
  1905     03A9  0800               	movf	0,w
  1906     03AA  00C4               	movwf	??_Rotate+3
  1907     03AB  084C               	movf	Rotate@y,w
  1908     03AC  073E               	addwf	Rotate@array_,w
  1909     03AD  00C5               	movwf	??_Rotate+4
  1910     03AE  0845               	movf	??_Rotate+4,w
  1911     03AF  0084               	movwf	4
  1912     03B0  0844               	movf	??_Rotate+3,w
  1913     03B1  1383               	bcf	3,7	;select IRP bank0
  1914     03B2  0080               	movwf	0
  1915     03B3                     l1503:
  1916                           
  1917                           ;shape.c: 68:         }
  1918     03B3  3001               	movlw	1
  1919     03B4  07CC               	addwf	Rotate@y,f
  1920     03B5  1803               	skipnc
  1921     03B6  0ACD               	incf	Rotate@y+1,f
  1922     03B7  3000               	movlw	0
  1923     03B8  07CD               	addwf	Rotate@y+1,f
  1924     03B9                     l1505:
  1925     03B9  084D               	movf	Rotate@y+1,w
  1926     03BA  3A80               	xorlw	128
  1927     03BB  00C1               	movwf	??_Rotate
  1928     03BC  0840               	movf	Rotate@length+1,w
  1929     03BD  3A80               	xorlw	128
  1930     03BE  0241               	subwf	??_Rotate,w
  1931     03BF  1D03               	skipz
  1932     03C0  2BC3               	goto	u925
  1933     03C1  083F               	movf	Rotate@length,w
  1934     03C2  024C               	subwf	Rotate@y,w
  1935     03C3                     u925:
  1936     03C3  1C03               	skipc
  1937     03C4  2BC6               	goto	u921
  1938     03C5  2BC7               	goto	u920
  1939     03C6                     u921:
  1940     03C6  2B94               	goto	l1501
  1941     03C7                     u920:
  1942     03C7                     l1507:
  1943                           
  1944                           ;shape.c: 70:     free(res);
  1945     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1946     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1947     03C9  084E               	movf	Rotate@res,w
  1948     03CA  00F1               	movwf	free@ptr
  1949     03CB  084F               	movf	Rotate@res+1,w
  1950     03CC  00F2               	movwf	free@ptr+1
  1951     03CD  120A  118A  2564  120A  118A  	fcall	_free
  1952     03D2                     l141:
  1953     03D2  0008               	return
  1954     03D3                     __end_of_Rotate:
  1955                           
  1956                           	psect	text7
  1957     0564                     __ptext7:	
  1958 ;; *************** function _free *****************
  1959 ;; Defined at:
  1960 ;;		line 67 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  ptr             2    0[COMMON] PTR void 
  1963 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  c               2   10[COMMON] PTR struct chunk
  1966 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1967 ;;  cptr            2    8[COMMON] PTR unsigned char 
  1968 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         2       0       0       0       0
  1979 ;;      Locals:         4       0       0       0       0
  1980 ;;      Temps:          6       0       0       0       0
  1981 ;;      Totals:        12       0       0       0       0
  1982 ;;Total ram usage:       12 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_Rotate
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991     0564                     _free:	
  1992                           ;psect for function _free
  1993                           
  1994     0564                     l1403:	
  1995                           ;incstack = 0
  1996                           ; Regs used in _free: [wreg-fsr0h+status,2+status,0+btemp+1]
  1997                           
  1998     0564  0871               	movf	free@ptr,w
  1999     0565  00F9               	movwf	free@cptr
  2000     0566  0872               	movf	free@ptr+1,w
  2001     0567  00FA               	movwf	free@cptr+1
  2002     0568  0871               	movf	free@ptr,w
  2003     0569  0472               	iorwf	free@ptr+1,w
  2004     056A  1D03               	btfss	3,2
  2005     056B  2D6D               	goto	u801
  2006     056C  2D6E               	goto	u800
  2007     056D                     u801:
  2008     056D  2D6F               	goto	l1407
  2009     056E                     u800:
  2010     056E  2E51               	goto	l720
  2011     056F                     l1407:
  2012     056F  30FE               	movlw	254
  2013     0570  00F3               	movwf	??_free
  2014     0571  0873               	movf	??_free,w
  2015     0572  0779               	addwf	free@cptr,w
  2016     0573  00FB               	movwf	free@c
  2017     0574  087A               	movf	free@cptr+1,w
  2018     0575  00F4               	movwf	??_free+1
  2019     0576  1803               	skipnc
  2020     0577  0AF4               	incf	??_free+1,f
  2021     0578  1BF3               	btfsc	??_free,7
  2022     0579  03F4               	decf	??_free+1,f
  2023     057A  0874               	movf	??_free+1,w
  2024     057B  00FC               	movwf	free@c+1
  2025     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2026     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2027     057E  086D               	movf	___freelist,w
  2028     057F  046E               	iorwf	___freelist+1,w
  2029     0580  1903               	btfsc	3,2
  2030     0581  2D83               	goto	u811
  2031     0582  2D84               	goto	u810
  2032     0583                     u811:
  2033     0583  2E40               	goto	l1429
  2034     0584                     u810:
  2035     0584                     l1409:
  2036     0584  087B               	movf	free@c,w
  2037     0585  0084               	movwf	4
  2038     0586  1783               	bsf	3,7
  2039     0587  1C7C               	btfss	free@c+1,0
  2040     0588  1383               	bcf	3,7
  2041     0589  0800               	movf	0,w
  2042     058A  0779               	addwf	free@cptr,w
  2043     058B  00F3               	movwf	??_free
  2044     058C  087A               	movf	free@cptr+1,w
  2045     058D  1803               	skipnc
  2046     058E  3E01               	addlw	1
  2047     058F  00F4               	movwf	??_free+1
  2048     0590  0874               	movf	??_free+1,w
  2049     0591  066E               	xorwf	___freelist+1,w
  2050     0592  1D03               	skipz
  2051     0593  2D96               	goto	u825
  2052     0594  0873               	movf	??_free,w
  2053     0595  066D               	xorwf	___freelist,w
  2054     0596                     u825:
  2055     0596  1D03               	skipz
  2056     0597  2D99               	goto	u821
  2057     0598  2D9A               	goto	u820
  2058     0599                     u821:
  2059     0599  2DE6               	goto	l1421
  2060     059A                     u820:
  2061     059A                     l1411:
  2062     059A  086D               	movf	___freelist,w
  2063     059B  3E02               	addlw	2
  2064     059C  00F3               	movwf	??_free
  2065     059D  086E               	movf	___freelist+1,w
  2066     059E  1803               	skipnc
  2067     059F  3E01               	addlw	1
  2068     05A0  3E00               	addlw	0
  2069     05A1  00F4               	movwf	??_free+1
  2070     05A2  0873               	movf	??_free,w
  2071     05A3  0084               	movwf	4
  2072     05A4  1783               	bsf	3,7
  2073     05A5  1C74               	btfss	??_free+1,0
  2074     05A6  1383               	bcf	3,7
  2075     05A7  0800               	movf	0,w
  2076     05A8  00F5               	movwf	??_free+2
  2077     05A9  0A84               	incf	4,f
  2078     05AA  0800               	movf	0,w
  2079     05AB  00F6               	movwf	??_free+3
  2080     05AC  087B               	movf	free@c,w
  2081     05AD  3E02               	addlw	2
  2082     05AE  00F7               	movwf	??_free+4
  2083     05AF  087C               	movf	free@c+1,w
  2084     05B0  1803               	skipnc
  2085     05B1  3E01               	addlw	1
  2086     05B2  3E00               	addlw	0
  2087     05B3  00F8               	movwf	??_free+5
  2088     05B4  0877               	movf	??_free+4,w
  2089     05B5  0084               	movwf	4
  2090     05B6  1783               	bsf	3,7
  2091     05B7  1C78               	btfss	??_free+5,0
  2092     05B8  1383               	bcf	3,7
  2093     05B9  0875               	movf	??_free+2,w
  2094     05BA  0080               	movwf	0
  2095     05BB  0876               	movf	??_free+3,w
  2096     05BC  0A84               	incf	4,f
  2097     05BD  0080               	movwf	0
  2098     05BE  0384               	decf	4,f
  2099     05BF                     l1413:
  2100     05BF  086D               	movf	___freelist,w
  2101     05C0  0084               	movwf	4
  2102     05C1  1783               	bsf	3,7
  2103     05C2  1C6E               	btfss	___freelist+1,0
  2104     05C3  1383               	bcf	3,7
  2105     05C4  0800               	movf	0,w
  2106     05C5  00F3               	movwf	??_free
  2107     05C6  0A84               	incf	4,f
  2108     05C7  0800               	movf	0,w
  2109     05C8  00F4               	movwf	??_free+1
  2110     05C9  0873               	movf	??_free,w
  2111     05CA  3E02               	addlw	2
  2112     05CB  00F5               	movwf	??_free+2
  2113     05CC  0874               	movf	??_free+1,w
  2114     05CD  1803               	skipnc
  2115     05CE  3E01               	addlw	1
  2116     05CF  3E00               	addlw	0
  2117     05D0  00F6               	movwf	??_free+3
  2118     05D1  087B               	movf	free@c,w
  2119     05D2  0084               	movwf	4
  2120     05D3  1783               	bsf	3,7
  2121     05D4  1C7C               	btfss	free@c+1,0
  2122     05D5  1383               	bcf	3,7
  2123     05D6  0875               	movf	??_free+2,w
  2124     05D7  0780               	addwf	0,f
  2125     05D8  0F84               	incfsz	4,f
  2126     05D9  0800               	movf	0,w
  2127     05DA  1803               	skipnc
  2128     05DB  0A00               	incf	0,w
  2129     05DC  00FF               	movwf	btemp+1
  2130     05DD  0876               	movf	??_free+3,w
  2131     05DE  077F               	addwf	btemp+1,w
  2132     05DF  0080               	movwf	0
  2133     05E0  0384               	decf	4,f
  2134     05E1                     l1415:
  2135     05E1  087B               	movf	free@c,w
  2136     05E2  00ED               	movwf	___freelist
  2137     05E3  087C               	movf	free@c+1,w
  2138     05E4  00EE               	movwf	___freelist+1
  2139     05E5  2E51               	goto	l720
  2140     05E6                     l1421:
  2141     05E6  086D               	movf	___freelist,w
  2142     05E7  0084               	movwf	4
  2143     05E8  1783               	bsf	3,7
  2144     05E9  1C6E               	btfss	___freelist+1,0
  2145     05EA  1383               	bcf	3,7
  2146     05EB  0800               	movf	0,w
  2147     05EC  00F3               	movwf	??_free
  2148     05ED  0A84               	incf	4,f
  2149     05EE  0800               	movf	0,w
  2150     05EF  00F4               	movwf	??_free+1
  2151     05F0  0873               	movf	??_free,w
  2152     05F1  076D               	addwf	___freelist,w
  2153     05F2  00F5               	movwf	??_free+2
  2154     05F3  0874               	movf	??_free+1,w
  2155     05F4  1803               	skipnc
  2156     05F5  0A74               	incf	??_free+1,w
  2157     05F6  076E               	addwf	___freelist+1,w
  2158     05F7  00F6               	movwf	??_free+3
  2159     05F8  0875               	movf	??_free+2,w
  2160     05F9  3E02               	addlw	2
  2161     05FA  00F7               	movwf	??_free+4
  2162     05FB  0876               	movf	??_free+3,w
  2163     05FC  1803               	skipnc
  2164     05FD  3E01               	addlw	1
  2165     05FE  3E00               	addlw	0
  2166     05FF  00F8               	movwf	??_free+5
  2167     0600  087C               	movf	free@c+1,w
  2168     0601  0678               	xorwf	??_free+5,w
  2169     0602  1D03               	skipz
  2170     0603  2E06               	goto	u835
  2171     0604  087B               	movf	free@c,w
  2172     0605  0677               	xorwf	??_free+4,w
  2173     0606                     u835:
  2174     0606  1D03               	skipz
  2175     0607  2E09               	goto	u831
  2176     0608  2E0A               	goto	u830
  2177     0609                     u831:
  2178     0609  2E2D               	goto	l1427
  2179     060A                     u830:
  2180     060A                     l1423:
  2181     060A  087B               	movf	free@c,w
  2182     060B  0084               	movwf	4
  2183     060C  1783               	bsf	3,7
  2184     060D  1C7C               	btfss	free@c+1,0
  2185     060E  1383               	bcf	3,7
  2186     060F  0800               	movf	0,w
  2187     0610  00F3               	movwf	??_free
  2188     0611  0A84               	incf	4,f
  2189     0612  0800               	movf	0,w
  2190     0613  00F4               	movwf	??_free+1
  2191     0614  0873               	movf	??_free,w
  2192     0615  3E02               	addlw	2
  2193     0616  00F5               	movwf	??_free+2
  2194     0617  0874               	movf	??_free+1,w
  2195     0618  1803               	skipnc
  2196     0619  3E01               	addlw	1
  2197     061A  3E00               	addlw	0
  2198     061B  00F6               	movwf	??_free+3
  2199     061C  086D               	movf	___freelist,w
  2200     061D  0084               	movwf	4
  2201     061E  1783               	bsf	3,7
  2202     061F  1C6E               	btfss	___freelist+1,0
  2203     0620  1383               	bcf	3,7
  2204     0621  0875               	movf	??_free+2,w
  2205     0622  0780               	addwf	0,f
  2206     0623  0F84               	incfsz	4,f
  2207     0624  0800               	movf	0,w
  2208     0625  1803               	skipnc
  2209     0626  0A00               	incf	0,w
  2210     0627  00FF               	movwf	btemp+1
  2211     0628  0876               	movf	??_free+3,w
  2212     0629  077F               	addwf	btemp+1,w
  2213     062A  0080               	movwf	0
  2214     062B  0384               	decf	4,f
  2215     062C  2E51               	goto	l720
  2216     062D                     l1427:
  2217     062D  087B               	movf	free@c,w
  2218     062E  3E02               	addlw	2
  2219     062F  00F3               	movwf	??_free
  2220     0630  087C               	movf	free@c+1,w
  2221     0631  1803               	skipnc
  2222     0632  3E01               	addlw	1
  2223     0633  3E00               	addlw	0
  2224     0634  00F4               	movwf	??_free+1
  2225     0635  0873               	movf	??_free,w
  2226     0636  0084               	movwf	4
  2227     0637  1783               	bsf	3,7
  2228     0638  1C74               	btfss	??_free+1,0
  2229     0639  1383               	bcf	3,7
  2230     063A  086D               	movf	___freelist,w
  2231     063B  0080               	movwf	0
  2232     063C  0A84               	incf	4,f
  2233     063D  086E               	movf	___freelist+1,w
  2234     063E  0080               	movwf	0
  2235     063F  2DE1               	goto	l1415
  2236     0640                     l1429:
  2237     0640  087B               	movf	free@c,w
  2238     0641  3E02               	addlw	2
  2239     0642  00F3               	movwf	??_free
  2240     0643  087C               	movf	free@c+1,w
  2241     0644  1803               	skipnc
  2242     0645  3E01               	addlw	1
  2243     0646  3E00               	addlw	0
  2244     0647  00F4               	movwf	??_free+1
  2245     0648  0873               	movf	??_free,w
  2246     0649  0084               	movwf	4
  2247     064A  1783               	bsf	3,7
  2248     064B  1C74               	btfss	??_free+1,0
  2249     064C  1383               	bcf	3,7
  2250     064D  0180               	clrf	0
  2251     064E  0A84               	incf	4,f
  2252     064F  0180               	clrf	0
  2253     0650  2DE1               	goto	l1415
  2254     0651                     l720:
  2255     0651  0008               	return
  2256     0652                     __end_of_free:
  2257                           
  2258                           	psect	text8
  2259     0157                     __ptext8:	
  2260 ;; *************** function _calloc *****************
  2261 ;; Defined at:
  2262 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_calloc.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  nmemb           2   24[BANK0 ] unsigned int 
  2265 ;;  size            2   26[BANK0 ] unsigned int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  new_ptr         2   28[BANK0 ] PTR void 
  2268 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  2   24[BANK0 ] PTR void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       4       0       0       0
  2279 ;;      Locals:         0       2       0       0       0
  2280 ;;      Temps:          0       0       0       0       0
  2281 ;;      Totals:         0       6       0       0       0
  2282 ;;Total ram usage:        6 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 2
  2285 ;; This function calls:
  2286 ;;		___wmul
  2287 ;;		_malloc
  2288 ;;		_memset
  2289 ;; This function is called by:
  2290 ;;		_Rotate
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294     0157                     _calloc:	
  2295                           ;psect for function _calloc
  2296                           
  2297     0157                     l1393:	
  2298                           ;incstack = 0
  2299                           ; Regs used in _calloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2300                           
  2301     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2302     0158  1303               	bcf	3,6	;RP1=0, select bank0
  2303     0159  0839               	movf	calloc@nmemb+1,w
  2304     015A  00F2               	movwf	___wmul@multiplier+1
  2305     015B  0838               	movf	calloc@nmemb,w
  2306     015C  00F1               	movwf	___wmul@multiplier
  2307     015D  083B               	movf	calloc@size+1,w
  2308     015E  00F4               	movwf	___wmul@multiplicand+1
  2309     015F  083A               	movf	calloc@size,w
  2310     0160  00F3               	movwf	___wmul@multiplicand
  2311     0161  120A  118A  20AF  120A  118A  	fcall	___wmul
  2312     0166  0872               	movf	?___wmul+1,w
  2313     0167  00FA               	movwf	malloc@n+1
  2314     0168  0871               	movf	?___wmul,w
  2315     0169  00F9               	movwf	malloc@n
  2316     016A  120A  118A  249A  120A  118A  	fcall	_malloc
  2317     016F  0879               	movf	?_malloc,w
  2318     0170  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0171  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0172  00BC               	movwf	calloc@new_ptr
  2321     0173  087A               	movf	?_malloc+1,w
  2322     0174  00BD               	movwf	calloc@new_ptr+1
  2323     0175                     l1395:
  2324     0175  083C               	movf	calloc@new_ptr,w
  2325     0176  043D               	iorwf	calloc@new_ptr+1,w
  2326     0177  1903               	btfsc	3,2
  2327     0178  297A               	goto	u791
  2328     0179  297B               	goto	u790
  2329     017A                     u791:
  2330     017A  2998               	goto	l1399
  2331     017B                     u790:
  2332     017B                     l1397:
  2333     017B  083C               	movf	calloc@new_ptr,w
  2334     017C  00F7               	movwf	memset@dest
  2335     017D  083D               	movf	calloc@new_ptr+1,w
  2336     017E  00F8               	movwf	memset@dest+1
  2337     017F  3000               	movlw	0
  2338     0180  00F9               	movwf	memset@c
  2339     0181  00FA               	movwf	memset@c+1
  2340     0182  0839               	movf	calloc@nmemb+1,w
  2341     0183  00F2               	movwf	___wmul@multiplier+1
  2342     0184  0838               	movf	calloc@nmemb,w
  2343     0185  00F1               	movwf	___wmul@multiplier
  2344     0186  083B               	movf	calloc@size+1,w
  2345     0187  00F4               	movwf	___wmul@multiplicand+1
  2346     0188  083A               	movf	calloc@size,w
  2347     0189  00F3               	movwf	___wmul@multiplicand
  2348     018A  120A  118A  20AF  120A  118A  	fcall	___wmul
  2349     018F  0872               	movf	?___wmul+1,w
  2350     0190  00FC               	movwf	memset@n+1
  2351     0191  0871               	movf	?___wmul,w
  2352     0192  00FB               	movwf	memset@n
  2353     0193  120A  118A  208E  120A  118A  	fcall	_memset
  2354     0198                     l1399:
  2355     0198  1283               	bcf	3,5	;RP0=0, select bank0
  2356     0199  1303               	bcf	3,6	;RP1=0, select bank0
  2357     019A  083C               	movf	calloc@new_ptr,w
  2358     019B  00B8               	movwf	?_calloc
  2359     019C  083D               	movf	calloc@new_ptr+1,w
  2360     019D  00B9               	movwf	?_calloc+1
  2361     019E                     l697:
  2362     019E  0008               	return
  2363     019F                     __end_of_calloc:
  2364                           
  2365                           	psect	text9
  2366     008E                     __ptext9:	
  2367 ;; *************** function _memset *****************
  2368 ;; Defined at:
  2369 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  dest            2    6[COMMON] PTR void 
  2372 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2373 ;;  c               2    8[COMMON] int 
  2374 ;;  n               2   10[COMMON] unsigned int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  p               2    0[BANK0 ] PTR unsigned char 
  2377 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  2    6[COMMON] PTR void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         6       0       0       0       0
  2388 ;;      Locals:         0       2       0       0       0
  2389 ;;      Temps:          0       0       0       0       0
  2390 ;;      Totals:         6       2       0       0       0
  2391 ;;Total ram usage:        8 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_calloc
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     008E                     _memset:	
  2401                           ;psect for function _memset
  2402                           
  2403     008E                     l1359:	
  2404                           ;incstack = 0
  2405                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2406                           
  2407     008E  0877               	movf	memset@dest,w
  2408     008F  1283               	bcf	3,5	;RP0=0, select bank0
  2409     0090  1303               	bcf	3,6	;RP1=0, select bank0
  2410     0091  00A0               	movwf	memset@p
  2411     0092  0878               	movf	memset@dest+1,w
  2412     0093  00A1               	movwf	memset@p+1
  2413     0094  28A0               	goto	l1365
  2414     0095                     l1361:
  2415     0095  0820               	movf	memset@p,w
  2416     0096  0084               	movwf	4
  2417     0097  1783               	bsf	3,7
  2418     0098  1C21               	btfss	memset@p+1,0
  2419     0099  1383               	bcf	3,7
  2420     009A  0879               	movf	memset@c,w
  2421     009B  0080               	movwf	0
  2422     009C                     l1363:
  2423     009C  3001               	movlw	1
  2424     009D  07A0               	addwf	memset@p,f
  2425     009E  1803               	skipnc
  2426     009F  0AA1               	incf	memset@p+1,f
  2427     00A0                     l1365:
  2428     00A0  3001               	movlw	1
  2429     00A1  02FB               	subwf	memset@n,f
  2430     00A2  3000               	movlw	0
  2431     00A3  1C03               	skipc
  2432     00A4  03FC               	decf	memset@n+1,f
  2433     00A5  02FC               	subwf	memset@n+1,f
  2434     00A6  0A7B               	incf	memset@n,w
  2435     00A7  1D03               	skipz
  2436     00A8  28AD               	goto	u751
  2437     00A9  0A7C               	incf	memset@n+1,w
  2438     00AA  1D03               	btfss	3,2
  2439     00AB  28AD               	goto	u751
  2440     00AC  28AE               	goto	u750
  2441     00AD                     u751:
  2442     00AD  2895               	goto	l1361
  2443     00AE                     u750:
  2444     00AE                     l773:
  2445     00AE  0008               	return
  2446     00AF                     __end_of_memset:
  2447                           
  2448                           	psect	text10
  2449     049A                     __ptext10:	
  2450 ;; *************** function _malloc *****************
  2451 ;; Defined at:
  2452 ;;		line 16 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_malloc.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  n               2    8[COMMON] unsigned int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  sz              2   16[BANK0 ] PTR unsigned int 
  2457 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2458 ;;  new             2   22[BANK0 ] PTR unsigned char 
  2459 ;;		 -> __heap_hi(0), NULL(0), 
  2460 ;;  m               2   14[BANK0 ] unsigned int 
  2461 ;;  p               2   20[BANK0 ] PTR void 
  2462 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2463 ;;  size            2   18[BANK0 ] unsigned int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2    8[COMMON] PTR void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         2       0       0       0       0
  2474 ;;      Locals:         0      10       0       0       0
  2475 ;;      Temps:          2       0       0       0       0
  2476 ;;      Totals:         4      10       0       0       0
  2477 ;;Total ram usage:       14 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		___expand_heap
  2482 ;;		___simple_search_fl
  2483 ;; This function is called by:
  2484 ;;		_calloc
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488     049A                     _malloc:	
  2489                           ;psect for function _malloc
  2490                           
  2491     049A                     l1307:	
  2492                           ;incstack = 0
  2493                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2494                           
  2495     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2496     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2497     049C  01B2               	clrf	malloc@size
  2498     049D  01B3               	clrf	malloc@size+1
  2499     049E                     l1309:
  2500     049E  0879               	movf	malloc@n,w
  2501     049F  047A               	iorwf	malloc@n+1,w
  2502     04A0  1D03               	btfss	3,2
  2503     04A1  2CA3               	goto	u681
  2504     04A2  2CA4               	goto	u680
  2505     04A3                     u681:
  2506     04A3  2CAA               	goto	l740
  2507     04A4                     u680:
  2508     04A4                     l1311:
  2509     04A4  3001               	movlw	1
  2510     04A5  07F9               	addwf	malloc@n,f
  2511     04A6  1803               	skipnc
  2512     04A7  0AFA               	incf	malloc@n+1,f
  2513     04A8  3000               	movlw	0
  2514     04A9  07FA               	addwf	malloc@n+1,f
  2515     04AA                     l740:
  2516     04AA  3000               	movlw	0
  2517     04AB  027A               	subwf	malloc@n+1,w
  2518     04AC  3002               	movlw	2
  2519     04AD  1903               	skipnz
  2520     04AE  0279               	subwf	malloc@n,w
  2521     04AF  1803               	skipnc
  2522     04B0  2CB2               	goto	u691
  2523     04B1  2CB3               	goto	u690
  2524     04B2                     u691:
  2525     04B2  2CB8               	goto	l1315
  2526     04B3                     u690:
  2527     04B3                     l1313:
  2528     04B3  3002               	movlw	2
  2529     04B4  00F9               	movwf	malloc@n
  2530     04B5  3000               	movlw	0
  2531     04B6  00FA               	movwf	malloc@n+1
  2532     04B7  2CD0               	goto	l1323
  2533     04B8                     l1315:
  2534     04B8  087A               	movf	malloc@n+1,w
  2535     04B9  00FC               	movwf	??_malloc+1
  2536     04BA  0879               	movf	malloc@n,w
  2537     04BB  00FB               	movwf	??_malloc
  2538     04BC  09FB               	comf	??_malloc,f
  2539     04BD  09FC               	comf	??_malloc+1,f
  2540     04BE  3000               	movlw	0
  2541     04BF  027C               	subwf	??_malloc+1,w
  2542     04C0  3002               	movlw	2
  2543     04C1  1903               	skipnz
  2544     04C2  027B               	subwf	??_malloc,w
  2545     04C3  1803               	skipnc
  2546     04C4  2CC6               	goto	u701
  2547     04C5  2CC7               	goto	u700
  2548     04C6                     u701:
  2549     04C6  2CD0               	goto	l1323
  2550     04C7                     u700:
  2551     04C7                     l1317:
  2552     04C7  300C               	movlw	12
  2553     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2554     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2555     04CA  00A6               	movwf	_errno^(0+128)
  2556     04CB  3000               	movlw	0
  2557     04CC  00A7               	movwf	(_errno^(0+128)+1)
  2558     04CD                     l1319:
  2559     04CD  01F9               	clrf	?_malloc
  2560     04CE  01FA               	clrf	?_malloc+1
  2561     04CF  2D63               	goto	l744
  2562     04D0                     l1323:
  2563     04D0                     l1325:
  2564     04D0  087A               	movf	malloc@n+1,w
  2565     04D1  00F2               	movwf	___simple_search_fl@n+1
  2566     04D2  0879               	movf	malloc@n,w
  2567     04D3  00F1               	movwf	___simple_search_fl@n
  2568     04D4  120A  118A  2652  120A  118A  	fcall	___simple_search_fl
  2569     04D9  0871               	movf	?___simple_search_fl,w
  2570     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2571     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2572     04DC  00B4               	movwf	malloc@p
  2573     04DD  0872               	movf	?___simple_search_fl+1,w
  2574     04DE  00B5               	movwf	malloc@p+1
  2575     04DF                     l1327:
  2576     04DF  0834               	movf	malloc@p,w
  2577     04E0  0435               	iorwf	malloc@p+1,w
  2578     04E1  1D03               	btfss	3,2
  2579     04E2  2CE4               	goto	u711
  2580     04E3  2CE5               	goto	u710
  2581     04E4                     u711:
  2582     04E4  2D5F               	goto	l1355
  2583     04E5                     u710:
  2584     04E5                     l1329:
  2585     04E5  086B               	movf	malloc@cur,w
  2586     04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2587     04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2588     04E8  0224               	subwf	malloc@end^(0+128),w
  2589     04E9  00FB               	movwf	??_malloc
  2590     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2591     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2592     04EC  086C               	movf	malloc@cur+1,w
  2593     04ED  1C03               	skipc
  2594     04EE  0A6C               	incf	malloc@cur+1,w
  2595     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2596     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2597     04F1  0225               	subwf	(malloc@end+1)^(0+128),w
  2598     04F2  00FC               	movwf	??_malloc+1
  2599     04F3  087A               	movf	malloc@n+1,w
  2600     04F4  027C               	subwf	??_malloc+1,w
  2601     04F5  1D03               	skipz
  2602     04F6  2CF9               	goto	u725
  2603     04F7  0879               	movf	malloc@n,w
  2604     04F8  027B               	subwf	??_malloc,w
  2605     04F9                     u725:
  2606     04F9  1803               	skipnc
  2607     04FA  2CFC               	goto	u721
  2608     04FB  2CFD               	goto	u720
  2609     04FC                     u721:
  2610     04FC  2D3E               	goto	l746
  2611     04FD                     u720:
  2612     04FD                     l1331:
  2613     04FD  0879               	movf	malloc@n,w
  2614     04FE  3E02               	addlw	2
  2615     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2616     0500  1303               	bcf	3,6	;RP1=0, select bank0
  2617     0501  00AE               	movwf	malloc@m
  2618     0502  087A               	movf	malloc@n+1,w
  2619     0503  1803               	skipnc
  2620     0504  3E01               	addlw	1
  2621     0505  3E00               	addlw	0
  2622     0506  00AF               	movwf	malloc@m+1
  2623     0507                     l1333:
  2624     0507  302E               	movlw	(low (malloc@m| 0))& (0+255)
  2625     0508  00F1               	movwf	___expand_heap@pn
  2626     0509  120A  118A  219F  120A  118A  	fcall	___expand_heap
  2627     050E  0871               	movf	?___expand_heap,w
  2628     050F  1283               	bcf	3,5	;RP0=0, select bank0
  2629     0510  1303               	bcf	3,6	;RP1=0, select bank0
  2630     0511  00B6               	movwf	malloc@new
  2631     0512  0872               	movf	?___expand_heap+1,w
  2632     0513  00B7               	movwf	malloc@new+1
  2633     0514                     l1335:
  2634     0514  0836               	movf	malloc@new,w
  2635     0515  0437               	iorwf	malloc@new+1,w
  2636     0516  1D03               	btfss	3,2
  2637     0517  2D19               	goto	u731
  2638     0518  2D1A               	goto	u730
  2639     0519                     u731:
  2640     0519  2D1B               	goto	l1341
  2641     051A                     u730:
  2642     051A  2CCD               	goto	l1319
  2643     051B                     l1341:
  2644     051B  1683               	bsf	3,5	;RP0=1, select bank1
  2645     051C  1303               	bcf	3,6	;RP1=0, select bank1
  2646     051D  0825               	movf	(malloc@end+1)^(0+128),w
  2647     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2648     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2649     0520  0637               	xorwf	malloc@new+1,w
  2650     0521  1D03               	skipz
  2651     0522  2D29               	goto	u745
  2652     0523  1683               	bsf	3,5	;RP0=1, select bank1
  2653     0524  1303               	bcf	3,6	;RP1=0, select bank1
  2654     0525  0824               	movf	malloc@end^(0+128),w
  2655     0526  1283               	bcf	3,5	;RP0=0, select bank0
  2656     0527  1303               	bcf	3,6	;RP1=0, select bank0
  2657     0528  0636               	xorwf	malloc@new,w
  2658     0529                     u745:
  2659     0529  1903               	skipnz
  2660     052A  2D2C               	goto	u741
  2661     052B  2D2D               	goto	u740
  2662     052C                     u741:
  2663     052C  2D31               	goto	l748
  2664     052D                     u740:
  2665     052D                     l1343:
  2666     052D  0836               	movf	malloc@new,w
  2667     052E  00EB               	movwf	malloc@cur
  2668     052F  0837               	movf	malloc@new+1,w
  2669     0530  00EC               	movwf	malloc@cur+1
  2670     0531                     l748:
  2671     0531  082E               	movf	malloc@m,w
  2672     0532  0736               	addwf	malloc@new,w
  2673     0533  1683               	bsf	3,5	;RP0=1, select bank1
  2674     0534  1303               	bcf	3,6	;RP1=0, select bank1
  2675     0535  00A4               	movwf	malloc@end^(0+128)
  2676     0536  1283               	bcf	3,5	;RP0=0, select bank0
  2677     0537  1303               	bcf	3,6	;RP1=0, select bank0
  2678     0538  0837               	movf	malloc@new+1,w
  2679     0539  1803               	skipnc
  2680     053A  3E01               	addlw	1
  2681     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2682     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2683     053D  00A5               	movwf	(malloc@end^(0+128)+1)
  2684     053E                     l746:
  2685     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2686     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2687     0540  086B               	movf	malloc@cur,w
  2688     0541  00B4               	movwf	malloc@p
  2689     0542  086C               	movf	malloc@cur+1,w
  2690     0543  00B5               	movwf	malloc@p+1
  2691     0544                     l1345:
  2692     0544  0834               	movf	malloc@p,w
  2693     0545  00B0               	movwf	malloc@sz
  2694     0546  0835               	movf	malloc@p+1,w
  2695     0547  00B1               	movwf	malloc@sz+1
  2696     0548                     l1347:
  2697     0548  0830               	movf	malloc@sz,w
  2698     0549  0084               	movwf	4
  2699     054A  1783               	bsf	3,7
  2700     054B  1C31               	btfss	malloc@sz+1,0
  2701     054C  1383               	bcf	3,7
  2702     054D  0879               	movf	malloc@n,w
  2703     054E  0080               	movwf	0
  2704     054F  0A84               	incf	4,f
  2705     0550  087A               	movf	malloc@n+1,w
  2706     0551  0080               	movwf	0
  2707     0552                     l1349:
  2708     0552  3002               	movlw	2
  2709     0553  07B0               	addwf	malloc@sz,f
  2710     0554  1803               	skipnc
  2711     0555  0AB1               	incf	malloc@sz+1,f
  2712     0556                     l1351:
  2713     0556  0830               	movf	malloc@sz,w
  2714     0557  00B4               	movwf	malloc@p
  2715     0558  0831               	movf	malloc@sz+1,w
  2716     0559  00B5               	movwf	malloc@p+1
  2717     055A                     l1353:
  2718     055A  0879               	movf	malloc@n,w
  2719     055B  3E02               	addlw	2
  2720     055C  07EB               	addwf	malloc@cur,f
  2721     055D  1803               	skipnc
  2722     055E  0AEC               	incf	malloc@cur+1,f
  2723     055F                     l1355:
  2724     055F  0834               	movf	malloc@p,w
  2725     0560  00F9               	movwf	?_malloc
  2726     0561  0835               	movf	malloc@p+1,w
  2727     0562  00FA               	movwf	?_malloc+1
  2728     0563                     l744:
  2729     0563  0008               	return
  2730     0564                     __end_of_malloc:
  2731                           
  2732                           	psect	text11
  2733     0652                     __ptext11:	
  2734 ;; *************** function ___simple_search_fl *****************
  2735 ;; Defined at:
  2736 ;;		line 19 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  n               2    0[COMMON] unsigned int 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  split           2    4[BANK0 ] PTR struct chunk
  2741 ;;		 -> __heap_hi$.$next(2), NULL(0), 
  2742 ;;  remaining_si    2    0[BANK0 ] unsigned int 
  2743 ;;  next            2    8[BANK0 ] PTR struct chunk
  2744 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2745 ;;  best            2   12[BANK0 ] PTR struct chunk
  2746 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2747 ;;  c               2   10[BANK0 ] PTR struct chunk
  2748 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2749 ;;  last            2    6[BANK0 ] PTR struct chunk
  2750 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2751 ;;  best_last       2    2[BANK0 ] PTR struct chunk
  2752 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    0[COMMON] PTR void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         2       0       0       0       0
  2763 ;;      Locals:         0      14       0       0       0
  2764 ;;      Temps:          6       0       0       0       0
  2765 ;;      Totals:         8      14       0       0       0
  2766 ;;Total ram usage:       22 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_malloc
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775     0652                     ___simple_search_fl:	
  2776                           ;psect for function ___simple_search_fl
  2777                           
  2778     0652                     l1201:	
  2779                           ;incstack = 0
  2780                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0]
  2781                           
  2782     0652  1283               	bcf	3,5	;RP0=0, select bank0
  2783     0653  1303               	bcf	3,6	;RP1=0, select bank0
  2784     0654  01AC               	clrf	___simple_search_fl@best
  2785     0655  01AD               	clrf	___simple_search_fl@best+1
  2786     0656  01A2               	clrf	___simple_search_fl@best_last
  2787     0657  01A3               	clrf	___simple_search_fl@best_last+1
  2788     0658  01A6               	clrf	___simple_search_fl@last
  2789     0659  01A7               	clrf	___simple_search_fl@last+1
  2790     065A                     l1203:
  2791     065A  086D               	movf	___freelist,w
  2792     065B  046E               	iorwf	___freelist+1,w
  2793     065C  1D03               	btfss	3,2
  2794     065D  2E5F               	goto	u501
  2795     065E  2E60               	goto	u500
  2796     065F                     u501:
  2797     065F  2E63               	goto	l1209
  2798     0660                     u500:
  2799     0660                     l1205:
  2800     0660  01F1               	clrf	?___simple_search_fl
  2801     0661  01F2               	clrf	?___simple_search_fl+1
  2802     0662  2FD7               	goto	l703
  2803     0663                     l1209:
  2804     0663  086D               	movf	___freelist,w
  2805     0664  00AA               	movwf	___simple_search_fl@c
  2806     0665  086E               	movf	___freelist+1,w
  2807     0666  00AB               	movwf	___simple_search_fl@c+1
  2808     0667  2F1C               	goto	l1235
  2809     0668                     l1211:
  2810     0668  082A               	movf	___simple_search_fl@c,w
  2811     0669  0084               	movwf	4
  2812     066A  1783               	bsf	3,7
  2813     066B  1C2B               	btfss	___simple_search_fl@c+1,0
  2814     066C  1383               	bcf	3,7
  2815     066D  0800               	movf	0,w
  2816     066E  00F3               	movwf	??___simple_search_fl
  2817     066F  0A84               	incf	4,f
  2818     0670  0800               	movf	0,w
  2819     0671  00F4               	movwf	??___simple_search_fl+1
  2820     0672  0872               	movf	___simple_search_fl@n+1,w
  2821     0673  0674               	xorwf	??___simple_search_fl+1,w
  2822     0674  1D03               	skipz
  2823     0675  2E78               	goto	u515
  2824     0676  0871               	movf	___simple_search_fl@n,w
  2825     0677  0673               	xorwf	??___simple_search_fl,w
  2826     0678                     u515:
  2827     0678  1D03               	skipz
  2828     0679  2E7B               	goto	u511
  2829     067A  2E7C               	goto	u510
  2830     067B                     u511:
  2831     067B  2EC4               	goto	l1223
  2832     067C                     u510:
  2833     067C                     l1213:
  2834     067C  0826               	movf	___simple_search_fl@last,w
  2835     067D  0427               	iorwf	___simple_search_fl@last+1,w
  2836     067E  1903               	btfsc	3,2
  2837     067F  2E81               	goto	u521
  2838     0680  2E82               	goto	u520
  2839     0681                     u521:
  2840     0681  2EA8               	goto	l1217
  2841     0682                     u520:
  2842     0682                     l1215:
  2843     0682  082A               	movf	___simple_search_fl@c,w
  2844     0683  3E02               	addlw	2
  2845     0684  00F3               	movwf	??___simple_search_fl
  2846     0685  082B               	movf	___simple_search_fl@c+1,w
  2847     0686  1803               	skipnc
  2848     0687  3E01               	addlw	1
  2849     0688  3E00               	addlw	0
  2850     0689  00F4               	movwf	??___simple_search_fl+1
  2851     068A  0873               	movf	??___simple_search_fl,w
  2852     068B  0084               	movwf	4
  2853     068C  1783               	bsf	3,7
  2854     068D  1C74               	btfss	??___simple_search_fl+1,0
  2855     068E  1383               	bcf	3,7
  2856     068F  0800               	movf	0,w
  2857     0690  00F5               	movwf	??___simple_search_fl+2
  2858     0691  0A84               	incf	4,f
  2859     0692  0800               	movf	0,w
  2860     0693  00F6               	movwf	??___simple_search_fl+3
  2861     0694  0826               	movf	___simple_search_fl@last,w
  2862     0695  3E02               	addlw	2
  2863     0696  00F7               	movwf	??___simple_search_fl+4
  2864     0697  0827               	movf	___simple_search_fl@last+1,w
  2865     0698  1803               	skipnc
  2866     0699  3E01               	addlw	1
  2867     069A  3E00               	addlw	0
  2868     069B  00F8               	movwf	??___simple_search_fl+5
  2869     069C  0877               	movf	??___simple_search_fl+4,w
  2870     069D  0084               	movwf	4
  2871     069E  1783               	bsf	3,7
  2872     069F  1C78               	btfss	??___simple_search_fl+5,0
  2873     06A0  1383               	bcf	3,7
  2874     06A1  0875               	movf	??___simple_search_fl+2,w
  2875     06A2  0080               	movwf	0
  2876     06A3  0876               	movf	??___simple_search_fl+3,w
  2877     06A4  0A84               	incf	4,f
  2878     06A5  0080               	movwf	0
  2879     06A6  0384               	decf	4,f
  2880     06A7  2EBB               	goto	l1219
  2881     06A8                     l1217:
  2882     06A8  082A               	movf	___simple_search_fl@c,w
  2883     06A9  3E02               	addlw	2
  2884     06AA  00F3               	movwf	??___simple_search_fl
  2885     06AB  082B               	movf	___simple_search_fl@c+1,w
  2886     06AC  1803               	skipnc
  2887     06AD  3E01               	addlw	1
  2888     06AE  3E00               	addlw	0
  2889     06AF  00F4               	movwf	??___simple_search_fl+1
  2890     06B0  0873               	movf	??___simple_search_fl,w
  2891     06B1  0084               	movwf	4
  2892     06B2  1783               	bsf	3,7
  2893     06B3  1C74               	btfss	??___simple_search_fl+1,0
  2894     06B4  1383               	bcf	3,7
  2895     06B5  0800               	movf	0,w
  2896     06B6  00ED               	movwf	___freelist
  2897     06B7  0A84               	incf	4,f
  2898     06B8  0800               	movf	0,w
  2899     06B9  0384               	decf	4,f
  2900     06BA  00EE               	movwf	___freelist+1
  2901     06BB                     l1219:
  2902     06BB  082A               	movf	___simple_search_fl@c,w
  2903     06BC  3E02               	addlw	2
  2904     06BD  00F1               	movwf	?___simple_search_fl
  2905     06BE  082B               	movf	___simple_search_fl@c+1,w
  2906     06BF  1803               	skipnc
  2907     06C0  3E01               	addlw	1
  2908     06C1  3E00               	addlw	0
  2909     06C2  00F2               	movwf	?___simple_search_fl+1
  2910     06C3  2FD7               	goto	l703
  2911     06C4                     l1223:
  2912     06C4  082A               	movf	___simple_search_fl@c,w
  2913     06C5  0084               	movwf	4
  2914     06C6  1783               	bsf	3,7
  2915     06C7  1C2B               	btfss	___simple_search_fl@c+1,0
  2916     06C8  1383               	bcf	3,7
  2917     06C9  0800               	movf	0,w
  2918     06CA  00F3               	movwf	??___simple_search_fl
  2919     06CB  0A84               	incf	4,f
  2920     06CC  0800               	movf	0,w
  2921     06CD  00F4               	movwf	??___simple_search_fl+1
  2922     06CE  0874               	movf	??___simple_search_fl+1,w
  2923     06CF  0272               	subwf	___simple_search_fl@n+1,w
  2924     06D0  1D03               	skipz
  2925     06D1  2ED4               	goto	u535
  2926     06D2  0873               	movf	??___simple_search_fl,w
  2927     06D3  0271               	subwf	___simple_search_fl@n,w
  2928     06D4                     u535:
  2929     06D4  1803               	skipnc
  2930     06D5  2ED7               	goto	u531
  2931     06D6  2ED8               	goto	u530
  2932     06D7                     u531:
  2933     06D7  2F05               	goto	l711
  2934     06D8                     u530:
  2935     06D8                     l1225:
  2936     06D8  082C               	movf	___simple_search_fl@best,w
  2937     06D9  042D               	iorwf	___simple_search_fl@best+1,w
  2938     06DA  1903               	btfsc	3,2
  2939     06DB  2EDD               	goto	u541
  2940     06DC  2EDE               	goto	u540
  2941     06DD                     u541:
  2942     06DD  2EFD               	goto	l1231
  2943     06DE                     u540:
  2944     06DE                     l1227:
  2945     06DE  082C               	movf	___simple_search_fl@best,w
  2946     06DF  0084               	movwf	4
  2947     06E0  1783               	bsf	3,7
  2948     06E1  1C2D               	btfss	___simple_search_fl@best+1,0
  2949     06E2  1383               	bcf	3,7
  2950     06E3  0800               	movf	0,w
  2951     06E4  00F3               	movwf	??___simple_search_fl
  2952     06E5  0A84               	incf	4,f
  2953     06E6  0800               	movf	0,w
  2954     06E7  00F4               	movwf	??___simple_search_fl+1
  2955     06E8  082A               	movf	___simple_search_fl@c,w
  2956     06E9  0084               	movwf	4
  2957     06EA  1783               	bsf	3,7
  2958     06EB  1C2B               	btfss	___simple_search_fl@c+1,0
  2959     06EC  1383               	bcf	3,7
  2960     06ED  0800               	movf	0,w
  2961     06EE  00F5               	movwf	??___simple_search_fl+2
  2962     06EF  0A84               	incf	4,f
  2963     06F0  0800               	movf	0,w
  2964     06F1  00F6               	movwf	??___simple_search_fl+3
  2965     06F2  0874               	movf	??___simple_search_fl+1,w
  2966     06F3  0276               	subwf	??___simple_search_fl+3,w
  2967     06F4  1D03               	skipz
  2968     06F5  2EF8               	goto	u555
  2969     06F6  0873               	movf	??___simple_search_fl,w
  2970     06F7  0275               	subwf	??___simple_search_fl+2,w
  2971     06F8                     u555:
  2972     06F8  1C03               	skipc
  2973     06F9  2EFB               	goto	u551
  2974     06FA  2EFC               	goto	u550
  2975     06FB                     u551:
  2976     06FB  2EFD               	goto	l1231
  2977     06FC                     u550:
  2978     06FC  2F05               	goto	l711
  2979     06FD                     l1231:
  2980     06FD  082A               	movf	___simple_search_fl@c,w
  2981     06FE  00AC               	movwf	___simple_search_fl@best
  2982     06FF  082B               	movf	___simple_search_fl@c+1,w
  2983     0700  00AD               	movwf	___simple_search_fl@best+1
  2984     0701  0826               	movf	___simple_search_fl@last,w
  2985     0702  00A2               	movwf	___simple_search_fl@best_last
  2986     0703  0827               	movf	___simple_search_fl@last+1,w
  2987     0704  00A3               	movwf	___simple_search_fl@best_last+1
  2988     0705                     l711:
  2989     0705  082A               	movf	___simple_search_fl@c,w
  2990     0706  00A6               	movwf	___simple_search_fl@last
  2991     0707  082B               	movf	___simple_search_fl@c+1,w
  2992     0708  00A7               	movwf	___simple_search_fl@last+1
  2993     0709                     l1233:
  2994     0709  082A               	movf	___simple_search_fl@c,w
  2995     070A  3E02               	addlw	2
  2996     070B  00F3               	movwf	??___simple_search_fl
  2997     070C  082B               	movf	___simple_search_fl@c+1,w
  2998     070D  1803               	skipnc
  2999     070E  3E01               	addlw	1
  3000     070F  3E00               	addlw	0
  3001     0710  00F4               	movwf	??___simple_search_fl+1
  3002     0711  0873               	movf	??___simple_search_fl,w
  3003     0712  0084               	movwf	4
  3004     0713  1783               	bsf	3,7
  3005     0714  1C74               	btfss	??___simple_search_fl+1,0
  3006     0715  1383               	bcf	3,7
  3007     0716  0800               	movf	0,w
  3008     0717  00AA               	movwf	___simple_search_fl@c
  3009     0718  0A84               	incf	4,f
  3010     0719  0800               	movf	0,w
  3011     071A  0384               	decf	4,f
  3012     071B  00AB               	movwf	___simple_search_fl@c+1
  3013     071C                     l1235:
  3014     071C  082A               	movf	___simple_search_fl@c,w
  3015     071D  042B               	iorwf	___simple_search_fl@c+1,w
  3016     071E  1D03               	btfss	3,2
  3017     071F  2F21               	goto	u561
  3018     0720  2F22               	goto	u560
  3019     0721                     u561:
  3020     0721  2E68               	goto	l1211
  3021     0722                     u560:
  3022     0722                     l1237:
  3023     0722  082C               	movf	___simple_search_fl@best,w
  3024     0723  042D               	iorwf	___simple_search_fl@best+1,w
  3025     0724  1903               	btfsc	3,2
  3026     0725  2F27               	goto	u571
  3027     0726  2F28               	goto	u570
  3028     0727                     u571:
  3029     0727  2E60               	goto	l1205
  3030     0728                     u570:
  3031     0728                     l1239:
  3032     0728  082C               	movf	___simple_search_fl@best,w
  3033     0729  3E02               	addlw	2
  3034     072A  00F3               	movwf	??___simple_search_fl
  3035     072B  082D               	movf	___simple_search_fl@best+1,w
  3036     072C  1803               	skipnc
  3037     072D  3E01               	addlw	1
  3038     072E  3E00               	addlw	0
  3039     072F  00F4               	movwf	??___simple_search_fl+1
  3040     0730  0873               	movf	??___simple_search_fl,w
  3041     0731  0084               	movwf	4
  3042     0732  1783               	bsf	3,7
  3043     0733  1C74               	btfss	??___simple_search_fl+1,0
  3044     0734  1383               	bcf	3,7
  3045     0735  0800               	movf	0,w
  3046     0736  00A8               	movwf	___simple_search_fl@next
  3047     0737  0A84               	incf	4,f
  3048     0738  0800               	movf	0,w
  3049     0739  0384               	decf	4,f
  3050     073A  00A9               	movwf	___simple_search_fl@next+1
  3051     073B  082C               	movf	___simple_search_fl@best,w
  3052     073C  0084               	movwf	4
  3053     073D  1783               	bsf	3,7
  3054     073E  1C2D               	btfss	___simple_search_fl@best+1,0
  3055     073F  1383               	bcf	3,7
  3056     0740  0800               	movf	0,w
  3057     0741  00F3               	movwf	??___simple_search_fl
  3058     0742  0A84               	incf	4,f
  3059     0743  0800               	movf	0,w
  3060     0744  00F4               	movwf	??___simple_search_fl+1
  3061     0745  0871               	movf	___simple_search_fl@n,w
  3062     0746  0273               	subwf	??___simple_search_fl,w
  3063     0747  00F5               	movwf	??___simple_search_fl+2
  3064     0748  0872               	movf	___simple_search_fl@n+1,w
  3065     0749  1C03               	skipc
  3066     074A  0A72               	incf	___simple_search_fl@n+1,w
  3067     074B  0274               	subwf	??___simple_search_fl+1,w
  3068     074C  00F6               	movwf	??___simple_search_fl+3
  3069     074D  3000               	movlw	0
  3070     074E  0276               	subwf	??___simple_search_fl+3,w
  3071     074F  3005               	movlw	5
  3072     0750  1903               	skipnz
  3073     0751  0275               	subwf	??___simple_search_fl+2,w
  3074     0752  1C03               	skipc
  3075     0753  2F55               	goto	u581
  3076     0754  2F56               	goto	u580
  3077     0755                     u581:
  3078     0755  2FAE               	goto	l714
  3079     0756                     u580:
  3080     0756                     l1241:
  3081     0756  082C               	movf	___simple_search_fl@best,w
  3082     0757  0084               	movwf	4
  3083     0758  1783               	bsf	3,7
  3084     0759  1C2D               	btfss	___simple_search_fl@best+1,0
  3085     075A  1383               	bcf	3,7
  3086     075B  0800               	movf	0,w
  3087     075C  00F3               	movwf	??___simple_search_fl
  3088     075D  0A84               	incf	4,f
  3089     075E  0800               	movf	0,w
  3090     075F  00F4               	movwf	??___simple_search_fl+1
  3091     0760  0871               	movf	___simple_search_fl@n,w
  3092     0761  0273               	subwf	??___simple_search_fl,w
  3093     0762  00F5               	movwf	??___simple_search_fl+2
  3094     0763  0872               	movf	___simple_search_fl@n+1,w
  3095     0764  1C03               	skipc
  3096     0765  0A72               	incf	___simple_search_fl@n+1,w
  3097     0766  0274               	subwf	??___simple_search_fl+1,w
  3098     0767  00F6               	movwf	??___simple_search_fl+3
  3099     0768  0875               	movf	??___simple_search_fl+2,w
  3100     0769  3EFE               	addlw	254
  3101     076A  00A0               	movwf	___simple_search_fl@remaining_size
  3102     076B  0876               	movf	??___simple_search_fl+3,w
  3103     076C  1803               	skipnc
  3104     076D  3E01               	addlw	1
  3105     076E  3EFF               	addlw	255
  3106     076F  00A1               	movwf	___simple_search_fl@remaining_size+1
  3107     0770                     l1243:
  3108     0770  082C               	movf	___simple_search_fl@best,w
  3109     0771  0084               	movwf	4
  3110     0772  1783               	bsf	3,7
  3111     0773  1C2D               	btfss	___simple_search_fl@best+1,0
  3112     0774  1383               	bcf	3,7
  3113     0775  0871               	movf	___simple_search_fl@n,w
  3114     0776  0080               	movwf	0
  3115     0777  0A84               	incf	4,f
  3116     0778  0872               	movf	___simple_search_fl@n+1,w
  3117     0779  0080               	movwf	0
  3118     077A                     l1245:
  3119     077A  082C               	movf	___simple_search_fl@best,w
  3120     077B  0084               	movwf	4
  3121     077C  1783               	bsf	3,7
  3122     077D  1C2D               	btfss	___simple_search_fl@best+1,0
  3123     077E  1383               	bcf	3,7
  3124     077F  0800               	movf	0,w
  3125     0780  072C               	addwf	___simple_search_fl@best,w
  3126     0781  00F3               	movwf	??___simple_search_fl
  3127     0782  082D               	movf	___simple_search_fl@best+1,w
  3128     0783  1803               	skipnc
  3129     0784  3E01               	addlw	1
  3130     0785  00F4               	movwf	??___simple_search_fl+1
  3131     0786  0873               	movf	??___simple_search_fl,w
  3132     0787  3E02               	addlw	2
  3133     0788  00A4               	movwf	___simple_search_fl@split
  3134     0789  0874               	movf	??___simple_search_fl+1,w
  3135     078A  1803               	skipnc
  3136     078B  3E01               	addlw	1
  3137     078C  3E00               	addlw	0
  3138     078D  00A5               	movwf	___simple_search_fl@split+1
  3139     078E  0824               	movf	___simple_search_fl@split,w
  3140     078F  0084               	movwf	4
  3141     0790  1783               	bsf	3,7
  3142     0791  1C25               	btfss	___simple_search_fl@split+1,0
  3143     0792  1383               	bcf	3,7
  3144     0793  0820               	movf	___simple_search_fl@remaining_size,w
  3145     0794  0080               	movwf	0
  3146     0795  0A84               	incf	4,f
  3147     0796  0821               	movf	___simple_search_fl@remaining_size+1,w
  3148     0797  0080               	movwf	0
  3149     0798                     l1247:
  3150     0798  0824               	movf	___simple_search_fl@split,w
  3151     0799  3E02               	addlw	2
  3152     079A  00F3               	movwf	??___simple_search_fl
  3153     079B  0825               	movf	___simple_search_fl@split+1,w
  3154     079C  1803               	skipnc
  3155     079D  3E01               	addlw	1
  3156     079E  3E00               	addlw	0
  3157     079F  00F4               	movwf	??___simple_search_fl+1
  3158     07A0  0873               	movf	??___simple_search_fl,w
  3159     07A1  0084               	movwf	4
  3160     07A2  1783               	bsf	3,7
  3161     07A3  1C74               	btfss	??___simple_search_fl+1,0
  3162     07A4  1383               	bcf	3,7
  3163     07A5  0828               	movf	___simple_search_fl@next,w
  3164     07A6  0080               	movwf	0
  3165     07A7  0A84               	incf	4,f
  3166     07A8  0829               	movf	___simple_search_fl@next+1,w
  3167     07A9  0080               	movwf	0
  3168     07AA                     l1249:
  3169     07AA  0824               	movf	___simple_search_fl@split,w
  3170     07AB  00A8               	movwf	___simple_search_fl@next
  3171     07AC  0825               	movf	___simple_search_fl@split+1,w
  3172     07AD  00A9               	movwf	___simple_search_fl@next+1
  3173     07AE                     l714:
  3174     07AE  082D               	movf	___simple_search_fl@best+1,w
  3175     07AF  066E               	xorwf	___freelist+1,w
  3176     07B0  1D03               	skipz
  3177     07B1  2FB4               	goto	u595
  3178     07B2  082C               	movf	___simple_search_fl@best,w
  3179     07B3  066D               	xorwf	___freelist,w
  3180     07B4                     u595:
  3181     07B4  1D03               	skipz
  3182     07B5  2FB7               	goto	u591
  3183     07B6  2FB8               	goto	u590
  3184     07B7                     u591:
  3185     07B7  2FBD               	goto	l1253
  3186     07B8                     u590:
  3187     07B8                     l1251:
  3188     07B8  0828               	movf	___simple_search_fl@next,w
  3189     07B9  00ED               	movwf	___freelist
  3190     07BA  0829               	movf	___simple_search_fl@next+1,w
  3191     07BB  00EE               	movwf	___freelist+1
  3192     07BC  2FCF               	goto	l1255
  3193     07BD                     l1253:
  3194     07BD  0822               	movf	___simple_search_fl@best_last,w
  3195     07BE  3E02               	addlw	2
  3196     07BF  00F3               	movwf	??___simple_search_fl
  3197     07C0  0823               	movf	___simple_search_fl@best_last+1,w
  3198     07C1  1803               	skipnc
  3199     07C2  3E01               	addlw	1
  3200     07C3  3E00               	addlw	0
  3201     07C4  00F4               	movwf	??___simple_search_fl+1
  3202     07C5  0873               	movf	??___simple_search_fl,w
  3203     07C6  0084               	movwf	4
  3204     07C7  1783               	bsf	3,7
  3205     07C8  1C74               	btfss	??___simple_search_fl+1,0
  3206     07C9  1383               	bcf	3,7
  3207     07CA  0828               	movf	___simple_search_fl@next,w
  3208     07CB  0080               	movwf	0
  3209     07CC  0A84               	incf	4,f
  3210     07CD  0829               	movf	___simple_search_fl@next+1,w
  3211     07CE  0080               	movwf	0
  3212     07CF                     l1255:
  3213     07CF  082C               	movf	___simple_search_fl@best,w
  3214     07D0  3E02               	addlw	2
  3215     07D1  00F1               	movwf	?___simple_search_fl
  3216     07D2  082D               	movf	___simple_search_fl@best+1,w
  3217     07D3  1803               	skipnc
  3218     07D4  3E01               	addlw	1
  3219     07D5  3E00               	addlw	0
  3220     07D6  00F2               	movwf	?___simple_search_fl+1
  3221     07D7                     l703:
  3222     07D7  0008               	return
  3223     07D8                     __end_of___simple_search_fl:
  3224                           
  3225                           	psect	text12
  3226     019F                     __ptext12:	
  3227 ;; *************** function ___expand_heap *****************
  3228 ;; Defined at:
  3229 ;;		line 14 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/expand_heap.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  pn              1    0[COMMON] PTR unsigned int 
  3232 ;;		 -> malloc@m(2), 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  3235 ;;		 -> __heap_hi(0), NULL(0), 
  3236 ;;  n               2    1[COMMON] unsigned int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    0[COMMON] PTR void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         1       0       0       0       0
  3247 ;;      Locals:         4       0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0
  3249 ;;      Totals:         5       0       0       0       0
  3250 ;;Total ram usage:        5 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_malloc
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259     019F                     ___expand_heap:	
  3260                           ;psect for function ___expand_heap
  3261                           
  3262     019F                     l1263:	
  3263                           ;incstack = 0
  3264                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  3265                           
  3266     019F  0871               	movf	___expand_heap@pn,w
  3267     01A0  0084               	movwf	4
  3268     01A1  1383               	bcf	3,7	;select IRP bank0
  3269     01A2  0800               	movf	0,w
  3270     01A3  00F2               	movwf	___expand_heap@n
  3271     01A4  0A84               	incf	4,f
  3272     01A5  0800               	movf	0,w
  3273     01A6  00F3               	movwf	___expand_heap@n+1
  3274     01A7                     l1265:
  3275     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3276     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3277     01A9  0869               	movf	_brkp,w
  3278     01AA  046A               	iorwf	_brkp+1,w
  3279     01AB  1D03               	btfss	3,2
  3280     01AC  29AE               	goto	u601
  3281     01AD  29AF               	goto	u600
  3282     01AE                     u601:
  3283     01AE  29B3               	goto	l762
  3284     01AF                     u600:
  3285     01AF                     l1267:
  3286     01AF  3070               	movlw	low ___heap_hi
  3287     01B0  00E9               	movwf	_brkp
  3288     01B1  3001               	movlw	high ___heap_hi
  3289     01B2  00EA               	movwf	_brkp+1
  3290     01B3                     l762:
  3291     01B3  3000               	movlw	0
  3292     01B4  0273               	subwf	___expand_heap@n+1,w
  3293     01B5  3004               	movlw	4
  3294     01B6  1903               	skipnz
  3295     01B7  0272               	subwf	___expand_heap@n,w
  3296     01B8  1803               	skipnc
  3297     01B9  29BB               	goto	u611
  3298     01BA  29BC               	goto	u610
  3299     01BB                     u611:
  3300     01BB  29C0               	goto	l1271
  3301     01BC                     u610:
  3302     01BC                     l1269:
  3303     01BC  3004               	movlw	4
  3304     01BD  00F2               	movwf	___expand_heap@n
  3305     01BE  3000               	movlw	0
  3306     01BF  00F3               	movwf	___expand_heap@n+1
  3307     01C0                     l1271:
  3308     01C0  0872               	movf	___expand_heap@n,w
  3309     01C1  0269               	subwf	_brkp,w
  3310     01C2  00F4               	movwf	___expand_heap@new_brkp
  3311     01C3  086A               	movf	_brkp+1,w
  3312     01C4  1C03               	skipc
  3313     01C5  036A               	decf	_brkp+1,w
  3314     01C6  00F5               	movwf	___expand_heap@new_brkp+1
  3315     01C7                     l1273:
  3316     01C7  3001               	movlw	high ___heap_lo
  3317     01C8  0275               	subwf	___expand_heap@new_brkp+1,w
  3318     01C9  3010               	movlw	low ___heap_lo
  3319     01CA  1903               	skipnz
  3320     01CB  0274               	subwf	___expand_heap@new_brkp,w
  3321     01CC  1C03               	skipc
  3322     01CD  29CF               	goto	u621
  3323     01CE  29D0               	goto	u620
  3324     01CF                     u621:
  3325     01CF  29DA               	goto	l1277
  3326     01D0                     u620:
  3327     01D0                     l1275:
  3328     01D0  086A               	movf	_brkp+1,w
  3329     01D1  0275               	subwf	___expand_heap@new_brkp+1,w
  3330     01D2  1D03               	skipz
  3331     01D3  29D6               	goto	u635
  3332     01D4  0869               	movf	_brkp,w
  3333     01D5  0274               	subwf	___expand_heap@new_brkp,w
  3334     01D6                     u635:
  3335     01D6  1C03               	skipc
  3336     01D7  29D9               	goto	u631
  3337     01D8  29DA               	goto	u630
  3338     01D9                     u631:
  3339     01D9  29E3               	goto	l1283
  3340     01DA                     u630:
  3341     01DA                     l1277:
  3342     01DA  300C               	movlw	12
  3343     01DB  1683               	bsf	3,5	;RP0=1, select bank1
  3344     01DC  1303               	bcf	3,6	;RP1=0, select bank1
  3345     01DD  00A6               	movwf	_errno^(0+128)
  3346     01DE  3000               	movlw	0
  3347     01DF  00A7               	movwf	(_errno^(0+128)+1)
  3348     01E0                     l1279:
  3349     01E0  01F1               	clrf	?___expand_heap
  3350     01E1  01F2               	clrf	?___expand_heap+1
  3351     01E2  29EB               	goto	l767
  3352     01E3                     l1283:
  3353     01E3  0874               	movf	___expand_heap@new_brkp,w
  3354     01E4  00E9               	movwf	_brkp
  3355     01E5  0875               	movf	___expand_heap@new_brkp+1,w
  3356     01E6  00EA               	movwf	_brkp+1
  3357     01E7  0869               	movf	_brkp,w
  3358     01E8  00F1               	movwf	?___expand_heap
  3359     01E9  086A               	movf	_brkp+1,w
  3360     01EA  00F2               	movwf	?___expand_heap+1
  3361     01EB                     l767:
  3362     01EB  0008               	return
  3363     01EC                     __end_of___expand_heap:
  3364                           
  3365                           	psect	text13
  3366     00AF                     __ptext13:	
  3367 ;; *************** function ___wmul *****************
  3368 ;; Defined at:
  3369 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  multiplier      2    0[COMMON] unsigned int 
  3372 ;;  multiplicand    2    2[COMMON] unsigned int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  product         2    4[COMMON] unsigned int 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    0[COMMON] unsigned int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         4       0       0       0       0
  3385 ;;      Locals:         2       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0
  3387 ;;      Totals:         6       0       0       0       0
  3388 ;;Total ram usage:        6 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_calloc
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     00AF                     ___wmul:	
  3398                           ;psect for function ___wmul
  3399                           
  3400     00AF                     l1293:	
  3401                           ;incstack = 0
  3402                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3403                           
  3404     00AF  01F5               	clrf	___wmul@product
  3405     00B0  01F6               	clrf	___wmul@product+1
  3406     00B1                     l1295:
  3407     00B1  1C71               	btfss	___wmul@multiplier,0
  3408     00B2  28B4               	goto	u641
  3409     00B3  28B5               	goto	u640
  3410     00B4                     u641:
  3411     00B4  28BB               	goto	l233
  3412     00B5                     u640:
  3413     00B5                     l1297:
  3414     00B5  0873               	movf	___wmul@multiplicand,w
  3415     00B6  07F5               	addwf	___wmul@product,f
  3416     00B7  1803               	skipnc
  3417     00B8  0AF6               	incf	___wmul@product+1,f
  3418     00B9  0874               	movf	___wmul@multiplicand+1,w
  3419     00BA  07F6               	addwf	___wmul@product+1,f
  3420     00BB                     l233:
  3421     00BB  3001               	movlw	1
  3422     00BC                     u655:
  3423     00BC  1003               	clrc
  3424     00BD  0DF3               	rlf	___wmul@multiplicand,f
  3425     00BE  0DF4               	rlf	___wmul@multiplicand+1,f
  3426     00BF  3EFF               	addlw	-1
  3427     00C0  1D03               	skipz
  3428     00C1  28BC               	goto	u655
  3429     00C2                     l1299:
  3430     00C2  3001               	movlw	1
  3431     00C3                     u665:
  3432     00C3  1003               	clrc
  3433     00C4  0CF2               	rrf	___wmul@multiplier+1,f
  3434     00C5  0CF1               	rrf	___wmul@multiplier,f
  3435     00C6  3EFF               	addlw	-1
  3436     00C7  1D03               	skipz
  3437     00C8  28C3               	goto	u665
  3438     00C9                     l1301:
  3439     00C9  0871               	movf	___wmul@multiplier,w
  3440     00CA  0472               	iorwf	___wmul@multiplier+1,w
  3441     00CB  1D03               	btfss	3,2
  3442     00CC  28CE               	goto	u671
  3443     00CD  28CF               	goto	u670
  3444     00CE                     u671:
  3445     00CE  28B1               	goto	l1295
  3446     00CF                     u670:
  3447     00CF                     l1303:
  3448     00CF  0876               	movf	___wmul@product+1,w
  3449     00D0  00F2               	movwf	?___wmul+1
  3450     00D1  0875               	movf	___wmul@product,w
  3451     00D2  00F1               	movwf	?___wmul
  3452     00D3                     l235:
  3453     00D3  0008               	return
  3454     00D4                     __end_of___wmul:
  3455                           
  3456                           	psect	text14
  3457     0114                     __ptext14:	
  3458 ;; *************** function _Reverse *****************
  3459 ;; Defined at:
  3460 ;;		line 73 in file "shape.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  array           1    0[COMMON] PTR unsigned char 
  3463 ;;		 -> main@square_1(3), 
  3464 ;;  countElemnt     2    1[COMMON] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  t               1    6[COMMON] unsigned char 
  3467 ;;  j               2    9[COMMON] int 
  3468 ;;  i               2    7[COMMON] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         3       0       0       0       0
  3479 ;;      Locals:         5       0       0       0       0
  3480 ;;      Temps:          3       0       0       0       0
  3481 ;;      Totals:        11       0       0       0       0
  3482 ;;Total ram usage:       11 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_ChangeOfCoordinates
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491     0114                     _Reverse:	
  3492                           ;psect for function _Reverse
  3493                           
  3494     0114                     l1457:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _Reverse: [wreg-fsr0h+status,2+status,0]
  3497                           
  3498                           
  3499                           ;shape.c: 73: void Reverse(char * array, int countElemnt);shape.c: 74: {;shape.c: 75:   
      +                            for(int i = 0, j = countElemnt - 1; i < j; i++, j--)
  3500     0114  01F8               	clrf	Reverse@i
  3501     0115  01F9               	clrf	Reverse@i+1
  3502     0116                     l1459:
  3503     0116  0872               	movf	Reverse@countElemnt,w
  3504     0117  3EFF               	addlw	255
  3505     0118  00FA               	movwf	Reverse@j
  3506     0119  0873               	movf	Reverse@countElemnt+1,w
  3507     011A  1803               	skipnc
  3508     011B  3E01               	addlw	1
  3509     011C  3EFF               	addlw	255
  3510     011D  00FB               	movwf	Reverse@j+1
  3511     011E  2948               	goto	l1467
  3512     011F                     l1461:
  3513                           
  3514                           ;shape.c: 76:     {;shape.c: 77:         char t = array[i];
  3515     011F  0878               	movf	Reverse@i,w
  3516     0120  0771               	addwf	Reverse@array,w
  3517     0121  00F4               	movwf	??_Reverse
  3518     0122  0874               	movf	??_Reverse,w
  3519     0123  0084               	movwf	4
  3520     0124  1383               	bcf	3,7	;select IRP bank0
  3521     0125  0800               	movf	0,w
  3522     0126  00F7               	movwf	Reverse@t
  3523                           
  3524                           ;shape.c: 78:         array[i] = array[j];
  3525     0127  087A               	movf	Reverse@j,w
  3526     0128  0771               	addwf	Reverse@array,w
  3527     0129  00F4               	movwf	??_Reverse
  3528     012A  0874               	movf	??_Reverse,w
  3529     012B  0084               	movwf	4
  3530     012C  0800               	movf	0,w
  3531     012D  00F5               	movwf	??_Reverse+1
  3532     012E  0878               	movf	Reverse@i,w
  3533     012F  0771               	addwf	Reverse@array,w
  3534     0130  00F6               	movwf	??_Reverse+2
  3535     0131  0876               	movf	??_Reverse+2,w
  3536     0132  0084               	movwf	4
  3537     0133  0875               	movf	??_Reverse+1,w
  3538     0134  0080               	movwf	0
  3539                           
  3540                           ;shape.c: 79:         array[j] = t;
  3541     0135  087A               	movf	Reverse@j,w
  3542     0136  0771               	addwf	Reverse@array,w
  3543     0137  00F4               	movwf	??_Reverse
  3544     0138  0874               	movf	??_Reverse,w
  3545     0139  0084               	movwf	4
  3546     013A  0877               	movf	Reverse@t,w
  3547     013B  0080               	movwf	0
  3548     013C                     l1463:
  3549                           
  3550                           ;shape.c: 80:     }
  3551     013C  3001               	movlw	1
  3552     013D  07F8               	addwf	Reverse@i,f
  3553     013E  1803               	skipnc
  3554     013F  0AF9               	incf	Reverse@i+1,f
  3555     0140  3000               	movlw	0
  3556     0141  07F9               	addwf	Reverse@i+1,f
  3557     0142                     l1465:
  3558     0142  30FF               	movlw	255
  3559     0143  07FA               	addwf	Reverse@j,f
  3560     0144  1803               	skipnc
  3561     0145  0AFB               	incf	Reverse@j+1,f
  3562     0146  30FF               	movlw	255
  3563     0147  07FB               	addwf	Reverse@j+1,f
  3564     0148                     l1467:
  3565     0148  0879               	movf	Reverse@i+1,w
  3566     0149  3A80               	xorlw	128
  3567     014A  00F4               	movwf	??_Reverse
  3568     014B  087B               	movf	Reverse@j+1,w
  3569     014C  3A80               	xorlw	128
  3570     014D  0274               	subwf	??_Reverse,w
  3571     014E  1D03               	skipz
  3572     014F  2952               	goto	u845
  3573     0150  087A               	movf	Reverse@j,w
  3574     0151  0278               	subwf	Reverse@i,w
  3575     0152                     u845:
  3576     0152  1C03               	skipc
  3577     0153  2955               	goto	u841
  3578     0154  2956               	goto	u840
  3579     0155                     u841:
  3580     0155  291F               	goto	l1461
  3581     0156                     u840:
  3582     0156                     l147:
  3583     0156  0008               	return
  3584     0157                     __end_of_Reverse:
  3585                           
  3586                           	psect	text15
  3587     0239                     __ptext15:	
  3588 ;; *************** function _MovieShape *****************
  3589 ;; Defined at:
  3590 ;;		line 32 in file "shape.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  dir             1    wreg     enum E885
  3593 ;;  _shapePositi    2    5[BANK0 ] PTR struct .
  3594 ;;		 -> main@shapePosition(4), 
  3595 ;;  shapeArray      1    7[BANK0 ] PTR unsigned char 
  3596 ;;		 -> main@square_1(3), 
  3597 ;;  countElemntA    2    8[BANK0 ] int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  dir             1   12[BANK0 ] enum E885
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       5       0       0       0
  3610 ;;      Locals:         0       1       0       0       0
  3611 ;;      Temps:          0       2       0       0       0
  3612 ;;      Totals:         0       8       0       0       0
  3613 ;;Total ram usage:        8 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 3
  3616 ;; This function calls:
  3617 ;;		_MovieDown
  3618 ;;		_MovieLeft
  3619 ;;		_MovieRigth
  3620 ;;		_MovieUp
  3621 ;;		_ShowShape
  3622 ;;		_SpiClearMatrix
  3623 ;; This function is called by:
  3624 ;;		_ChangeOfCoordinates
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628     0239                     _MovieShape:	
  3629                           ;psect for function _MovieShape
  3630                           
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _MovieShape: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3634                           ;MovieShape@dir stored from wreg
  3635     0239  1283               	bcf	3,5	;RP0=0, select bank0
  3636     023A  1303               	bcf	3,6	;RP1=0, select bank0
  3637     023B  00AC               	movwf	MovieShape@dir
  3638     023C                     l1433:
  3639                           
  3640                           ;shape.c: 34:     switch (dir){
  3641     023C  2A65               	goto	l1445
  3642     023D                     l1435:
  3643                           
  3644                           ;shape.c: 36:             MovieDown(_shapePosition);
  3645     023D  0825               	movf	MovieShape@_shapePosition,w
  3646     023E  00F1               	movwf	MovieDown@_shapePosition
  3647     023F  0826               	movf	MovieShape@_shapePosition+1,w
  3648     0240  00F2               	movwf	MovieDown@_shapePosition+1
  3649     0241  120A  118A  201C  120A  118A  	fcall	_MovieDown
  3650                           
  3651                           ;shape.c: 37:             break;
  3652     0246  2A7E               	goto	l1447
  3653     0247                     l1437:
  3654                           
  3655                           ;shape.c: 39:             MovieUp(_shapePosition);
  3656     0247  0825               	movf	MovieShape@_shapePosition,w
  3657     0248  00F1               	movwf	MovieUp@_shapePosition
  3658     0249  0826               	movf	MovieShape@_shapePosition+1,w
  3659     024A  00F2               	movwf	MovieUp@_shapePosition+1
  3660     024B  120A  118A  2058  120A  118A  	fcall	_MovieUp
  3661                           
  3662                           ;shape.c: 40:             break;
  3663     0250  2A7E               	goto	l1447
  3664     0251                     l1439:
  3665                           
  3666                           ;shape.c: 42:             MovieLeft(_shapePosition);
  3667     0251  0825               	movf	MovieShape@_shapePosition,w
  3668     0252  00F1               	movwf	MovieLeft@_shapePosition
  3669     0253  0826               	movf	MovieShape@_shapePosition+1,w
  3670     0254  00F2               	movwf	MovieLeft@_shapePosition+1
  3671     0255  120A  158A  27EF  120A  118A  	fcall	_MovieLeft
  3672                           
  3673                           ;shape.c: 43:             break;
  3674     025A  2A7E               	goto	l1447
  3675     025B                     l1441:
  3676                           
  3677                           ;shape.c: 45:             MovieRigth(_shapePosition);
  3678     025B  0825               	movf	MovieShape@_shapePosition,w
  3679     025C  00F1               	movwf	MovieRigth@_shapePosition
  3680     025D  0826               	movf	MovieShape@_shapePosition+1,w
  3681     025E  00F2               	movwf	MovieRigth@_shapePosition+1
  3682     025F  120A  158A  27D9  120A  118A  	fcall	_MovieRigth
  3683                           
  3684                           ;shape.c: 46:             break;
  3685     0264  2A7E               	goto	l1447
  3686     0265                     l1445:
  3687     0265  082C               	movf	MovieShape@dir,w
  3688     0266  00AA               	movwf	??_MovieShape
  3689     0267  01AB               	clrf	??_MovieShape+1
  3690                           
  3691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3692                           ; Switch size 1, requested type "simple"
  3693                           ; Number of cases is 1, Range of values is 0 to 0
  3694                           ; switch strategies available:
  3695                           ; Name         Instructions Cycles
  3696                           ; simple_byte            4     3 (average)
  3697                           ; direct_byte           11     8 (fixed)
  3698                           ; jumptable            260     6 (fixed)
  3699                           ;	Chosen strategy is simple_byte
  3700     0268  082B               	movf	??_MovieShape+1,w
  3701     0269  3A00               	xorlw	0	; case 0
  3702     026A  1903               	skipnz
  3703     026B  2A6D               	goto	l1639
  3704     026C  2A7E               	goto	l1447
  3705     026D                     l1639:
  3706                           
  3707                           ; Switch size 1, requested type "simple"
  3708                           ; Number of cases is 5, Range of values is 0 to 4
  3709                           ; switch strategies available:
  3710                           ; Name         Instructions Cycles
  3711                           ; simple_byte           16     9 (average)
  3712                           ; direct_byte           23     8 (fixed)
  3713                           ; jumptable            260     6 (fixed)
  3714                           ;	Chosen strategy is simple_byte
  3715     026D  082A               	movf	??_MovieShape,w
  3716     026E  3A00               	xorlw	0	; case 0
  3717     026F  1903               	skipnz
  3718     0270  2A3D               	goto	l1435
  3719     0271  3A01               	xorlw	1	; case 1
  3720     0272  1903               	skipnz
  3721     0273  2A47               	goto	l1437
  3722     0274  3A03               	xorlw	3	; case 2
  3723     0275  1903               	skipnz
  3724     0276  2A51               	goto	l1439
  3725     0277  3A01               	xorlw	1	; case 3
  3726     0278  1903               	skipnz
  3727     0279  2A5B               	goto	l1441
  3728     027A  3A07               	xorlw	7	; case 4
  3729     027B  1903               	skipnz
  3730     027C  2A7E               	goto	l1447
  3731     027D  2A7E               	goto	l1447
  3732     027E                     l1447:
  3733                           
  3734                           ;shape.c: 51:     SpiClearMatrix();
  3735     027E  120A  118A  2042  120A  118A  	fcall	_SpiClearMatrix
  3736     0283                     l1449:
  3737                           
  3738                           ;shape.c: 52:     ShowShape(_shapePosition, countElemntArray, shapeArray);
  3739     0283  1283               	bcf	3,5	;RP0=0, select bank0
  3740     0284  1303               	bcf	3,6	;RP1=0, select bank0
  3741     0285  0825               	movf	MovieShape@_shapePosition,w
  3742     0286  00F5               	movwf	ShowShape@coord
  3743     0287  0826               	movf	MovieShape@_shapePosition+1,w
  3744     0288  00F6               	movwf	ShowShape@coord+1
  3745     0289  0829               	movf	MovieShape@countElemntArray+1,w
  3746     028A  00F8               	movwf	ShowShape@countElemntArray+1
  3747     028B  0828               	movf	MovieShape@countElemntArray,w
  3748     028C  00F7               	movwf	ShowShape@countElemntArray
  3749     028D  0827               	movf	MovieShape@shapeArray,w
  3750     028E  00F9               	movwf	ShowShape@shapeArray
  3751     028F  120A  118A  2295  120A  118A  	fcall	_ShowShape
  3752     0294                     l130:
  3753     0294  0008               	return
  3754     0295                     __end_of_MovieShape:
  3755                           
  3756                           	psect	text16
  3757     0042                     __ptext16:	
  3758 ;; *************** function _SpiClearMatrix *****************
  3759 ;; Defined at:
  3760 ;;		line 10 in file "matrix.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  i               1    6[COMMON] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         1       0       0       0       0
  3776 ;;      Temps:          2       0       0       0       0
  3777 ;;      Totals:         3       0       0       0       0
  3778 ;;Total ram usage:        3 bytes
  3779 ;; Hardware stack levels used: 1
  3780 ;; Hardware stack levels required when called: 2
  3781 ;; This function calls:
  3782 ;;		_SendToSegment
  3783 ;; This function is called by:
  3784 ;;		_MatrixInit
  3785 ;;		_MovieShape
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     0042                     _SpiClearMatrix:	
  3790                           ;psect for function _SpiClearMatrix
  3791                           
  3792     0042                     l1367:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  3795                           
  3796                           
  3797                           ;matrix.c: 12:   char i = 8;
  3798     0042  3008               	movlw	8
  3799     0043  00F7               	movwf	SpiClearMatrix@i
  3800     0044                     l1369:
  3801                           
  3802                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  3803     0044  0877               	movf	SpiClearMatrix@i,w
  3804     0045  00F5               	movwf	??_SpiClearMatrix
  3805     0046  01F6               	clrf	??_SpiClearMatrix+1
  3806     0047  0875               	movf	??_SpiClearMatrix,w
  3807     0048  00F2               	movwf	SendToSegment@segment
  3808     0049  0876               	movf	??_SpiClearMatrix+1,w
  3809     004A  00F3               	movwf	SendToSegment@segment+1
  3810     004B  01F4               	clrf	SendToSegment@data
  3811     004C  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  3812     0051                     l1371:
  3813                           
  3814                           ;matrix.c: 16:   } while (--i);
  3815     0051  3001               	movlw	1
  3816     0052  02F7               	subwf	SpiClearMatrix@i,f
  3817     0053  1D03               	btfss	3,2
  3818     0054  2856               	goto	u761
  3819     0055  2857               	goto	u760
  3820     0056                     u761:
  3821     0056  2844               	goto	l1369
  3822     0057                     u760:
  3823     0057                     l85:
  3824     0057  0008               	return
  3825     0058                     __end_of_SpiClearMatrix:
  3826                           
  3827                           	psect	text17
  3828     0295                     __ptext17:	
  3829 ;; *************** function _ShowShape *****************
  3830 ;; Defined at:
  3831 ;;		line 8 in file "shape.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  coord           2    4[COMMON] PTR struct .
  3834 ;;		 -> main@shapePosition(4), 
  3835 ;;  countElemntA    2    6[COMMON] int 
  3836 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
  3837 ;;		 -> main@square_1(3), 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  pos             2   11[COMMON] int 
  3840 ;;  _pos            2    9[COMMON] int 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         5       0       0       0       0
  3851 ;;      Locals:         4       0       0       0       0
  3852 ;;      Temps:          0       5       0       0       0
  3853 ;;      Totals:         9       5       0       0       0
  3854 ;;Total ram usage:       14 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 2
  3857 ;; This function calls:
  3858 ;;		_SendToSegment
  3859 ;; This function is called by:
  3860 ;;		_MovieShape
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0295                     _ShowShape:	
  3865                           ;psect for function _ShowShape
  3866                           
  3867     0295                     l1373:	
  3868                           ;incstack = 0
  3869                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3870                           
  3871     0295                     l1375:
  3872                           
  3873                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  3874     0295  0875               	movf	ShowShape@coord,w
  3875     0296  0084               	movwf	4
  3876     0297  1783               	bsf	3,7
  3877     0298  1C76               	btfss	ShowShape@coord+1,0
  3878     0299  1383               	bcf	3,7
  3879     029A  0800               	movf	0,w
  3880     029B  1283               	bcf	3,5	;RP0=0, select bank0
  3881     029C  1303               	bcf	3,6	;RP1=0, select bank0
  3882     029D  00A0               	movwf	??_ShowShape
  3883     029E  0A84               	incf	4,f
  3884     029F  0800               	movf	0,w
  3885     02A0  00A1               	movwf	??_ShowShape+1
  3886     02A1  0820               	movf	??_ShowShape,w
  3887     02A2  3E01               	addlw	1
  3888     02A3  00FC               	movwf	ShowShape@pos
  3889     02A4  0821               	movf	??_ShowShape+1,w
  3890     02A5  1803               	skipnc
  3891     02A6  3E01               	addlw	1
  3892     02A7  3E00               	addlw	0
  3893     02A8  00FD               	movwf	ShowShape@pos+1
  3894     02A9  2AF3               	goto	l1383
  3895     02AA                     l1377:
  3896                           
  3897                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  3898     02AA  0875               	movf	ShowShape@coord,w
  3899     02AB  0084               	movwf	4
  3900     02AC  1783               	bsf	3,7
  3901     02AD  1C76               	btfss	ShowShape@coord+1,0
  3902     02AE  1383               	bcf	3,7
  3903     02AF  0800               	movf	0,w
  3904     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3905     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3906     02B2  00A0               	movwf	??_ShowShape
  3907     02B3  0A84               	incf	4,f
  3908     02B4  0800               	movf	0,w
  3909     02B5  00A1               	movwf	??_ShowShape+1
  3910     02B6  0820               	movf	??_ShowShape,w
  3911     02B7  027C               	subwf	ShowShape@pos,w
  3912     02B8  00A2               	movwf	??_ShowShape+2
  3913     02B9  0821               	movf	??_ShowShape+1,w
  3914     02BA  1C03               	skipc
  3915     02BB  0A21               	incf	??_ShowShape+1,w
  3916     02BC  027D               	subwf	ShowShape@pos+1,w
  3917     02BD  00A3               	movwf	??_ShowShape+3
  3918     02BE  0822               	movf	??_ShowShape+2,w
  3919     02BF  3EFF               	addlw	255
  3920     02C0  00FA               	movwf	ShowShape@_pos
  3921     02C1  0823               	movf	??_ShowShape+3,w
  3922     02C2  1803               	skipnc
  3923     02C3  3E01               	addlw	1
  3924     02C4  3EFF               	addlw	255
  3925     02C5  00FB               	movwf	ShowShape@_pos+1
  3926     02C6                     l1379:
  3927                           
  3928                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  3929     02C6  087D               	movf	ShowShape@pos+1,w
  3930     02C7  00F3               	movwf	SendToSegment@segment+1
  3931     02C8  087C               	movf	ShowShape@pos,w
  3932     02C9  00F2               	movwf	SendToSegment@segment
  3933     02CA  087A               	movf	ShowShape@_pos,w
  3934     02CB  0779               	addwf	ShowShape@shapeArray,w
  3935     02CC  00A0               	movwf	??_ShowShape
  3936     02CD  0820               	movf	??_ShowShape,w
  3937     02CE  0084               	movwf	4
  3938     02CF  1383               	bcf	3,7	;select IRP bank0
  3939     02D0  0800               	movf	0,w
  3940     02D1  00A1               	movwf	??_ShowShape+1
  3941     02D2  0875               	movf	ShowShape@coord,w
  3942     02D3  3E02               	addlw	2
  3943     02D4  00A2               	movwf	??_ShowShape+2
  3944     02D5  0876               	movf	ShowShape@coord+1,w
  3945     02D6  1803               	skipnc
  3946     02D7  3E01               	addlw	1
  3947     02D8  3E00               	addlw	0
  3948     02D9  00A3               	movwf	??_ShowShape+3
  3949     02DA  0822               	movf	??_ShowShape+2,w
  3950     02DB  0084               	movwf	4
  3951     02DC  1783               	bsf	3,7
  3952     02DD  1C23               	btfss	??_ShowShape+3,0
  3953     02DE  1383               	bcf	3,7
  3954     02DF  0A00               	incf	0,w
  3955     02E0  2AE3               	goto	u774
  3956     02E1                     u775:
  3957     02E1  1003               	clrc
  3958     02E2  0DA1               	rlf	??_ShowShape+1,f
  3959     02E3                     u774:
  3960     02E3  3EFF               	addlw	-1
  3961     02E4  1D03               	skipz
  3962     02E5  2AE1               	goto	u775
  3963     02E6  0821               	movf	??_ShowShape+1,w
  3964     02E7  00F4               	movwf	SendToSegment@data
  3965     02E8  120A  118A  202F  120A  118A  	fcall	_SendToSegment
  3966     02ED                     l1381:
  3967                           
  3968                           ;shape.c: 13:     }
  3969     02ED  3001               	movlw	1
  3970     02EE  07FC               	addwf	ShowShape@pos,f
  3971     02EF  1803               	skipnc
  3972     02F0  0AFD               	incf	ShowShape@pos+1,f
  3973     02F1  3000               	movlw	0
  3974     02F2  07FD               	addwf	ShowShape@pos+1,f
  3975     02F3                     l1383:
  3976     02F3  0875               	movf	ShowShape@coord,w
  3977     02F4  0084               	movwf	4
  3978     02F5  1783               	bsf	3,7
  3979     02F6  1C76               	btfss	ShowShape@coord+1,0
  3980     02F7  1383               	bcf	3,7
  3981     02F8  0800               	movf	0,w
  3982     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3983     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3984     02FB  00A0               	movwf	??_ShowShape
  3985     02FC  0A84               	incf	4,f
  3986     02FD  0800               	movf	0,w
  3987     02FE  00A1               	movwf	??_ShowShape+1
  3988     02FF  0877               	movf	ShowShape@countElemntArray,w
  3989     0300  0720               	addwf	??_ShowShape,w
  3990     0301  00A2               	movwf	??_ShowShape+2
  3991     0302  0878               	movf	ShowShape@countElemntArray+1,w
  3992     0303  1803               	skipnc
  3993     0304  0A78               	incf	ShowShape@countElemntArray+1,w
  3994     0305  0721               	addwf	??_ShowShape+1,w
  3995     0306  00A3               	movwf	??_ShowShape+3
  3996     0307  0823               	movf	??_ShowShape+3,w
  3997     0308  3A80               	xorlw	128
  3998     0309  00A4               	movwf	??_ShowShape+4
  3999     030A  087D               	movf	ShowShape@pos+1,w
  4000     030B  3A80               	xorlw	128
  4001     030C  0224               	subwf	??_ShowShape+4,w
  4002     030D  1D03               	skipz
  4003     030E  2B11               	goto	u785
  4004     030F  087C               	movf	ShowShape@pos,w
  4005     0310  0222               	subwf	??_ShowShape+2,w
  4006     0311                     u785:
  4007     0311  1803               	skipnc
  4008     0312  2B14               	goto	u781
  4009     0313  2B15               	goto	u780
  4010     0314                     u781:
  4011     0314  2AAA               	goto	l1377
  4012     0315                     u780:
  4013     0315                     l108:
  4014     0315  0008               	return
  4015     0316                     __end_of_ShowShape:
  4016                           
  4017                           	psect	text18
  4018     002F                     __ptext18:	
  4019 ;; *************** function _SendToSegment *****************
  4020 ;; Defined at:
  4021 ;;		line 34 in file "matrix.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  segment         2    1[COMMON] int 
  4024 ;;  data            1    3[COMMON] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         3       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         3       0       0       0       0
  4040 ;;Total ram usage:        3 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 1
  4043 ;; This function calls:
  4044 ;;		_SpiSendByte
  4045 ;; This function is called by:
  4046 ;;		_SpiClearMatrix
  4047 ;;		_MatrixInit
  4048 ;;		_ShowShape
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052     002F                     _SendToSegment:	
  4053                           ;psect for function _SendToSegment
  4054                           
  4055     002F                     l1287:	
  4056                           ;incstack = 0
  4057                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  4058                           
  4059                           
  4060                           ;matrix.c: 35:     RA5 = 0;
  4061     002F  1283               	bcf	3,5	;RP0=0, select bank0
  4062     0030  1303               	bcf	3,6	;RP1=0, select bank0
  4063     0031  1285               	bcf	5,5	;volatile
  4064     0032                     l1289:
  4065                           
  4066                           ;matrix.c: 36:     SpiSendByte((char)segment);
  4067     0032  0872               	movf	SendToSegment@segment,w
  4068     0033  120A  158A  27E4  120A  118A  	fcall	_SpiSendByte
  4069                           
  4070                           ;matrix.c: 37:     SpiSendByte(data);
  4071     0038  0874               	movf	SendToSegment@data,w
  4072     0039  120A  158A  27E4  120A  118A  	fcall	_SpiSendByte
  4073     003E                     l1291:
  4074                           
  4075                           ;matrix.c: 38:     RA5 = 1;
  4076     003E  1283               	bcf	3,5	;RP0=0, select bank0
  4077     003F  1303               	bcf	3,6	;RP1=0, select bank0
  4078     0040  1685               	bsf	5,5	;volatile
  4079     0041                     l91:
  4080     0041  0008               	return
  4081     0042                     __end_of_SendToSegment:
  4082                           
  4083                           	psect	text19
  4084     0FE4                     __ptext19:	
  4085 ;; *************** function _SpiSendByte *****************
  4086 ;; Defined at:
  4087 ;;		line 18 in file "spi.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  data            1    wreg     unsigned char 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  data            1    0[COMMON] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       0       0       0       0
  4102 ;;      Locals:         1       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0
  4104 ;;      Totals:         1       0       0       0       0
  4105 ;;Total ram usage:        1 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_SendToSegment
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114     0FE4                     _SpiSendByte:	
  4115                           ;psect for function _SpiSendByte
  4116                           
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _SpiSendByte: [wreg]
  4120                           ;SpiSendByte@data stored from wreg
  4121     0FE4  00F1               	movwf	SpiSendByte@data
  4122     0FE5                     l1199:
  4123                           
  4124                           ;spi.c: 19:     SSPBUF = data;
  4125     0FE5  0871               	movf	SpiSendByte@data,w
  4126     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4127     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4128     0FE8  0093               	movwf	19	;volatile
  4129     0FE9                     l69:	
  4130                           ;spi.c: 20:     while (!SSPIF);
  4131                           
  4132     0FE9  1D8C               	btfss	12,3	;volatile
  4133     0FEA  2FEC               	goto	u491
  4134     0FEB  2FED               	goto	u490
  4135     0FEC                     u491:
  4136     0FEC  2FE9               	goto	l69
  4137     0FED                     u490:
  4138     0FED                     l71:
  4139                           
  4140                           ;spi.c: 21:     SSPIF = 0;
  4141     0FED  118C               	bcf	12,3	;volatile
  4142     0FEE                     l72:
  4143     0FEE  0008               	return
  4144     0FEF                     __end_of_SpiSendByte:
  4145                           
  4146                           	psect	text20
  4147     0058                     __ptext20:	
  4148 ;; *************** function _MovieUp *****************
  4149 ;; Defined at:
  4150 ;;		line 20 in file "shape.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4153 ;;		 -> main@shapePosition(4), 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         2       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0
  4167 ;;      Temps:          2       0       0       0       0
  4168 ;;      Totals:         4       0       0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_MovieShape
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178     0058                     _MovieUp:	
  4179                           ;psect for function _MovieUp
  4180                           
  4181     0058                     l1387:	
  4182                           ;incstack = 0
  4183                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  4184                           
  4185                           
  4186                           ;shape.c: 21:     _shapePosition->y--;
  4187     0058  0871               	movf	MovieUp@_shapePosition,w
  4188     0059  3E02               	addlw	2
  4189     005A  00F3               	movwf	??_MovieUp
  4190     005B  0872               	movf	MovieUp@_shapePosition+1,w
  4191     005C  1803               	skipnc
  4192     005D  3E01               	addlw	1
  4193     005E  3E00               	addlw	0
  4194     005F  00F4               	movwf	??_MovieUp+1
  4195     0060  0873               	movf	??_MovieUp,w
  4196     0061  0084               	movwf	4
  4197     0062  1783               	bsf	3,7
  4198     0063  1C74               	btfss	??_MovieUp+1,0
  4199     0064  1383               	bcf	3,7
  4200     0065  30FF               	movlw	255
  4201     0066  0780               	addwf	0,f
  4202     0067  0F84               	incfsz	4,f
  4203     0068  0800               	movf	0,w
  4204     0069  1803               	skipnc
  4205     006A  0A00               	incf	0,w
  4206     006B  00FF               	movwf	btemp+1
  4207     006C  30FF               	movlw	255
  4208     006D  077F               	addwf	btemp+1,w
  4209     006E  0080               	movwf	0
  4210     006F  0384               	decf	4,f
  4211     0070                     l114:
  4212     0070  0008               	return
  4213     0071                     __end_of_MovieUp:
  4214                           
  4215                           	psect	text21
  4216     0FD9                     __ptext21:	
  4217 ;; *************** function _MovieRigth *****************
  4218 ;; Defined at:
  4219 ;;		line 28 in file "shape.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4222 ;;		 -> main@shapePosition(4), 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         2       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0
  4237 ;;      Totals:         2       0       0       0       0
  4238 ;;Total ram usage:        2 bytes
  4239 ;; Hardware stack levels used: 1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_MovieShape
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0FD9                     _MovieRigth:	
  4248                           ;psect for function _MovieRigth
  4249                           
  4250     0FD9                     l1391:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  4253                           
  4254                           
  4255                           ;shape.c: 29:     _shapePosition->x++;
  4256     0FD9  0871               	movf	MovieRigth@_shapePosition,w
  4257     0FDA  0084               	movwf	4
  4258     0FDB  1783               	bsf	3,7
  4259     0FDC  1C72               	btfss	MovieRigth@_shapePosition+1,0
  4260     0FDD  1383               	bcf	3,7
  4261     0FDE  3001               	movlw	1
  4262     0FDF  0780               	addwf	0,f
  4263     0FE0  0A84               	incf	4,f
  4264     0FE1  1803               	skipnc
  4265     0FE2  0A80               	incf	0,f
  4266     0FE3                     l120:
  4267     0FE3  0008               	return
  4268     0FE4                     __end_of_MovieRigth:
  4269                           
  4270                           	psect	text22
  4271     0FEF                     __ptext22:	
  4272 ;; *************** function _MovieLeft *****************
  4273 ;; Defined at:
  4274 ;;		line 24 in file "shape.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4277 ;;		 -> main@shapePosition(4), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr0l, fsr0h, btemp+1
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         2       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_MovieShape
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302     0FEF                     _MovieLeft:	
  4303                           ;psect for function _MovieLeft
  4304                           
  4305     0FEF                     l1389:	
  4306                           ;incstack = 0
  4307                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  4308                           
  4309                           
  4310                           ;shape.c: 25:     _shapePosition->x--;
  4311     0FEF  0871               	movf	MovieLeft@_shapePosition,w
  4312     0FF0  0084               	movwf	4
  4313     0FF1  1783               	bsf	3,7
  4314     0FF2  1C72               	btfss	MovieLeft@_shapePosition+1,0
  4315     0FF3  1383               	bcf	3,7
  4316     0FF4  30FF               	movlw	255
  4317     0FF5  0780               	addwf	0,f
  4318     0FF6  0F84               	incfsz	4,f
  4319     0FF7  0800               	movf	0,w
  4320     0FF8  1803               	skipnc
  4321     0FF9  0A00               	incf	0,w
  4322     0FFA  00FF               	movwf	btemp+1
  4323     0FFB  30FF               	movlw	255
  4324     0FFC  077F               	addwf	btemp+1,w
  4325     0FFD  0080               	movwf	0
  4326     0FFE  0384               	decf	4,f
  4327     0FFF                     l117:
  4328     0FFF  0008               	return
  4329     1000                     __end_of_MovieLeft:
  4330                           
  4331                           	psect	text23
  4332     001C                     __ptext23:	
  4333 ;; *************** function _MovieDown *****************
  4334 ;; Defined at:
  4335 ;;		line 16 in file "shape.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4338 ;;		 -> main@shapePosition(4), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         2       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0
  4352 ;;      Temps:          2       0       0       0       0
  4353 ;;      Totals:         4       0       0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_MovieShape
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     001C                     _MovieDown:	
  4364                           ;psect for function _MovieDown
  4365                           
  4366     001C                     l1385:	
  4367                           ;incstack = 0
  4368                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  4369                           
  4370                           
  4371                           ;shape.c: 17:     _shapePosition->y++;
  4372     001C  0871               	movf	MovieDown@_shapePosition,w
  4373     001D  3E02               	addlw	2
  4374     001E  00F3               	movwf	??_MovieDown
  4375     001F  0872               	movf	MovieDown@_shapePosition+1,w
  4376     0020  1803               	skipnc
  4377     0021  3E01               	addlw	1
  4378     0022  3E00               	addlw	0
  4379     0023  00F4               	movwf	??_MovieDown+1
  4380     0024  0873               	movf	??_MovieDown,w
  4381     0025  0084               	movwf	4
  4382     0026  1783               	bsf	3,7
  4383     0027  1C74               	btfss	??_MovieDown+1,0
  4384     0028  1383               	bcf	3,7
  4385     0029  3001               	movlw	1
  4386     002A  0780               	addwf	0,f
  4387     002B  0A84               	incf	4,f
  4388     002C  1803               	skipnc
  4389     002D  0A80               	incf	0,f
  4390     002E                     l111:
  4391     002E  0008               	return
  4392     002F                     __end_of_MovieDown:
  4393     0002                     ___latbits      equ	2
  4394     007E                     btemp           set	126	;btemp
  4395     007E                     wtemp0          set	126
  4396                           
  4397                           	psect	config
  4398                           
  4399                           ;Config register CONFIG @ 0x2007
  4400                           ;	Oscillator Selection bits
  4401                           ;	FOSC = HS, HS oscillator
  4402                           ;	Watchdog Timer Enable bit
  4403                           ;	WDTE = OFF, WDT disabled
  4404                           ;	Power-up Timer Enable bit
  4405                           ;	PWRTE = OFF, PWRT disabled
  4406                           ;	FLASH Program Memory Code Protection bits
  4407                           ;	CP = OFF, Code protection off
  4408                           ;	Brown-out Reset Enable bit
  4409                           ;	BOREN = OFF, BOR disabled
  4410                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  4411                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4412                           ;	Data EE Memory Code Protection
  4413                           ;	CPD = OFF, Code Protection off
  4414                           ;	FLASH Program Memory Write Enable
  4415                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  4416                           ;	In-Circuit Debugger Mode bit
  4417                           ;	DEBUG = 0x1, unprogrammed default
  4418     2007                     	org	8199
  4419     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    4
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     73      79
    BANK1            80      0      11
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    calloc@new_ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    ChangeOfCoordinates@_figure	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ChangeOfCoordinates@_reverse	PTR _Bool  size(1) Largest target is 1
		 -> main@reverse(BANK0[1]), 

    ChangeOfCoordinates@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    Reverse@array	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@array_	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@res	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    S662$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    SetPosition@position	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__calloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _MatrixInit->_SpiClearMatrix
    _Rotate->_free
    _calloc->_malloc
    _calloc->_memset
    _memset->___wmul
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape
    _SpiClearMatrix->_SendToSegment
    _ShowShape->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_ChangeOfCoordinates
    _ChangeOfCoordinates->_Rotate
    _Rotate->_calloc
    _calloc->_malloc
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4537
                                             63 BANK0     10    10      0
                _ChangeOfCoordinates
                         _MatrixInit
                          _PortBInit
                        _SetPosition
                            _SpiInit
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPosition                                          8     2      6      91
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _ChangeOfCoordinates                                 13     7      6    4089
                                             50 BANK0     13     7      6
                         _MovieShape
                            _Reverse
                             _Rotate
 ---------------------------------------------------------------------------------
 (2) _Rotate                                              20    17      3    2575
                                             30 BANK0     20    17      3
                             _calloc
                               _free
 ---------------------------------------------------------------------------------
 (3) _free                                                12    10      2     289
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (3) _calloc                                               6     2      4    1813
                                             24 BANK0      6     2      4
                             ___wmul
                             _malloc
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6      99
                                              6 COMMON     6     0      6
                                              0 BANK0      2     2      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _malloc                                              14    12      2    1461
                                              8 COMMON     4     2      2
                                             14 BANK0     10    10      0
                      ___expand_heap
                 ___simple_search_fl
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___simple_search_fl                                  22    20      2     827
                                              0 COMMON     8     6      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (5) ___expand_heap                                        5     4      1     136
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Reverse                                             11     8      3     271
                                              0 COMMON    11     8      3
 ---------------------------------------------------------------------------------
 (2) _MovieShape                                           8     3      5     729
                                              5 BANK0      8     3      5
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _ShowShape
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (2) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _ShowShape                                           14     9      5     312
                                              4 COMMON     9     4      5
                                              0 BANK0      5     5      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (4) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeOfCoordinates
     _MovieShape
       _MovieDown
       _MovieLeft
       _MovieRigth
       _MovieUp
       _ShowShape
         _SendToSegment
           _SpiSendByte
       _SpiClearMatrix
         _SendToSegment
     _Reverse
     _Rotate
       _calloc
         ___wmul
         _malloc
           ___expand_heap
           ___simple_search_fl
           ___wmul (ARG)
         _memset
           ___wmul (ARG)
       _free
   _MatrixInit
     _SendToSegment
     _SpiClearMatrix
   _PortBInit
   _SetPosition
   _SpiInit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               85      0       0      0.0%
BITBANK3            85      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      11     13.8%
BITBANK1            80      0       0      0.0%
BANK0               80     73      79     98.8%
BITBANK0            80      0       0      0.0%
COMMON              13     13      13    100.0%
BITCOMMON           13      0       0      0.0%
DATA                 0      0     103      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 18 17:16:56 2024

                      _SpiClearMatrix 0042                                     pc 0002  
                                  l21 03D7                                    l32 0499  
                                  l71 0FED                                    l72 0FEE  
                                  l49 0009                                    l66 001B  
                                  l91 0041                                    l69 0FE9  
                                  l85 0057                                    l88 0113  
                                  fsr 0004                   ___wmul@multiplicand 0073  
                     SpiSendByte@data 0071                                   l102 008D  
                                 l111 002E                                   l120 0FE3  
                                 l114 0070                                   l130 0294  
                                 l108 0315                                   l117 0FFF  
                                 l141 03D2                                   l233 00BB  
                                 l147 0156                                   l235 00D3  
                                 l711 0705                                   l703 07D7  
                                 l720 0651                                   l714 07AE  
                                 l740 04AA                                   l744 0563  
                                 l762 01B3                                   l746 053E  
                                 l748 0531                                   l773 00AE  
                                 l767 01EB                                   l697 019E  
                                 _RA5 002D                                   u500 0660  
                                 u501 065F                                   u510 067C  
                                 u511 067B                                   u600 01AF  
                                 u520 0682                                   u601 01AE  
                                 u521 0681                                   u610 01BC  
                                 u530 06D8                                   u611 01BB  
                                 u531 06D7                                   u515 0678  
                                 u620 01D0                                   u540 06DE  
                                 u700 04C7                                   u621 01CF  
                                 u541 06DD                                   u701 04C6  
                                 u630 01DA                                   u550 06FC  
                                 u710 04E5                                   u631 01D9  
                                 u551 06FB                                   u535 06D4  
                                 u711 04E4                                   u640 00B5  
                                 u560 0722                                   u720 04FD  
                                 u800 056E                                   u641 00B4  
                                 u561 0721                                   u721 04FC  
                                 u801 056D                                   u490 0FED  
                                 u570 0728                                   u730 051A  
                                 u810 0584                                   u491 0FEC  
                                 u635 01D6                                   u571 0727  
                                 u555 06F8                                   u731 0519  
                                 u811 0583                                   u580 0756  
                                 u740 052D                                   u820 059A  
                                 u900 0372                                   u581 0755  
                                 u741 052C                                   u725 04F9  
                                 u821 0599                                   u670 00CF  
                                 u590 07B8                                   u750 00AE  
                                 u830 060A                                   u910 03A0  
                                 u671 00CE                                   u655 00BC  
                                 u591 07B7                                   u751 00AD  
                                 u831 0609                                   u760 0057  
                                 u840 0156                                   u680 04A4  
                                 u920 03C7                                   u761 0056  
                                 u841 0155                                   u665 00C3  
                                 u745 0529                                   u681 04A3  
                                 u825 0596                                   u921 03C6  
                                 u690 04B3                                   u850 0331  
                                 u930 0458                                   u595 07B4  
                                 u691 04B2                                   u835 0606  
                                 u851 0330                                   u931 0457  
                                 u780 0315                                   u860 033D  
                                 u940 0460                                   u781 0314  
                                 u845 0152                                   u925 03C3  
                                 u861 033C                                   u941 045F  
                                 u774 02E3                                   u790 017B  
                                 u870 034C                                   u950 0468  
                                 u775 02E1                                   u791 017A  
                                 u871 034B                                   u951 0467  
                                 u935 0454                                   u960 0499  
                                 u785 0311                                   u961 0498  
                                 u884 0359                                   u885 0357  
                                 u965 0495                                   u894 0363  
                                 u895 0361                                   u977 00DA  
                                 u987 043D                                   fsr0 0004  
                                 indf 0000                                  l1201 0652  
                                l1211 0668                                  l1203 065A  
                                l1301 00C9                                  l1213 067C  
                                l1205 0660                                  l1303 00CF  
                                l1231 06FD                                  l1215 0682  
                                l1223 06C4                                  l1311 04A4  
                                l1241 0756                                  l1233 0709  
                                l1225 06D8                                  l1217 06A8  
                                l1209 0663                                  l1313 04B3  
                                l1251 07B8                                  l1243 0770  
                                l1227 06DE                                  l1219 06BB  
                                l1235 071C                                  l1331 04FD  
                                l1323 04D0                                  l1315 04B8  
                                l1307 049A                                  l1411 059A  
                                l1403 0564                                  l1253 07BD  
                                l1245 077A                                  l1237 0722  
                                l1341 051B                                  l1333 0507  
                                l1325 04D0                                  l1317 04C7  
                                l1309 049E                                  l1413 05BF  
                                l1421 05E6                                  l1501 0394  
                                l1271 01C0                                  l1263 019F  
                                l1255 07CF                                  l1247 0798  
                                l1239 0728                                  l1351 0556  
                                l1343 052D                                  l1335 0514  
                                l1327 04DF                                  l1319 04CD  
                                l1423 060A                                  l1415 05E1  
                                l1407 056F                                  l1503 03B3  
                                l1441 025B                                  l1433 023C  
                                l1273 01C7                                  l1265 01A7  
                                l1249 07AA                                  l1353 055A  
                                l1345 0544                                  l1329 04E5  
                                l1361 0095                                  l1409 0584  
                                l1505 03B9                                  l1521 040F  
                                l1291 003E                                  l1371 0051  
                                l1435 023D                                  l1283 01E3  
                                l1275 01D0                                  l1267 01AF  
                                l1347 0548                                  l1355 055F  
                                l1363 009C                                  l1427 062D  
                                l1507 03C7                                  l1531 0458  
                                l1515 03DC                                  l1381 02ED  
                                l1373 0295                                  l1437 0247  
                                l1445 0265                                  l1461 011F  
                                l1293 00AF                                  l1277 01DA  
                                l1269 01BC                                  l1349 0552  
                                l1365 00A0                                  l1429 0640  
                                l1541 0484                                  l1533 0460  
                                l1517 03ED                                  l1525 0420  
                                l1509 03D3                                  l1391 0FD9  
                                l1199 0FE5                                  l1287 002F  
                                l1383 02F3                                  l1375 0295  
                                l1367 0042                                  l1439 0251  
                                l1447 027E                                  l1463 013C  
                                l1295 00B1                                  l1279 01E0  
                                l1359 008E                                  l1471 032B  
                                l1543 048C                                  l1535 0468  
                                l1519 03FE                                  l1527 0435  
                                l1551 000D                                  l1385 001C  
                                l1289 0032                                  l1377 02AA  
                                l1369 0044                                  l1449 0283  
                                l1465 0142                                  l1457 0114  
                                l1297 00B5                                  l1393 0157  
                                l1481 0346                                  l1473 0331  
                                l1537 0473                                  l1529 044B  
                                l1561 00E3                                  l1553 0015  
                                l1387 0058                                  l1379 02C6  
                                l1467 0148                                  l1459 0116  
                                l1299 00C2                                  l1395 0175  
                                l1491 0383                                  l1483 0348  
                                l1475 0339                                  l1539 0479  
                                l1563 00ED                                  l1571 0003  
                                l1555 0017                                  l1389 0FEF  
                                l1397 017B                                  l1469 0316  
                                l1637 0427                                  l1565 00F8  
                                l1557 00D4                                  l1573 0071  
                                l1549 000A                                  l1581 0211  
                                l1639 026D                                  l1399 0198  
                                l1495 038A                                  l1487 034D  
                                l1479 033E                                  l1567 0103  
                                l1559 00E0                                  l1575 007B  
                                l1583 0213                                  l1489 037D  
                                l1569 010E                                  l1585 0222  
                                l1577 01EC                                  l1499 0391  
                                l1579 01F6                                  _brkp 0069  
                                _free 0564                                  _main 01EC  
                                btemp 007E                           main@reverse 0064  
                                start 0000                __end_of_SpiClearMatrix 0058  
                     __end_of_MovieUp 0071                       __end_of_SpiInit 001C  
                     __end_of_Reverse 0157                                 ?_free 0071  
                               ?_main 0071                   _ChangeOfCoordinates 03D3  
                               _PORTA 0005                                 _PORTB 0006  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _SSPIF 0063  
                     SpiClearMatrix@i 0077                     SendToSegment@data 0074  
                               _errno 00A6                                 free@c 007B  
                               pclath 000A                      ___expand_heap@pn 0071  
                               status 0003                                 wtemp0 007E  
                        main@square_1 005F                  ?_ChangeOfCoordinates 0052  
                     ?_SpiClearMatrix 0071                       __initialization 07D8  
                        __end_of_free 0652                          __end_of_main 0239  
                       ___expand_heap 019F                            _MatrixInit 00D4  
                              ??_free 0073                                ??_main 007E  
                       ??_SetPosition 0077                         calloc@new_ptr 003C  
               ??_ChangeOfCoordinates 0058                                _SSPCON 0014  
                              _SSPBUF 0013                            _MovieShape 0239  
                          _MovieRigth 0FD9                  MovieShape@shapeArray 0027  
                           ??_MovieUp 0073                             ??_SpiInit 0071  
                           ??_Reverse 0074                         ??_SpiSendByte 0071  
                              _Rotate 0316                        ?___expand_heap 0071  
             ___simple_search_fl@best 002C               ___simple_search_fl@last 0026  
             ___simple_search_fl@next 0028                                ___wmul 00AF  
                              _calloc 0157                                _malloc 049A  
                              _memset 008E                        ShowShape@coord 0075  
             __end_of__initialization 07FC                   __end_of_SetPosition 008E  
                          ___freelist 006D                        __pcstackCOMMON 0071  
                        __pidataBANK1 0FD6                           ?_MatrixInit 0071  
                 __end_of_SpiSendByte 0FEF     ChangeOfCoordinates@_shapePosition 0052  
ChangeOfCoordinates@_countElemntArray 0055            __end_of___simple_search_fl 07D8  
                          __pbssBANK0 0069                            __pbssBANK1 00A0  
                   __end_of_MovieLeft 1000                     __end_of_MovieDown 002F  
            MovieShape@_shapePosition 0025                     __end_of_PortBInit 000A  
                   __end_of_ShowShape 0316                           ?_MovieShape 0025  
                   main@shapePosition 0065                           ?_MovieRigth 0071  
                     ??___expand_heap 0072                            __pmaintext 01EC  
                             ?_Rotate 003E                               ?___wmul 0071  
                             ?_calloc 0038                               ?_malloc 0079  
                             ?_memset 0077                         MovieShape@dir 002C  
           ShowShape@countElemntArray 0077                           _SetPosition 0071  
                             _SSPSTAT 0094                            __stringtab 0800  
                    ??_SpiClearMatrix 0075                            calloc@size 003A  
                             _MovieUp 0058                               _SpiInit 000A  
                       _SendToSegment 002F                  ___simple_search_fl@c 002A  
                             _Reverse 0114                  ___simple_search_fl@n 0071  
                         _SpiSendByte 0FE4                               Rotate@i 004A  
                             Rotate@x 0048                               Rotate@y 004C  
            ___simple_search_fl@split 0024                               __ptext1 000A  
                             __ptext2 0071                               __ptext3 0003  
                             __ptext4 00D4                               __ptext5 03D3  
                             __ptext6 0316                               __ptext7 0564  
                             __ptext8 0157                               __ptext9 008E  
             ChangeOfCoordinates@step 005D                               free@ptr 0071  
                end_of_initialization 07FC                               malloc@m 002E  
                             malloc@n 0079                               malloc@p 0034  
              ___expand_heap@new_brkp 0074                               memset@c 0079  
                             memset@n 007B                               memset@p 0020  
                      ?_SendToSegment 0072                   SetPosition@position 0071  
         __end_of_ChangeOfCoordinates 049A               MovieLeft@_shapePosition 0071  
          ChangeOfCoordinates@_figure 0054                        __end_of_Rotate 03D3  
                      __end_of___wmul 00D4                          ??_MatrixInit 0078  
                      __end_of_calloc 019F                        __end_of_malloc 0564  
                      __end_of_memset 00AF                       ___expand_heap@n 0072  
                 start_initialization 07D8                            malloc@lock 00A0  
                          malloc@size 0032                    __end_of_MatrixInit 0114  
                     ??_SendToSegment 0075                          ??_MovieShape 002A  
                        ??_MovieRigth 0073                             _MovieLeft 0FEF  
                           _MovieDown 001C                    ___simple_search_fl 0652  
                           _PortBInit 0003                              ??_Rotate 0041  
                           _ShowShape 0295          ___simple_search_fl@best_last 0022  
                            ??___wmul 0075                              ??_calloc 007D  
                         __pdataBANK1 00A8                              ??_malloc 007B  
                            ??_memset 007D                   ?___simple_search_fl 0071  
                          memset@dest 0077                         ShowShape@_pos 007A  
                        SetPosition@x 0073                          SetPosition@y 0075  
                           Rotate@res 004E                             ___heap_hi 0170  
                           ___heap_lo 0110                             ___latbits 0002  
                       __pcstackBANK0 0020                    __end_of_MovieShape 0295  
                  __end_of_MovieRigth 0FE4                          ?_SetPosition 0071  
                main@countElemntArray 0062                   ShowShape@shapeArray 0079  
                ??___simple_search_fl 0073           ChangeOfCoordinates@_reverse 0057  
                          ?_MovieLeft 0071                            ?_MovieDown 0071  
                            ?_MovieUp 0071                              ?_SpiInit 0071  
                            ?_Reverse 0071                            ?_PortBInit 0071  
               __end_of___expand_heap 01EC                          ?_SpiSendByte 0071  
                          ?_ShowShape 0075                             __pstrings 0800  
             MovieDown@_shapePosition 0071      __end_ofChangeOfCoordinates@delay 080A  
               MovieUp@_shapePosition 0071                        ___wmul@product 0075  
                  Reverse@countElemnt 0072                          Reverse@array 0071  
                         __stringbase 0805                     ___wmul@multiplier 0071  
                           malloc@end 00A4                             malloc@cur 006B  
                           malloc@new 0036                           ??_MovieLeft 0073  
                         ??_MovieDown 0073                           calloc@nmemb 0038  
                            Reverse@i 0078                              Reverse@j 007A  
                            Reverse@t 0077                           ??_PortBInit 0071  
                         ??_ShowShape 0020                          ShowShape@pos 007C  
                            Rotate@_i 0050                    __end_of__stringtab 0806  
                            __ptext10 049A                              __ptext11 0652  
                            __ptext20 0058                              __ptext12 019F  
                            __ptext21 0FD9                              __ptext13 00AF  
                            __ptext22 0FEF                              __ptext14 0114  
                            __ptext23 001C                              __ptext15 0239  
                            __ptext16 0042                              __ptext17 0295  
                            __ptext18 002F                              __ptext19 0FE4  
            ChangeOfCoordinates@delay 0806                              main@F928 00A8  
                SendToSegment@segment 0072                              free@cptr 0079  
                            malloc@sz 0030     ___simple_search_fl@remaining_size 0020  
                ChangeOfCoordinates@i 005B                             stringcode 0800  
               __end_of_SendToSegment 0042              MovieRigth@_shapePosition 0071  
          MovieShape@countElemntArray 0028                              stringdir 0800  
                            stringtab 0800                          Rotate@array_ 003E  
                        Rotate@length 003F  
