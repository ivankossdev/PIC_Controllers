

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Dec 18 10:48:50 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 12/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F876 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0004                     fsr             equ	4
    73     0004                     fsr0            equ	4
    74     0000                     indf            equ	0
    75     0000                     indf0           equ	0
    76     0002                     pc              equ	2
    77     0002                     pcl             equ	2
    78     000A                     pclath          equ	10
    79     0003                     status          equ	3
    80     0000                     INDF            equ	0	;# 
    81     0001                     TMR0            equ	1	;# 
    82     0002                     PCL             equ	2	;# 
    83     0003                     STATUS          equ	3	;# 
    84     0004                     FSR             equ	4	;# 
    85     0005                     PORTA           equ	5	;# 
    86     0006                     PORTB           equ	6	;# 
    87     0007                     PORTC           equ	7	;# 
    88     000A                     PCLATH          equ	10	;# 
    89     000B                     INTCON          equ	11	;# 
    90     000C                     PIR1            equ	12	;# 
    91     000D                     PIR2            equ	13	;# 
    92     000E                     TMR1            equ	14	;# 
    93     000E                     TMR1L           equ	14	;# 
    94     000F                     TMR1H           equ	15	;# 
    95     0010                     T1CON           equ	16	;# 
    96     0011                     TMR2            equ	17	;# 
    97     0012                     T2CON           equ	18	;# 
    98     0013                     SSPBUF          equ	19	;# 
    99     0014                     SSPCON          equ	20	;# 
   100     0015                     CCPR1           equ	21	;# 
   101     0015                     CCPR1L          equ	21	;# 
   102     0016                     CCPR1H          equ	22	;# 
   103     0017                     CCP1CON         equ	23	;# 
   104     0018                     RCSTA           equ	24	;# 
   105     0019                     TXREG           equ	25	;# 
   106     001A                     RCREG           equ	26	;# 
   107     001B                     CCPR2           equ	27	;# 
   108     001B                     CCPR2L          equ	27	;# 
   109     001C                     CCPR2H          equ	28	;# 
   110     001D                     CCP2CON         equ	29	;# 
   111     001E                     ADRESH          equ	30	;# 
   112     001F                     ADCON0          equ	31	;# 
   113     0081                     OPTION_REG      equ	129	;# 
   114     0085                     TRISA           equ	133	;# 
   115     0086                     TRISB           equ	134	;# 
   116     0087                     TRISC           equ	135	;# 
   117     008C                     PIE1            equ	140	;# 
   118     008D                     PIE2            equ	141	;# 
   119     008E                     PCON            equ	142	;# 
   120     0091                     SSPCON2         equ	145	;# 
   121     0092                     PR2             equ	146	;# 
   122     0093                     SSPADD          equ	147	;# 
   123     0094                     SSPSTAT         equ	148	;# 
   124     0098                     TXSTA           equ	152	;# 
   125     0099                     SPBRG           equ	153	;# 
   126     009E                     ADRESL          equ	158	;# 
   127     009F                     ADCON1          equ	159	;# 
   128     010C                     EEDATA          equ	268	;# 
   129     010D                     EEADR           equ	269	;# 
   130     010E                     EEDATH          equ	270	;# 
   131     010F                     EEADRH          equ	271	;# 
   132     018C                     EECON1          equ	396	;# 
   133     018D                     EECON2          equ	397	;# 
   134     0000                     INDF            equ	0	;# 
   135     0001                     TMR0            equ	1	;# 
   136     0002                     PCL             equ	2	;# 
   137     0003                     STATUS          equ	3	;# 
   138     0004                     FSR             equ	4	;# 
   139     0005                     PORTA           equ	5	;# 
   140     0006                     PORTB           equ	6	;# 
   141     0007                     PORTC           equ	7	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     008C                     PIE1            equ	140	;# 
   172     008D                     PIE2            equ	141	;# 
   173     008E                     PCON            equ	142	;# 
   174     0091                     SSPCON2         equ	145	;# 
   175     0092                     PR2             equ	146	;# 
   176     0093                     SSPADD          equ	147	;# 
   177     0094                     SSPSTAT         equ	148	;# 
   178     0098                     TXSTA           equ	152	;# 
   179     0099                     SPBRG           equ	153	;# 
   180     009E                     ADRESL          equ	158	;# 
   181     009F                     ADCON1          equ	159	;# 
   182     010C                     EEDATA          equ	268	;# 
   183     010D                     EEADR           equ	269	;# 
   184     010E                     EEDATH          equ	270	;# 
   185     010F                     EEADRH          equ	271	;# 
   186     018C                     EECON1          equ	396	;# 
   187     018D                     EECON2          equ	397	;# 
   188     0000                     INDF            equ	0	;# 
   189     0001                     TMR0            equ	1	;# 
   190     0002                     PCL             equ	2	;# 
   191     0003                     STATUS          equ	3	;# 
   192     0004                     FSR             equ	4	;# 
   193     0005                     PORTA           equ	5	;# 
   194     0006                     PORTB           equ	6	;# 
   195     0007                     PORTC           equ	7	;# 
   196     000A                     PCLATH          equ	10	;# 
   197     000B                     INTCON          equ	11	;# 
   198     000C                     PIR1            equ	12	;# 
   199     000D                     PIR2            equ	13	;# 
   200     000E                     TMR1            equ	14	;# 
   201     000E                     TMR1L           equ	14	;# 
   202     000F                     TMR1H           equ	15	;# 
   203     0010                     T1CON           equ	16	;# 
   204     0011                     TMR2            equ	17	;# 
   205     0012                     T2CON           equ	18	;# 
   206     0013                     SSPBUF          equ	19	;# 
   207     0014                     SSPCON          equ	20	;# 
   208     0015                     CCPR1           equ	21	;# 
   209     0015                     CCPR1L          equ	21	;# 
   210     0016                     CCPR1H          equ	22	;# 
   211     0017                     CCP1CON         equ	23	;# 
   212     0018                     RCSTA           equ	24	;# 
   213     0019                     TXREG           equ	25	;# 
   214     001A                     RCREG           equ	26	;# 
   215     001B                     CCPR2           equ	27	;# 
   216     001B                     CCPR2L          equ	27	;# 
   217     001C                     CCPR2H          equ	28	;# 
   218     001D                     CCP2CON         equ	29	;# 
   219     001E                     ADRESH          equ	30	;# 
   220     001F                     ADCON0          equ	31	;# 
   221     0081                     OPTION_REG      equ	129	;# 
   222     0085                     TRISA           equ	133	;# 
   223     0086                     TRISB           equ	134	;# 
   224     0087                     TRISC           equ	135	;# 
   225     008C                     PIE1            equ	140	;# 
   226     008D                     PIE2            equ	141	;# 
   227     008E                     PCON            equ	142	;# 
   228     0091                     SSPCON2         equ	145	;# 
   229     0092                     PR2             equ	146	;# 
   230     0093                     SSPADD          equ	147	;# 
   231     0094                     SSPSTAT         equ	148	;# 
   232     0098                     TXSTA           equ	152	;# 
   233     0099                     SPBRG           equ	153	;# 
   234     009E                     ADRESL          equ	158	;# 
   235     009F                     ADCON1          equ	159	;# 
   236     010C                     EEDATA          equ	268	;# 
   237     010D                     EEADR           equ	269	;# 
   238     010E                     EEDATH          equ	270	;# 
   239     010F                     EEADRH          equ	271	;# 
   240     018C                     EECON1          equ	396	;# 
   241     018D                     EECON2          equ	397	;# 
   242     0000                     INDF            equ	0	;# 
   243     0001                     TMR0            equ	1	;# 
   244     0002                     PCL             equ	2	;# 
   245     0003                     STATUS          equ	3	;# 
   246     0004                     FSR             equ	4	;# 
   247     0005                     PORTA           equ	5	;# 
   248     0006                     PORTB           equ	6	;# 
   249     0007                     PORTC           equ	7	;# 
   250     000A                     PCLATH          equ	10	;# 
   251     000B                     INTCON          equ	11	;# 
   252     000C                     PIR1            equ	12	;# 
   253     000D                     PIR2            equ	13	;# 
   254     000E                     TMR1            equ	14	;# 
   255     000E                     TMR1L           equ	14	;# 
   256     000F                     TMR1H           equ	15	;# 
   257     0010                     T1CON           equ	16	;# 
   258     0011                     TMR2            equ	17	;# 
   259     0012                     T2CON           equ	18	;# 
   260     0013                     SSPBUF          equ	19	;# 
   261     0014                     SSPCON          equ	20	;# 
   262     0015                     CCPR1           equ	21	;# 
   263     0015                     CCPR1L          equ	21	;# 
   264     0016                     CCPR1H          equ	22	;# 
   265     0017                     CCP1CON         equ	23	;# 
   266     0018                     RCSTA           equ	24	;# 
   267     0019                     TXREG           equ	25	;# 
   268     001A                     RCREG           equ	26	;# 
   269     001B                     CCPR2           equ	27	;# 
   270     001B                     CCPR2L          equ	27	;# 
   271     001C                     CCPR2H          equ	28	;# 
   272     001D                     CCP2CON         equ	29	;# 
   273     001E                     ADRESH          equ	30	;# 
   274     001F                     ADCON0          equ	31	;# 
   275     0081                     OPTION_REG      equ	129	;# 
   276     0085                     TRISA           equ	133	;# 
   277     0086                     TRISB           equ	134	;# 
   278     0087                     TRISC           equ	135	;# 
   279     008C                     PIE1            equ	140	;# 
   280     008D                     PIE2            equ	141	;# 
   281     008E                     PCON            equ	142	;# 
   282     0091                     SSPCON2         equ	145	;# 
   283     0092                     PR2             equ	146	;# 
   284     0093                     SSPADD          equ	147	;# 
   285     0094                     SSPSTAT         equ	148	;# 
   286     0098                     TXSTA           equ	152	;# 
   287     0099                     SPBRG           equ	153	;# 
   288     009E                     ADRESL          equ	158	;# 
   289     009F                     ADCON1          equ	159	;# 
   290     010C                     EEDATA          equ	268	;# 
   291     010D                     EEADR           equ	269	;# 
   292     010E                     EEDATH          equ	270	;# 
   293     010F                     EEADRH          equ	271	;# 
   294     018C                     EECON1          equ	396	;# 
   295     018D                     EECON2          equ	397	;# 
   296     0000                     INDF            equ	0	;# 
   297     0001                     TMR0            equ	1	;# 
   298     0002                     PCL             equ	2	;# 
   299     0003                     STATUS          equ	3	;# 
   300     0004                     FSR             equ	4	;# 
   301     0005                     PORTA           equ	5	;# 
   302     0006                     PORTB           equ	6	;# 
   303     0007                     PORTC           equ	7	;# 
   304     000A                     PCLATH          equ	10	;# 
   305     000B                     INTCON          equ	11	;# 
   306     000C                     PIR1            equ	12	;# 
   307     000D                     PIR2            equ	13	;# 
   308     000E                     TMR1            equ	14	;# 
   309     000E                     TMR1L           equ	14	;# 
   310     000F                     TMR1H           equ	15	;# 
   311     0010                     T1CON           equ	16	;# 
   312     0011                     TMR2            equ	17	;# 
   313     0012                     T2CON           equ	18	;# 
   314     0013                     SSPBUF          equ	19	;# 
   315     0014                     SSPCON          equ	20	;# 
   316     0015                     CCPR1           equ	21	;# 
   317     0015                     CCPR1L          equ	21	;# 
   318     0016                     CCPR1H          equ	22	;# 
   319     0017                     CCP1CON         equ	23	;# 
   320     0018                     RCSTA           equ	24	;# 
   321     0019                     TXREG           equ	25	;# 
   322     001A                     RCREG           equ	26	;# 
   323     001B                     CCPR2           equ	27	;# 
   324     001B                     CCPR2L          equ	27	;# 
   325     001C                     CCPR2H          equ	28	;# 
   326     001D                     CCP2CON         equ	29	;# 
   327     001E                     ADRESH          equ	30	;# 
   328     001F                     ADCON0          equ	31	;# 
   329     0081                     OPTION_REG      equ	129	;# 
   330     0085                     TRISA           equ	133	;# 
   331     0086                     TRISB           equ	134	;# 
   332     0087                     TRISC           equ	135	;# 
   333     008C                     PIE1            equ	140	;# 
   334     008D                     PIE2            equ	141	;# 
   335     008E                     PCON            equ	142	;# 
   336     0091                     SSPCON2         equ	145	;# 
   337     0092                     PR2             equ	146	;# 
   338     0093                     SSPADD          equ	147	;# 
   339     0094                     SSPSTAT         equ	148	;# 
   340     0098                     TXSTA           equ	152	;# 
   341     0099                     SPBRG           equ	153	;# 
   342     009E                     ADRESL          equ	158	;# 
   343     009F                     ADCON1          equ	159	;# 
   344     010C                     EEDATA          equ	268	;# 
   345     010D                     EEADR           equ	269	;# 
   346     010E                     EEDATH          equ	270	;# 
   347     010F                     EEADRH          equ	271	;# 
   348     018C                     EECON1          equ	396	;# 
   349     018D                     EECON2          equ	397	;# 
   350     0000                     INDF            equ	0	;# 
   351     0001                     TMR0            equ	1	;# 
   352     0002                     PCL             equ	2	;# 
   353     0003                     STATUS          equ	3	;# 
   354     0004                     FSR             equ	4	;# 
   355     0005                     PORTA           equ	5	;# 
   356     0006                     PORTB           equ	6	;# 
   357     0007                     PORTC           equ	7	;# 
   358     000A                     PCLATH          equ	10	;# 
   359     000B                     INTCON          equ	11	;# 
   360     000C                     PIR1            equ	12	;# 
   361     000D                     PIR2            equ	13	;# 
   362     000E                     TMR1            equ	14	;# 
   363     000E                     TMR1L           equ	14	;# 
   364     000F                     TMR1H           equ	15	;# 
   365     0010                     T1CON           equ	16	;# 
   366     0011                     TMR2            equ	17	;# 
   367     0012                     T2CON           equ	18	;# 
   368     0013                     SSPBUF          equ	19	;# 
   369     0014                     SSPCON          equ	20	;# 
   370     0015                     CCPR1           equ	21	;# 
   371     0015                     CCPR1L          equ	21	;# 
   372     0016                     CCPR1H          equ	22	;# 
   373     0017                     CCP1CON         equ	23	;# 
   374     0018                     RCSTA           equ	24	;# 
   375     0019                     TXREG           equ	25	;# 
   376     001A                     RCREG           equ	26	;# 
   377     001B                     CCPR2           equ	27	;# 
   378     001B                     CCPR2L          equ	27	;# 
   379     001C                     CCPR2H          equ	28	;# 
   380     001D                     CCP2CON         equ	29	;# 
   381     001E                     ADRESH          equ	30	;# 
   382     001F                     ADCON0          equ	31	;# 
   383     0081                     OPTION_REG      equ	129	;# 
   384     0085                     TRISA           equ	133	;# 
   385     0086                     TRISB           equ	134	;# 
   386     0087                     TRISC           equ	135	;# 
   387     008C                     PIE1            equ	140	;# 
   388     008D                     PIE2            equ	141	;# 
   389     008E                     PCON            equ	142	;# 
   390     0091                     SSPCON2         equ	145	;# 
   391     0092                     PR2             equ	146	;# 
   392     0093                     SSPADD          equ	147	;# 
   393     0094                     SSPSTAT         equ	148	;# 
   394     0098                     TXSTA           equ	152	;# 
   395     0099                     SPBRG           equ	153	;# 
   396     009E                     ADRESL          equ	158	;# 
   397     009F                     ADCON1          equ	159	;# 
   398     010C                     EEDATA          equ	268	;# 
   399     010D                     EEADR           equ	269	;# 
   400     010E                     EEDATH          equ	270	;# 
   401     010F                     EEADRH          equ	271	;# 
   402     018C                     EECON1          equ	396	;# 
   403     018D                     EECON2          equ	397	;# 
   404                           
   405                           	psect	idataBANK1
   406     002F                     __pidataBANK1:
   407                           
   408                           ;initializer for main@F927
   409     002F  3407               	retlw	7
   410     0030  3405               	retlw	5
   411     0031  3402               	retlw	2
   412                           
   413                           	psect	strings
   414     0003                     __pstrings:
   415     0003                     stringtab:
   416     0003                     __stringtab:
   417     0003                     stringcode:	
   418                           ;	String table - string pointers are 1 byte each
   419                           
   420     0003                     stringdir:
   421     0003  3000               	movlw	high stringdir
   422     0004  008A               	movwf	10
   423     0005  0804               	movf	4,w
   424     0006  0A84               	incf	4,f
   425     0007  0782               	addwf	2,f
   426     0008                     __stringbase:
   427     0008  3400               	retlw	0
   428     0009                     __end_of__stringtab:
   429     0009                     main@delay:
   430     0009  34E8               	retlw	232
   431     000A  3403               	retlw	3
   432     000B  3400               	retlw	0
   433     000C  3400               	retlw	0
   434     000D                     __end_ofmain@delay:
   435     000D                     ChangeOfCoordinates@delay:
   436     000D  3464               	retlw	100
   437     000E  3400               	retlw	0
   438     000F  3400               	retlw	0
   439     0010  3400               	retlw	0
   440     0011                     __end_ofChangeOfCoordinates@delay:
   441     0013                     _SSPBUF         set	19
   442     0014                     _SSPCON         set	20
   443     0005                     _PORTA          set	5
   444     0006                     _PORTB          set	6
   445     002D                     _RA5            set	45
   446     0063                     _SSPIF          set	99
   447     0094                     _SSPSTAT        set	148
   448     0085                     _TRISA          set	133
   449     0087                     _TRISC          set	135
   450     0086                     _TRISB          set	134
   451                           
   452                           	psect	cinit
   453     07D8                     start_initialization:	
   454                           ; #config settings
   455                           
   456     07D8                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK1
   459     07D8  1683               	bsf	3,5	;RP0=1, select bank1
   460     07D9  1303               	bcf	3,6	;RP1=0, select bank1
   461     07DA  120A  118A  202F  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   462     07DF  00A6               	movwf	__pdataBANK1& (0+127)
   463     07E0  120A  118A  2030  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   464     07E5  00A7               	movwf	(__pdataBANK1+1)& (0+127)
   465     07E6  120A  118A  2031  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   466     07EB  00A8               	movwf	(__pdataBANK1+2)& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469     07EC  01A0               	clrf	__pbssBANK1& (0+127)
   470     07ED  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   471     07EE  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   472     07EF  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   473     07F0  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   474     07F1  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   475                           
   476                           ; Clear objects allocated to BANK0
   477     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   478     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   479     07F4  01E7               	clrf	__pbssBANK0& (0+127)
   480     07F5  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   481     07F6  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   482     07F7  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   483     07F8  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   484     07F9  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   485     07FA  01ED               	clrf	(__pbssBANK0+6)& (0+127)
   486     07FB  01EE               	clrf	(__pbssBANK0+7)& (0+127)
   487     07FC                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490     07FC                     __end_of__initialization:
   491     07FC  0183               	clrf	3
   492     07FD  120A  118A  29B2   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssBANK0
   495     0067                     __pbssBANK0:
   496     0067                     _brkp:
   497     0067                     	ds	2
   498     0069                     malloc@end:
   499     0069                     	ds	2
   500     006B                     malloc@cur:
   501     006B                     	ds	2
   502     006D                     ___freelist:
   503     006D                     	ds	2
   504                           
   505                           	psect	bssBANK1
   506     00A0                     __pbssBANK1:
   507     00A0                     malloc@lock:
   508     00A0                     	ds	4
   509     00A4                     _errno:
   510     00A4                     	ds	2
   511                           
   512                           	psect	dataBANK1
   513     00A6                     __pdataBANK1:
   514     00A6                     main@F927:
   515     00A6                     	ds	3
   516                           
   517                           	psect	cstackCOMMON
   518     0071                     __pcstackCOMMON:
   519     0071                     ?_SpiInit:
   520     0071                     ?_MatrixInit:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0071                     ?_PortBInit:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0071                     ?_SetPosition:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0071                     ?_free:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0071                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0071                     ?_SpiSendByte:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0071                     ?_SpiClearMatrix:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0071                     ?_MovieDown:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0071                     ?_MovieUp:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0071                     ?_MovieLeft:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0071                     ?_MovieRigth:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0071                     ?___simple_search_fl:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0071                     ?___expand_heap:	
   557                           ; 2 bytes @ 0x0
   558                           
   559     0071                     ?___wmul:	
   560                           ; 2 bytes @ 0x0
   561                           
   562     0071                     SpiSendByte@data:	
   563                           ; 2 bytes @ 0x0
   564                           
   565     0071                     ___expand_heap@pn:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0071                     SetPosition@position:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0071                     MovieDown@_shapePosition:	
   572                           ; 2 bytes @ 0x0
   573                           
   574     0071                     MovieUp@_shapePosition:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0071                     MovieLeft@_shapePosition:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0071                     MovieRigth@_shapePosition:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0071                     ___wmul@multiplier:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0071                     ___simple_search_fl@n:	
   587                           ; 2 bytes @ 0x0
   588                           
   589     0071                     free@ptr:	
   590                           ; 2 bytes @ 0x0
   591                           
   592     0071                     ??_SpiInit:	
   593                           ; 2 bytes @ 0x0
   594                           
   595     0071                     ??_PortBInit:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0071                     ??_SpiSendByte:	
   599                           ; 1 bytes @ 0x0
   600                           
   601                           
   602                           ; 1 bytes @ 0x0
   603     0071                     	ds	1
   604     0072                     ?_SendToSegment:
   605     0072                     SendToSegment@segment:	
   606                           ; 1 bytes @ 0x1
   607                           
   608     0072                     ___expand_heap@n:	
   609                           ; 2 bytes @ 0x1
   610                           
   611     0072                     ??___expand_heap:	
   612                           ; 2 bytes @ 0x1
   613                           
   614                           
   615                           ; 1 bytes @ 0x1
   616     0072                     	ds	1
   617     0073                     SetPosition@x:
   618     0073                     ___wmul@multiplicand:	
   619                           ; 2 bytes @ 0x2
   620                           
   621     0073                     ??_free:	
   622                           ; 2 bytes @ 0x2
   623                           
   624     0073                     ??___simple_search_fl:	
   625                           ; 1 bytes @ 0x2
   626                           
   627     0073                     ??_MovieDown:	
   628                           ; 1 bytes @ 0x2
   629                           
   630     0073                     ??_MovieUp:	
   631                           ; 1 bytes @ 0x2
   632                           
   633     0073                     ??_MovieLeft:	
   634                           ; 1 bytes @ 0x2
   635                           
   636     0073                     ??_MovieRigth:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 1 bytes @ 0x2
   641     0073                     	ds	1
   642     0074                     SendToSegment@data:
   643     0074                     ___expand_heap@new_brkp:	
   644                           ; 1 bytes @ 0x3
   645                           
   646                           
   647                           ; 2 bytes @ 0x3
   648     0074                     	ds	1
   649     0075                     ?_ShowShape:
   650     0075                     SetPosition@y:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     0075                     ShowShape@coord:	
   654                           ; 2 bytes @ 0x4
   655                           
   656     0075                     ___wmul@product:	
   657                           ; 2 bytes @ 0x4
   658                           
   659     0075                     ??_SendToSegment:	
   660                           ; 2 bytes @ 0x4
   661                           
   662     0075                     ??_SpiClearMatrix:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0075                     ??___wmul:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 1 bytes @ 0x4
   670     0075                     	ds	2
   671     0077                     ?_memset:
   672     0077                     SpiClearMatrix@i:	
   673                           ; 2 bytes @ 0x6
   674                           
   675     0077                     ShowShape@countElemntArray:	
   676                           ; 1 bytes @ 0x6
   677                           
   678     0077                     memset@dest:	
   679                           ; 2 bytes @ 0x6
   680                           
   681     0077                     ??_SetPosition:	
   682                           ; 2 bytes @ 0x6
   683                           
   684                           
   685                           ; 1 bytes @ 0x6
   686     0077                     	ds	1
   687     0078                     ??_MatrixInit:
   688                           
   689                           ; 1 bytes @ 0x7
   690     0078                     	ds	1
   691     0079                     ?_malloc:
   692     0079                     ShowShape@shapeArray:	
   693                           ; 2 bytes @ 0x8
   694                           
   695     0079                     free@cptr:	
   696                           ; 1 bytes @ 0x8
   697                           
   698     0079                     malloc@n:	
   699                           ; 2 bytes @ 0x8
   700                           
   701     0079                     memset@c:	
   702                           ; 2 bytes @ 0x8
   703                           
   704                           
   705                           ; 2 bytes @ 0x8
   706     0079                     	ds	1
   707     007A                     ShowShape@_pos:
   708                           
   709                           ; 2 bytes @ 0x9
   710     007A                     	ds	1
   711     007B                     free@c:
   712     007B                     memset@n:	
   713                           ; 2 bytes @ 0xA
   714                           
   715     007B                     ??_malloc:	
   716                           ; 2 bytes @ 0xA
   717                           
   718                           
   719                           ; 1 bytes @ 0xA
   720     007B                     	ds	1
   721     007C                     ShowShape@pos:
   722                           
   723                           ; 2 bytes @ 0xB
   724     007C                     	ds	1
   725     007D                     ??_calloc:
   726     007D                     ??_memset:	
   727                           ; 1 bytes @ 0xC
   728                           
   729                           
   730                           ; 1 bytes @ 0xC
   731     007D                     	ds	1
   732     007E                     ??_main:
   733                           
   734                           	psect	cstackBANK0
   735     0020                     __pcstackBANK0:	
   736                           ; 1 bytes @ 0xD
   737                           
   738     0020                     ___simple_search_fl@remaining_size:
   739     0020                     memset@p:	
   740                           ; 2 bytes @ 0x0
   741                           
   742     0020                     ??_ShowShape:	
   743                           ; 2 bytes @ 0x0
   744                           
   745                           
   746                           ; 1 bytes @ 0x0
   747     0020                     	ds	2
   748     0022                     ___simple_search_fl@best_last:
   749                           
   750                           ; 2 bytes @ 0x2
   751     0022                     	ds	2
   752     0024                     ___simple_search_fl@split:
   753                           
   754                           ; 2 bytes @ 0x4
   755     0024                     	ds	1
   756     0025                     ?_MovieShape:
   757     0025                     MovieShape@_shapePosition:	
   758                           ; 1 bytes @ 0x5
   759                           
   760                           
   761                           ; 2 bytes @ 0x5
   762     0025                     	ds	1
   763     0026                     ___simple_search_fl@last:
   764                           
   765                           ; 2 bytes @ 0x6
   766     0026                     	ds	1
   767     0027                     MovieShape@shapeArray:
   768                           
   769                           ; 1 bytes @ 0x7
   770     0027                     	ds	1
   771     0028                     MovieShape@countElemntArray:
   772     0028                     ___simple_search_fl@next:	
   773                           ; 2 bytes @ 0x8
   774                           
   775                           
   776                           ; 2 bytes @ 0x8
   777     0028                     	ds	2
   778     002A                     ___simple_search_fl@c:
   779     002A                     ??_MovieShape:	
   780                           ; 2 bytes @ 0xA
   781                           
   782                           
   783                           ; 1 bytes @ 0xA
   784     002A                     	ds	2
   785     002C                     MovieShape@dir:
   786     002C                     ___simple_search_fl@best:	
   787                           ; 1 bytes @ 0xC
   788                           
   789                           
   790                           ; 2 bytes @ 0xC
   791     002C                     	ds	2
   792     002E                     malloc@m:
   793                           
   794                           ; 2 bytes @ 0xE
   795     002E                     	ds	2
   796     0030                     malloc@sz:
   797                           
   798                           ; 2 bytes @ 0x10
   799     0030                     	ds	2
   800     0032                     malloc@size:
   801                           
   802                           ; 2 bytes @ 0x12
   803     0032                     	ds	2
   804     0034                     malloc@p:
   805                           
   806                           ; 2 bytes @ 0x14
   807     0034                     	ds	2
   808     0036                     malloc@new:
   809                           
   810                           ; 2 bytes @ 0x16
   811     0036                     	ds	2
   812     0038                     ?_calloc:
   813     0038                     calloc@nmemb:	
   814                           ; 2 bytes @ 0x18
   815                           
   816                           
   817                           ; 2 bytes @ 0x18
   818     0038                     	ds	2
   819     003A                     calloc@size:
   820                           
   821                           ; 2 bytes @ 0x1A
   822     003A                     	ds	2
   823     003C                     calloc@new_ptr:
   824                           
   825                           ; 2 bytes @ 0x1C
   826     003C                     	ds	2
   827     003E                     ?_Rotate:
   828     003E                     Rotate@array_:	
   829                           ; 1 bytes @ 0x1E
   830                           
   831                           
   832                           ; 1 bytes @ 0x1E
   833     003E                     	ds	1
   834     003F                     Rotate@length:
   835                           
   836                           ; 2 bytes @ 0x1F
   837     003F                     	ds	2
   838     0041                     ??_Rotate:
   839                           
   840                           ; 1 bytes @ 0x21
   841     0041                     	ds	7
   842     0048                     Rotate@x:
   843                           
   844                           ; 2 bytes @ 0x28
   845     0048                     	ds	2
   846     004A                     Rotate@i:
   847                           
   848                           ; 2 bytes @ 0x2A
   849     004A                     	ds	2
   850     004C                     Rotate@y:
   851                           
   852                           ; 2 bytes @ 0x2C
   853     004C                     	ds	2
   854     004E                     Rotate@res:
   855                           
   856                           ; 2 bytes @ 0x2E
   857     004E                     	ds	2
   858     0050                     Rotate@_i:
   859                           
   860                           ; 2 bytes @ 0x30
   861     0050                     	ds	2
   862     0052                     ?_ChangeOfCoordinates:
   863     0052                     ChangeOfCoordinates@_shapePosition:	
   864                           ; 1 bytes @ 0x32
   865                           
   866                           
   867                           ; 2 bytes @ 0x32
   868     0052                     	ds	2
   869     0054                     ChangeOfCoordinates@_figure:
   870                           
   871                           ; 1 bytes @ 0x34
   872     0054                     	ds	1
   873     0055                     ChangeOfCoordinates@_countElemntArray:
   874                           
   875                           ; 2 bytes @ 0x35
   876     0055                     	ds	2
   877     0057                     ??_ChangeOfCoordinates:
   878                           
   879                           ; 1 bytes @ 0x37
   880     0057                     	ds	3
   881     005A                     ChangeOfCoordinates@step:
   882                           
   883                           ; 2 bytes @ 0x3A
   884     005A                     	ds	2
   885     005C                     ChangeOfCoordinates@i:
   886                           
   887                           ; 2 bytes @ 0x3C
   888     005C                     	ds	2
   889     005E                     main@square_1:
   890                           
   891                           ; 3 bytes @ 0x3E
   892     005E                     	ds	3
   893     0061                     main@countElemntArray:
   894                           
   895                           ; 2 bytes @ 0x41
   896     0061                     	ds	2
   897     0063                     main@shapePosition:
   898                           
   899                           ; 4 bytes @ 0x43
   900     0063                     	ds	4
   901                           
   902                           	psect	maintext
   903     01B2                     __pmaintext:	
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 49 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  shapePositio    4   67[BANK0 ] struct .
   914 ;;  square_1        3   62[BANK0 ] unsigned char [3]
   915 ;;  countElemntA    2   65[BANK0 ] int 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       9       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       9       0       0       0
   929 ;;Total ram usage:        9 bytes
   930 ;; Hardware stack levels required when called: 5
   931 ;; This function calls:
   932 ;;		_ChangeOfCoordinates
   933 ;;		_MatrixInit
   934 ;;		_PortBInit
   935 ;;		_SetPosition
   936 ;;		_SpiInit
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     01B2                     _main:	
   943                           ;psect for function _main
   944                           
   945     01B2                     l1542:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main.c: 50:     SpiInit();
   951     01B2  120A  118A  2060  120A  118A  	fcall	_SpiInit
   952                           
   953                           ;main.c: 51:     MatrixInit();
   954     01B7  120A  118A  212A  120A  118A  	fcall	_MatrixInit
   955     01BC                     l1544:
   956                           
   957                           ;main.c: 52:     PortBInit();
   958     01BC  120A  118A  2032  120A  118A  	fcall	_PortBInit
   959                           
   960                           ;main.c: 54:     TCoord shapePosition;;main.c: 55:     char square_1[3] = { 0x07, 0x05, 
      +                          0x02 };
   961     01C1  1683               	bsf	3,5	;RP0=1, select bank1
   962     01C2  1303               	bcf	3,6	;RP1=0, select bank1
   963     01C3  0826               	movf	main@F927^(0+128),w
   964     01C4  1283               	bcf	3,5	;RP0=0, select bank0
   965     01C5  1303               	bcf	3,6	;RP1=0, select bank0
   966     01C6  00DE               	movwf	main@square_1
   967     01C7  1683               	bsf	3,5	;RP0=1, select bank1
   968     01C8  1303               	bcf	3,6	;RP1=0, select bank1
   969     01C9  0827               	movf	(main@F927+1)^(0+128),w
   970     01CA  1283               	bcf	3,5	;RP0=0, select bank0
   971     01CB  1303               	bcf	3,6	;RP1=0, select bank0
   972     01CC  00DF               	movwf	main@square_1+1
   973     01CD  1683               	bsf	3,5	;RP0=1, select bank1
   974     01CE  1303               	bcf	3,6	;RP1=0, select bank1
   975     01CF  0828               	movf	(main@F927+2)^(0+128),w
   976     01D0  1283               	bcf	3,5	;RP0=0, select bank0
   977     01D1  1303               	bcf	3,6	;RP1=0, select bank0
   978     01D2  00E0               	movwf	main@square_1+2
   979                           
   980                           ;main.c: 56:     int countElemntArray = 3;
   981     01D3  3003               	movlw	3
   982     01D4  00E1               	movwf	main@countElemntArray
   983     01D5  3000               	movlw	0
   984     01D6  00E2               	movwf	main@countElemntArray+1
   985     01D7                     l1546:
   986                           
   987                           ;main.c: 60:         SetPosition(&shapePosition, 0, 0);
   988     01D7  3063               	movlw	low main@shapePosition
   989     01D8  00F1               	movwf	SetPosition@position
   990     01D9  3000               	movlw	high main@shapePosition
   991     01DA  00F2               	movwf	SetPosition@position+1
   992     01DB  3000               	movlw	0
   993     01DC  00F3               	movwf	SetPosition@x
   994     01DD  00F4               	movwf	SetPosition@x+1
   995     01DE  3000               	movlw	0
   996     01DF  00F5               	movwf	SetPosition@y
   997     01E0  00F6               	movwf	SetPosition@y+1
   998     01E1  120A  118A  20C7  120A  118A  	fcall	_SetPosition
   999     01E6                     l1548:
  1000                           
  1001                           ;main.c: 61:         ChangeOfCoordinates(&shapePosition, square_1, countElemntArray);
  1002     01E6  3063               	movlw	low main@shapePosition
  1003     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1004     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1005     01E9  00D2               	movwf	ChangeOfCoordinates@_shapePosition
  1006     01EA  3000               	movlw	high main@shapePosition
  1007     01EB  00D3               	movwf	ChangeOfCoordinates@_shapePosition+1
  1008     01EC  305E               	movlw	(low (main@square_1| 0))& (0+255)
  1009     01ED  00D4               	movwf	ChangeOfCoordinates@_figure
  1010     01EE  0862               	movf	main@countElemntArray+1,w
  1011     01EF  00D6               	movwf	ChangeOfCoordinates@_countElemntArray+1
  1012     01F0  0861               	movf	main@countElemntArray,w
  1013     01F1  00D5               	movwf	ChangeOfCoordinates@_countElemntArray
  1014     01F2  120A  118A  2494  120A  118A  	fcall	_ChangeOfCoordinates
  1015     01F7  29D7               	goto	l1546
  1016     01F8  120A  118A  2800   	ljmp	start
  1017     01FB                     __end_of_main:
  1018                           
  1019                           	psect	text1
  1020     0060                     __ptext1:	
  1021 ;; *************** function _SpiInit *****************
  1022 ;; Defined at:
  1023 ;;		line 9 in file "spi.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050     0060                     _SpiInit:	
  1051                           ;psect for function _SpiInit
  1052                           
  1053     0060                     l1514:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
  1056                           
  1057                           
  1058                           ;spi.c: 10:     TRISC |= 0x10;
  1059     0060  1683               	bsf	3,5	;RP0=1, select bank1
  1060     0061  1303               	bcf	3,6	;RP1=0, select bank1
  1061     0062  1607               	bsf	7,4	;volatile
  1062     0063                     l1516:
  1063                           
  1064                           ;spi.c: 11:     TRISC &= ~0x28;
  1065     0063  30D7               	movlw	215
  1066     0064  0587               	andwf	7,f	;volatile
  1067                           
  1068                           ;spi.c: 12:     TRISA &= ~0x20;
  1069     0065  30DF               	movlw	223
  1070     0066  0585               	andwf	5,f	;volatile
  1071                           
  1072                           ;spi.c: 13:     PORTA &= ~0x20;
  1073     0067  30DF               	movlw	223
  1074     0068  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0069  1303               	bcf	3,6	;RP1=0, select bank0
  1076     006A  0585               	andwf	5,f	;volatile
  1077     006B                     l1518:
  1078                           
  1079                           ;spi.c: 14:     SSPCON = 0x30;
  1080     006B  3030               	movlw	48
  1081     006C  0094               	movwf	20	;volatile
  1082     006D                     l1520:
  1083                           
  1084                           ;spi.c: 15:     SSPSTAT = 0x80;
  1085     006D  3080               	movlw	128
  1086     006E  1683               	bsf	3,5	;RP0=1, select bank1
  1087     006F  1303               	bcf	3,6	;RP1=0, select bank1
  1088     0070  0094               	movwf	20	;volatile
  1089     0071                     l65:
  1090     0071  0008               	return
  1091     0072                     __end_of_SpiInit:
  1092                           
  1093                           	psect	text2
  1094     00C7                     __ptext2:	
  1095 ;; *************** function _SetPosition *****************
  1096 ;; Defined at:
  1097 ;;		line 3 in file "shape.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  position        2    0[COMMON] PTR struct .
  1100 ;;		 -> main@shapePosition(4), 
  1101 ;;  x               2    2[COMMON] int 
  1102 ;;  y               2    4[COMMON] int 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         6       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         8       0       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127     00C7                     _SetPosition:	
  1128                           ;psect for function _SetPosition
  1129                           
  1130     00C7                     l1538:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _SetPosition: [wreg-fsr0h+status,2+status,0]
  1133                           
  1134                           
  1135                           ;shape.c: 4:     position->x = x;
  1136     00C7  0871               	movf	SetPosition@position,w
  1137     00C8  0084               	movwf	4
  1138     00C9  1783               	bsf	3,7
  1139     00CA  1C72               	btfss	SetPosition@position+1,0
  1140     00CB  1383               	bcf	3,7
  1141     00CC  0873               	movf	SetPosition@x,w
  1142     00CD  0080               	movwf	0
  1143     00CE  0A84               	incf	4,f
  1144     00CF  0874               	movf	SetPosition@x+1,w
  1145     00D0  0080               	movwf	0
  1146     00D1                     l1540:
  1147                           
  1148                           ;shape.c: 5:     position->y = y;
  1149     00D1  0871               	movf	SetPosition@position,w
  1150     00D2  3E02               	addlw	2
  1151     00D3  00F7               	movwf	??_SetPosition
  1152     00D4  0872               	movf	SetPosition@position+1,w
  1153     00D5  1803               	skipnc
  1154     00D6  3E01               	addlw	1
  1155     00D7  3E00               	addlw	0
  1156     00D8  00F8               	movwf	??_SetPosition+1
  1157     00D9  0877               	movf	??_SetPosition,w
  1158     00DA  0084               	movwf	4
  1159     00DB  1783               	bsf	3,7
  1160     00DC  1C78               	btfss	??_SetPosition+1,0
  1161     00DD  1383               	bcf	3,7
  1162     00DE  0875               	movf	SetPosition@y,w
  1163     00DF  0080               	movwf	0
  1164     00E0  0A84               	incf	4,f
  1165     00E1  0876               	movf	SetPosition@y+1,w
  1166     00E2  0080               	movwf	0
  1167     00E3                     l101:
  1168     00E3  0008               	return
  1169     00E4                     __end_of_SetPosition:
  1170                           
  1171                           	psect	text3
  1172     0032                     __ptext3:	
  1173 ;; *************** function _PortBInit *****************
  1174 ;; Defined at:
  1175 ;;		line 13 in file "portsinit.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		status,2
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202     0032                     _PortBInit:	
  1203                           ;psect for function _PortBInit
  1204                           
  1205     0032                     l1536:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _PortBInit: [status,2]
  1208                           
  1209                           
  1210                           ;portsinit.c: 14:     TRISB = 0x00;
  1211     0032  1683               	bsf	3,5	;RP0=1, select bank1
  1212     0033  1303               	bcf	3,6	;RP1=0, select bank1
  1213     0034  0186               	clrf	6	;volatile
  1214                           
  1215                           ;portsinit.c: 15:     PORTB = 0x00;
  1216     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1217     0036  1303               	bcf	3,6	;RP1=0, select bank0
  1218     0037  0186               	clrf	6	;volatile
  1219     0038                     l48:
  1220     0038  0008               	return
  1221     0039                     __end_of_PortBInit:
  1222                           
  1223                           	psect	text4
  1224     012A                     __ptext4:	
  1225 ;; *************** function _MatrixInit *****************
  1226 ;; Defined at:
  1227 ;;		line 20 in file "matrix.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0
  1243 ;;      Temps:          3       0       0       0       0
  1244 ;;      Totals:         3       0       0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 3
  1248 ;; This function calls:
  1249 ;;		_SendToSegment
  1250 ;;		_SpiClearMatrix
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256     012A                     _MatrixInit:	
  1257                           ;psect for function _MatrixInit
  1258                           
  1259     012A                     l1522:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  1262                           
  1263                           
  1264                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1265     012A  3003               	movlw	3
  1266     012B  00FA               	movwf	??_MatrixInit+2
  1267     012C  3008               	movlw	8
  1268     012D  00F9               	movwf	??_MatrixInit+1
  1269     012E  3077               	movlw	119
  1270     012F  00F8               	movwf	??_MatrixInit
  1271     0130                     u927:
  1272     0130  0BF8               	decfsz	??_MatrixInit,f
  1273     0131  2930               	goto	u927
  1274     0132  0BF9               	decfsz	??_MatrixInit+1,f
  1275     0133  2930               	goto	u927
  1276     0134  0BFA               	decfsz	??_MatrixInit+2,f
  1277     0135  2930               	goto	u927
  1278     0136                     l1524:
  1279                           
  1280                           ;matrix.c: 22:     RA5=1;
  1281     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1282     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1283     0138  1685               	bsf	5,5	;volatile
  1284     0139                     l1526:
  1285                           
  1286                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  1287     0139  3009               	movlw	9
  1288     013A  00F2               	movwf	SendToSegment@segment
  1289     013B  3000               	movlw	0
  1290     013C  00F3               	movwf	SendToSegment@segment+1
  1291     013D  01F4               	clrf	SendToSegment@data
  1292     013E  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  1293     0143                     l1528:
  1294                           
  1295                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  1296     0143  300B               	movlw	11
  1297     0144  00F2               	movwf	SendToSegment@segment
  1298     0145  3000               	movlw	0
  1299     0146  00F3               	movwf	SendToSegment@segment+1
  1300     0147  3007               	movlw	7
  1301     0148  00F4               	movwf	SendToSegment@data
  1302     0149  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  1303     014E                     l1530:
  1304                           
  1305                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  1306     014E  300A               	movlw	10
  1307     014F  00F2               	movwf	SendToSegment@segment
  1308     0150  3000               	movlw	0
  1309     0151  00F3               	movwf	SendToSegment@segment+1
  1310     0152  3002               	movlw	2
  1311     0153  00F4               	movwf	SendToSegment@data
  1312     0154  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  1313     0159                     l1532:
  1314                           
  1315                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  1316     0159  300C               	movlw	12
  1317     015A  00F2               	movwf	SendToSegment@segment
  1318     015B  3000               	movlw	0
  1319     015C  00F3               	movwf	SendToSegment@segment+1
  1320     015D  01F4               	clrf	SendToSegment@data
  1321     015E  0AF4               	incf	SendToSegment@data,f
  1322     015F  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  1323     0164                     l1534:
  1324                           
  1325                           ;matrix.c: 27:     SpiClearMatrix();
  1326     0164  120A  118A  2098  120A  118A  	fcall	_SpiClearMatrix
  1327     0169                     l87:
  1328     0169  0008               	return
  1329     016A                     __end_of_MatrixInit:
  1330                           
  1331                           	psect	text5
  1332     0494                     __ptext5:	
  1333 ;; *************** function _ChangeOfCoordinates *****************
  1334 ;; Defined at:
  1335 ;;		line 19 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  _shapePositi    2   50[BANK0 ] PTR struct .
  1338 ;;		 -> main@shapePosition(4), 
  1339 ;;  _figure         1   52[BANK0 ] PTR unsigned char 
  1340 ;;		 -> main@square_1(3), 
  1341 ;;  _countElemnt    2   53[BANK0 ] int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  i               2   60[BANK0 ] int 
  1344 ;;  step            2   58[BANK0 ] int 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       5       0       0       0
  1355 ;;      Locals:         0       4       0       0       0
  1356 ;;      Temps:          0       3       0       0       0
  1357 ;;      Totals:         0      12       0       0       0
  1358 ;;Total ram usage:       12 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 4
  1361 ;; This function calls:
  1362 ;;		_MovieShape
  1363 ;;		_Rotate
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369     0494                     _ChangeOfCoordinates:	
  1370                           ;psect for function _ChangeOfCoordinates
  1371                           
  1372     0494                     l1484:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _ChangeOfCoordinates: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1375                           
  1376                           
  1377                           ;main.c: 20:     const unsigned long delay = 100;;main.c: 21:     int step = 0;
  1378     0494  1283               	bcf	3,5	;RP0=0, select bank0
  1379     0495  1303               	bcf	3,6	;RP1=0, select bank0
  1380     0496  01DA               	clrf	ChangeOfCoordinates@step
  1381     0497  01DB               	clrf	ChangeOfCoordinates@step+1
  1382     0498                     l19:	
  1383                           ;main.c: 22:         do{
  1384                           
  1385                           
  1386                           ;main.c: 23:             for(int i = 0; i < 5; i++){
  1387     0498  1283               	bcf	3,5	;RP0=0, select bank0
  1388     0499  1303               	bcf	3,6	;RP1=0, select bank0
  1389     049A  01DC               	clrf	ChangeOfCoordinates@i
  1390     049B  01DD               	clrf	ChangeOfCoordinates@i+1
  1391     049C  2D15               	goto	l1500
  1392     049D                     l1490:
  1393                           
  1394                           ;main.c: 26:                         MovieShape(right, _shapePosition, _figure, _countEl
      +                          emntArray);
  1395     049D  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1396     049E  00A5               	movwf	MovieShape@_shapePosition
  1397     049F  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1398     04A0  00A6               	movwf	MovieShape@_shapePosition+1
  1399     04A1  0854               	movf	ChangeOfCoordinates@_figure,w
  1400     04A2  00A7               	movwf	MovieShape@shapeArray
  1401     04A3  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1402     04A4  00A9               	movwf	MovieShape@countElemntArray+1
  1403     04A5  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1404     04A6  00A8               	movwf	MovieShape@countElemntArray
  1405     04A7  3003               	movlw	3
  1406     04A8  120A  118A  2248  120A  118A  	fcall	_MovieShape
  1407                           
  1408                           ;main.c: 27:                         Rotate(_figure, _countElemntArray);
  1409     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1410     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1411     04AF  0854               	movf	ChangeOfCoordinates@_figure,w
  1412     04B0  00BE               	movwf	Rotate@array_
  1413     04B1  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1414     04B2  00C0               	movwf	Rotate@length+1
  1415     04B3  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1416     04B4  00BF               	movwf	Rotate@length
  1417     04B5  120A  118A  23D7  120A  118A  	fcall	_Rotate
  1418                           
  1419                           ;main.c: 28:                         break;
  1420     04BA  2D2A               	goto	l1502
  1421     04BB                     l1492:
  1422                           
  1423                           ;main.c: 30:                         MovieShape(down, _shapePosition, _figure, _countEle
      +                          mntArray);
  1424     04BB  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1425     04BC  00A5               	movwf	MovieShape@_shapePosition
  1426     04BD  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1427     04BE  00A6               	movwf	MovieShape@_shapePosition+1
  1428     04BF  0854               	movf	ChangeOfCoordinates@_figure,w
  1429     04C0  00A7               	movwf	MovieShape@shapeArray
  1430     04C1  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1431     04C2  00A9               	movwf	MovieShape@countElemntArray+1
  1432     04C3  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1433     04C4  00A8               	movwf	MovieShape@countElemntArray
  1434     04C5  3000               	movlw	0
  1435     04C6  120A  118A  2248  120A  118A  	fcall	_MovieShape
  1436                           
  1437                           ;main.c: 31:                         Rotate(_figure, _countElemntArray);
  1438     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1439     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1440     04CD  0854               	movf	ChangeOfCoordinates@_figure,w
  1441     04CE  00BE               	movwf	Rotate@array_
  1442     04CF  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1443     04D0  00C0               	movwf	Rotate@length+1
  1444     04D1  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1445     04D2  00BF               	movwf	Rotate@length
  1446     04D3  120A  118A  23D7  120A  118A  	fcall	_Rotate
  1447                           
  1448                           ;main.c: 32:                         break;
  1449     04D8  2D2A               	goto	l1502
  1450     04D9                     l1494:
  1451                           
  1452                           ;main.c: 34:                         MovieShape(left, _shapePosition, _figure, _countEle
      +                          mntArray);
  1453     04D9  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1454     04DA  00A5               	movwf	MovieShape@_shapePosition
  1455     04DB  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1456     04DC  00A6               	movwf	MovieShape@_shapePosition+1
  1457     04DD  0854               	movf	ChangeOfCoordinates@_figure,w
  1458     04DE  00A7               	movwf	MovieShape@shapeArray
  1459     04DF  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1460     04E0  00A9               	movwf	MovieShape@countElemntArray+1
  1461     04E1  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1462     04E2  00A8               	movwf	MovieShape@countElemntArray
  1463     04E3  3002               	movlw	2
  1464     04E4  120A  118A  2248  120A  118A  	fcall	_MovieShape
  1465                           
  1466                           ;main.c: 35:                         Rotate(_figure, _countElemntArray);
  1467     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1468     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1469     04EB  0854               	movf	ChangeOfCoordinates@_figure,w
  1470     04EC  00BE               	movwf	Rotate@array_
  1471     04ED  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1472     04EE  00C0               	movwf	Rotate@length+1
  1473     04EF  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1474     04F0  00BF               	movwf	Rotate@length
  1475     04F1  120A  118A  23D7  120A  118A  	fcall	_Rotate
  1476                           
  1477                           ;main.c: 36:                         break;
  1478     04F6  2D2A               	goto	l1502
  1479     04F7                     l1496:
  1480                           
  1481                           ;main.c: 38:                         MovieShape(up, _shapePosition, _figure, _countElemn
      +                          tArray);
  1482     04F7  0852               	movf	ChangeOfCoordinates@_shapePosition,w
  1483     04F8  00A5               	movwf	MovieShape@_shapePosition
  1484     04F9  0853               	movf	ChangeOfCoordinates@_shapePosition+1,w
  1485     04FA  00A6               	movwf	MovieShape@_shapePosition+1
  1486     04FB  0854               	movf	ChangeOfCoordinates@_figure,w
  1487     04FC  00A7               	movwf	MovieShape@shapeArray
  1488     04FD  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1489     04FE  00A9               	movwf	MovieShape@countElemntArray+1
  1490     04FF  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1491     0500  00A8               	movwf	MovieShape@countElemntArray
  1492     0501  3001               	movlw	1
  1493     0502  120A  118A  2248  120A  118A  	fcall	_MovieShape
  1494                           
  1495                           ;main.c: 39:                         Rotate(_figure, _countElemntArray);
  1496     0507  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0508  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0509  0854               	movf	ChangeOfCoordinates@_figure,w
  1499     050A  00BE               	movwf	Rotate@array_
  1500     050B  0856               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  1501     050C  00C0               	movwf	Rotate@length+1
  1502     050D  0855               	movf	ChangeOfCoordinates@_countElemntArray,w
  1503     050E  00BF               	movwf	Rotate@length
  1504     050F  120A  118A  23D7  120A  118A  	fcall	_Rotate
  1505                           
  1506                           ;main.c: 40:                         break;
  1507     0514  2D2A               	goto	l1502
  1508     0515                     l1500:
  1509                           
  1510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1511                           ; Switch size 1, requested type "simple"
  1512                           ; Number of cases is 1, Range of values is 0 to 0
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte            4     3 (average)
  1516                           ; direct_byte           11     8 (fixed)
  1517                           ; jumptable            260     6 (fixed)
  1518                           ;	Chosen strategy is simple_byte
  1519     0515  1283               	bcf	3,5	;RP0=0, select bank0
  1520     0516  1303               	bcf	3,6	;RP1=0, select bank0
  1521     0517  085B               	movf	ChangeOfCoordinates@step+1,w
  1522     0518  3A00               	xorlw	0	; case 0
  1523     0519  1903               	skipnz
  1524     051A  2D1C               	goto	l1600
  1525     051B  2D2A               	goto	l1502
  1526     051C                     l1600:
  1527                           
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 4, Range of values is 0 to 3
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte           13     7 (average)
  1533                           ; direct_byte           20     8 (fixed)
  1534                           ; jumptable            260     6 (fixed)
  1535                           ;	Chosen strategy is simple_byte
  1536     051C  085A               	movf	ChangeOfCoordinates@step,w
  1537     051D  3A00               	xorlw	0	; case 0
  1538     051E  1903               	skipnz
  1539     051F  2C9D               	goto	l1490
  1540     0520  3A01               	xorlw	1	; case 1
  1541     0521  1903               	skipnz
  1542     0522  2CBB               	goto	l1492
  1543     0523  3A03               	xorlw	3	; case 2
  1544     0524  1903               	skipnz
  1545     0525  2CD9               	goto	l1494
  1546     0526  3A01               	xorlw	1	; case 3
  1547     0527  1903               	skipnz
  1548     0528  2CF7               	goto	l1496
  1549     0529  2D2A               	goto	l1502
  1550     052A                     l1502:
  1551                           
  1552                           ;main.c: 42:                 _delay((unsigned long)((delay)*(16000000/4000.0)));
  1553     052A  3003               	movlw	3
  1554     052B  1283               	bcf	3,5	;RP0=0, select bank0
  1555     052C  1303               	bcf	3,6	;RP1=0, select bank0
  1556     052D  00D9               	movwf	??_ChangeOfCoordinates+2
  1557     052E  3008               	movlw	8
  1558     052F  00D8               	movwf	??_ChangeOfCoordinates+1
  1559     0530  3076               	movlw	118
  1560     0531  00D7               	movwf	??_ChangeOfCoordinates
  1561     0532                     u937:
  1562     0532  0BD7               	decfsz	??_ChangeOfCoordinates,f
  1563     0533  2D32               	goto	u937
  1564     0534  0BD8               	decfsz	??_ChangeOfCoordinates+1,f
  1565     0535  2D32               	goto	u937
  1566     0536  0BD9               	decfsz	??_ChangeOfCoordinates+2,f
  1567     0537  2D32               	goto	u937
  1568     0538  0000               	nop
  1569                           
  1570                           ;main.c: 43:             }
  1571     0539  3001               	movlw	1
  1572     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1573     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1574     053C  07DC               	addwf	ChangeOfCoordinates@i,f
  1575     053D  1803               	skipnc
  1576     053E  0ADD               	incf	ChangeOfCoordinates@i+1,f
  1577     053F  3000               	movlw	0
  1578     0540  07DD               	addwf	ChangeOfCoordinates@i+1,f
  1579     0541                     l1504:
  1580     0541  085D               	movf	ChangeOfCoordinates@i+1,w
  1581     0542  3A80               	xorlw	128
  1582     0543  00FF               	movwf	btemp+1
  1583     0544  3080               	movlw	128
  1584     0545  027F               	subwf	btemp+1,w
  1585     0546  1D03               	skipz
  1586     0547  2D4A               	goto	u905
  1587     0548  3005               	movlw	5
  1588     0549  025C               	subwf	ChangeOfCoordinates@i,w
  1589     054A                     u905:
  1590     054A  1C03               	skipc
  1591     054B  2D4D               	goto	u901
  1592     054C  2D4E               	goto	u900
  1593     054D                     u901:
  1594     054D  2D15               	goto	l1500
  1595     054E                     u900:
  1596     054E                     l1506:
  1597                           
  1598                           ;main.c: 44:             step++;
  1599     054E  3001               	movlw	1
  1600     054F  1283               	bcf	3,5	;RP0=0, select bank0
  1601     0550  1303               	bcf	3,6	;RP1=0, select bank0
  1602     0551  07DA               	addwf	ChangeOfCoordinates@step,f
  1603     0552  1803               	skipnc
  1604     0553  0ADB               	incf	ChangeOfCoordinates@step+1,f
  1605     0554  3000               	movlw	0
  1606     0555  07DB               	addwf	ChangeOfCoordinates@step+1,f
  1607     0556                     l1508:
  1608                           
  1609                           ;main.c: 45:         } while(step < 4);
  1610     0556  085B               	movf	ChangeOfCoordinates@step+1,w
  1611     0557  3A80               	xorlw	128
  1612     0558  00FF               	movwf	btemp+1
  1613     0559  3080               	movlw	128
  1614     055A  027F               	subwf	btemp+1,w
  1615     055B  1D03               	skipz
  1616     055C  2D5F               	goto	u915
  1617     055D  3004               	movlw	4
  1618     055E  025A               	subwf	ChangeOfCoordinates@step,w
  1619     055F                     u915:
  1620     055F  1C03               	skipc
  1621     0560  2D62               	goto	u911
  1622     0561  2D63               	goto	u910
  1623     0562                     u911:
  1624     0562  2C98               	goto	l19
  1625     0563                     u910:
  1626     0563                     l29:
  1627     0563  0008               	return
  1628     0564                     __end_of_ChangeOfCoordinates:
  1629                           
  1630                           	psect	text6
  1631     03D7                     __ptext6:	
  1632 ;; *************** function _Rotate *****************
  1633 ;; Defined at:
  1634 ;;		line 55 in file "shape.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  array_          1   30[BANK0 ] PTR unsigned char 
  1637 ;;		 -> main@square_1(3), 
  1638 ;;  length          2   31[BANK0 ] int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  i               2   42[BANK0 ] int 
  1641 ;;  x               2   40[BANK0 ] int 
  1642 ;;  y               2   44[BANK0 ] int 
  1643 ;;  _i              2   48[BANK0 ] int 
  1644 ;;  res             2   46[BANK0 ] PTR unsigned char 
  1645 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       3       0       0       0
  1656 ;;      Locals:         0      10       0       0       0
  1657 ;;      Temps:          0       7       0       0       0
  1658 ;;      Totals:         0      20       0       0       0
  1659 ;;Total ram usage:       20 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 3
  1662 ;; This function calls:
  1663 ;;		_calloc
  1664 ;;		_free
  1665 ;; This function is called by:
  1666 ;;		_ChangeOfCoordinates
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     03D7                     _Rotate:	
  1671                           ;psect for function _Rotate
  1672                           
  1673     03D7                     l1444:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _Rotate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1676                           
  1677                           
  1678                           ;shape.c: 57:     char * res = calloc((size_t)length, sizeof(char));
  1679     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1680     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1681     03D9  0840               	movf	Rotate@length+1,w
  1682     03DA  00B9               	movwf	calloc@nmemb+1
  1683     03DB  083F               	movf	Rotate@length,w
  1684     03DC  00B8               	movwf	calloc@nmemb
  1685     03DD  3001               	movlw	1
  1686     03DE  00BA               	movwf	calloc@size
  1687     03DF  3000               	movlw	0
  1688     03E0  00BB               	movwf	calloc@size+1
  1689     03E1  120A  118A  216A  120A  118A  	fcall	_calloc
  1690     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1691     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1692     03E8  0838               	movf	?_calloc,w
  1693     03E9  00CE               	movwf	Rotate@res
  1694     03EA  0839               	movf	?_calloc+1,w
  1695     03EB  00CF               	movwf	Rotate@res+1
  1696     03EC                     l1446:
  1697                           
  1698                           ;shape.c: 59:     if (res){
  1699     03EC  084E               	movf	Rotate@res,w
  1700     03ED  044F               	iorwf	Rotate@res+1,w
  1701     03EE  1903               	btfsc	3,2
  1702     03EF  2BF1               	goto	u821
  1703     03F0  2BF2               	goto	u820
  1704     03F1                     u821:
  1705     03F1  2C88               	goto	l1482
  1706     03F2                     u820:
  1707     03F2                     l1448:
  1708                           
  1709                           ;shape.c: 60:         for(int _i = length - 1; _i >= 0; _i--){
  1710     03F2  083F               	movf	Rotate@length,w
  1711     03F3  3EFF               	addlw	255
  1712     03F4  00D0               	movwf	Rotate@_i
  1713     03F5  0840               	movf	Rotate@length+1,w
  1714     03F6  1803               	skipnc
  1715     03F7  3E01               	addlw	1
  1716     03F8  3EFF               	addlw	255
  1717     03F9  00D1               	movwf	Rotate@_i+1
  1718     03FA                     l1450:
  1719     03FA  1FD1               	btfss	Rotate@_i+1,7
  1720     03FB  2BFD               	goto	u831
  1721     03FC  2BFE               	goto	u830
  1722     03FD                     u831:
  1723     03FD  2BFF               	goto	l1454
  1724     03FE                     u830:
  1725     03FE  2C52               	goto	l1474
  1726     03FF                     l1454:
  1727                           
  1728                           ;shape.c: 61:             for(int i = length - 1, x = 0; i >= 0; i--, x++){
  1729     03FF  083F               	movf	Rotate@length,w
  1730     0400  3EFF               	addlw	255
  1731     0401  00CA               	movwf	Rotate@i
  1732     0402  0840               	movf	Rotate@length+1,w
  1733     0403  1803               	skipnc
  1734     0404  3E01               	addlw	1
  1735     0405  3EFF               	addlw	255
  1736     0406  00CB               	movwf	Rotate@i+1
  1737     0407                     l1456:
  1738     0407  01C8               	clrf	Rotate@x
  1739     0408  01C9               	clrf	Rotate@x+1
  1740     0409                     l1458:
  1741     0409  1FCB               	btfss	Rotate@i+1,7
  1742     040A  2C0C               	goto	u841
  1743     040B  2C0D               	goto	u840
  1744     040C                     u841:
  1745     040C  2C0E               	goto	l1462
  1746     040D                     u840:
  1747     040D  2C4B               	goto	l1470
  1748     040E                     l1462:
  1749                           
  1750                           ;shape.c: 62:                 res[_i] |= ((array_[x] >> _i ) & 1) << i;
  1751     040E  0848               	movf	Rotate@x,w
  1752     040F  073E               	addwf	Rotate@array_,w
  1753     0410  00C1               	movwf	??_Rotate
  1754     0411  0841               	movf	??_Rotate,w
  1755     0412  0084               	movwf	4
  1756     0413  1383               	bcf	3,7	;select IRP bank0
  1757     0414  0800               	movf	0,w
  1758     0415  00C2               	movwf	??_Rotate+1
  1759     0416  0A50               	incf	Rotate@_i,w
  1760     0417  2C1A               	goto	u854
  1761     0418                     u855:
  1762     0418  1003               	clrc
  1763     0419  0CC2               	rrf	??_Rotate+1,f
  1764     041A                     u854:
  1765     041A  3EFF               	addlw	-1
  1766     041B  1D03               	skipz
  1767     041C  2C18               	goto	u855
  1768     041D  0842               	movf	??_Rotate+1,w
  1769     041E  3901               	andlw	1
  1770     041F  00C3               	movwf	??_Rotate+2
  1771     0420  0A4A               	incf	Rotate@i,w
  1772     0421  2C24               	goto	u864
  1773     0422                     u865:
  1774     0422  1003               	clrc
  1775     0423  0DC3               	rlf	??_Rotate+2,f
  1776     0424                     u864:
  1777     0424  3EFF               	addlw	-1
  1778     0425  1D03               	skipz
  1779     0426  2C22               	goto	u865
  1780     0427  0843               	movf	??_Rotate+2,w
  1781     0428  00C4               	movwf	??_Rotate+3
  1782     0429  0850               	movf	Rotate@_i,w
  1783     042A  074E               	addwf	Rotate@res,w
  1784     042B  00C6               	movwf	??_Rotate+5
  1785     042C  084F               	movf	Rotate@res+1,w
  1786     042D  00C5               	movwf	??_Rotate+4
  1787     042E  1803               	skipnc
  1788     042F  0AC5               	incf	??_Rotate+4,f
  1789     0430  1FD0               	btfss	Rotate@_i,7
  1790     0431  2C33               	goto	u870
  1791     0432  03C5               	decf	??_Rotate+4,f
  1792     0433                     u870:
  1793     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1794     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1795     0435  0845               	movf	??_Rotate+4,w
  1796     0436  00C7               	movwf	??_Rotate+6
  1797     0437  0846               	movf	??_Rotate+5,w
  1798     0438  0084               	movwf	4
  1799     0439  1783               	bsf	3,7
  1800     043A  1C47               	btfss	??_Rotate+6,0
  1801     043B  1383               	bcf	3,7
  1802     043C  0844               	movf	??_Rotate+3,w
  1803     043D  0480               	iorwf	0,f
  1804     043E                     l1464:
  1805                           
  1806                           ;shape.c: 63:             }
  1807     043E  30FF               	movlw	255
  1808     043F  07CA               	addwf	Rotate@i,f
  1809     0440  1803               	skipnc
  1810     0441  0ACB               	incf	Rotate@i+1,f
  1811     0442  30FF               	movlw	255
  1812     0443  07CB               	addwf	Rotate@i+1,f
  1813     0444                     l1466:
  1814     0444  3001               	movlw	1
  1815     0445  07C8               	addwf	Rotate@x,f
  1816     0446  1803               	skipnc
  1817     0447  0AC9               	incf	Rotate@x+1,f
  1818     0448  3000               	movlw	0
  1819     0449  07C9               	addwf	Rotate@x+1,f
  1820     044A  2C09               	goto	l1458
  1821     044B                     l1470:
  1822                           
  1823                           ;shape.c: 64:         }
  1824     044B  30FF               	movlw	255
  1825     044C  07D0               	addwf	Rotate@_i,f
  1826     044D  1803               	skipnc
  1827     044E  0AD1               	incf	Rotate@_i+1,f
  1828     044F  30FF               	movlw	255
  1829     0450  07D1               	addwf	Rotate@_i+1,f
  1830     0451  2BFA               	goto	l1450
  1831     0452                     l1474:
  1832                           
  1833                           ;shape.c: 66:         for(int y = 0; y < length; y++){
  1834     0452  01CC               	clrf	Rotate@y
  1835     0453  01CD               	clrf	Rotate@y+1
  1836     0454  2C7A               	goto	l1480
  1837     0455                     l1476:
  1838                           
  1839                           ;shape.c: 67:             array_[y] = res[y];
  1840     0455  1283               	bcf	3,5	;RP0=0, select bank0
  1841     0456  1303               	bcf	3,6	;RP1=0, select bank0
  1842     0457  084C               	movf	Rotate@y,w
  1843     0458  074E               	addwf	Rotate@res,w
  1844     0459  00C2               	movwf	??_Rotate+1
  1845     045A  084F               	movf	Rotate@res+1,w
  1846     045B  00C1               	movwf	??_Rotate
  1847     045C  1803               	skipnc
  1848     045D  0AC1               	incf	??_Rotate,f
  1849     045E  1FCC               	btfss	Rotate@y,7
  1850     045F  2C61               	goto	u880
  1851     0460  03C1               	decf	??_Rotate,f
  1852     0461                     u880:
  1853     0461  1283               	bcf	3,5	;RP0=0, select bank0
  1854     0462  1303               	bcf	3,6	;RP1=0, select bank0
  1855     0463  0841               	movf	??_Rotate,w
  1856     0464  00C3               	movwf	??_Rotate+2
  1857     0465  0842               	movf	??_Rotate+1,w
  1858     0466  0084               	movwf	4
  1859     0467  1783               	bsf	3,7
  1860     0468  1C43               	btfss	??_Rotate+2,0
  1861     0469  1383               	bcf	3,7
  1862     046A  0800               	movf	0,w
  1863     046B  00C4               	movwf	??_Rotate+3
  1864     046C  084C               	movf	Rotate@y,w
  1865     046D  073E               	addwf	Rotate@array_,w
  1866     046E  00C5               	movwf	??_Rotate+4
  1867     046F  0845               	movf	??_Rotate+4,w
  1868     0470  0084               	movwf	4
  1869     0471  0844               	movf	??_Rotate+3,w
  1870     0472  1383               	bcf	3,7	;select IRP bank0
  1871     0473  0080               	movwf	0
  1872     0474                     l1478:
  1873                           
  1874                           ;shape.c: 68:         }
  1875     0474  3001               	movlw	1
  1876     0475  07CC               	addwf	Rotate@y,f
  1877     0476  1803               	skipnc
  1878     0477  0ACD               	incf	Rotate@y+1,f
  1879     0478  3000               	movlw	0
  1880     0479  07CD               	addwf	Rotate@y+1,f
  1881     047A                     l1480:
  1882     047A  084D               	movf	Rotate@y+1,w
  1883     047B  3A80               	xorlw	128
  1884     047C  00C1               	movwf	??_Rotate
  1885     047D  0840               	movf	Rotate@length+1,w
  1886     047E  3A80               	xorlw	128
  1887     047F  0241               	subwf	??_Rotate,w
  1888     0480  1D03               	skipz
  1889     0481  2C84               	goto	u895
  1890     0482  083F               	movf	Rotate@length,w
  1891     0483  024C               	subwf	Rotate@y,w
  1892     0484                     u895:
  1893     0484  1C03               	skipc
  1894     0485  2C87               	goto	u891
  1895     0486  2C88               	goto	u890
  1896     0487                     u891:
  1897     0487  2C55               	goto	l1476
  1898     0488                     u890:
  1899     0488                     l1482:
  1900                           
  1901                           ;shape.c: 70:     free(res);
  1902     0488  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0489  1303               	bcf	3,6	;RP1=0, select bank0
  1904     048A  084E               	movf	Rotate@res,w
  1905     048B  00F1               	movwf	free@ptr
  1906     048C  084F               	movf	Rotate@res+1,w
  1907     048D  00F2               	movwf	free@ptr+1
  1908     048E  120A  118A  2564  120A  118A  	fcall	_free
  1909     0493                     l140:
  1910     0493  0008               	return
  1911     0494                     __end_of_Rotate:
  1912                           
  1913                           	psect	text7
  1914     0564                     __ptext7:	
  1915 ;; *************** function _free *****************
  1916 ;; Defined at:
  1917 ;;		line 67 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  ptr             2    0[COMMON] PTR void 
  1920 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  c               2   10[COMMON] PTR struct chunk
  1923 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1924 ;;  cptr            2    8[COMMON] PTR unsigned char 
  1925 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         2       0       0       0       0
  1936 ;;      Locals:         4       0       0       0       0
  1937 ;;      Temps:          6       0       0       0       0
  1938 ;;      Totals:        12       0       0       0       0
  1939 ;;Total ram usage:       12 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_Rotate
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948     0564                     _free:	
  1949                           ;psect for function _free
  1950                           
  1951     0564                     l1390:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _free: [wreg-fsr0h+status,2+status,0+btemp+1]
  1954                           
  1955     0564  0871               	movf	free@ptr,w
  1956     0565  00F9               	movwf	free@cptr
  1957     0566  0872               	movf	free@ptr+1,w
  1958     0567  00FA               	movwf	free@cptr+1
  1959     0568  0871               	movf	free@ptr,w
  1960     0569  0472               	iorwf	free@ptr+1,w
  1961     056A  1D03               	btfss	3,2
  1962     056B  2D6D               	goto	u781
  1963     056C  2D6E               	goto	u780
  1964     056D                     u781:
  1965     056D  2D6F               	goto	l1394
  1966     056E                     u780:
  1967     056E  2E51               	goto	l719
  1968     056F                     l1394:
  1969     056F  30FE               	movlw	254
  1970     0570  00F3               	movwf	??_free
  1971     0571  0873               	movf	??_free,w
  1972     0572  0779               	addwf	free@cptr,w
  1973     0573  00FB               	movwf	free@c
  1974     0574  087A               	movf	free@cptr+1,w
  1975     0575  00F4               	movwf	??_free+1
  1976     0576  1803               	skipnc
  1977     0577  0AF4               	incf	??_free+1,f
  1978     0578  1BF3               	btfsc	??_free,7
  1979     0579  03F4               	decf	??_free+1,f
  1980     057A  0874               	movf	??_free+1,w
  1981     057B  00FC               	movwf	free@c+1
  1982     057C  1283               	bcf	3,5	;RP0=0, select bank0
  1983     057D  1303               	bcf	3,6	;RP1=0, select bank0
  1984     057E  086D               	movf	___freelist,w
  1985     057F  046E               	iorwf	___freelist+1,w
  1986     0580  1903               	btfsc	3,2
  1987     0581  2D83               	goto	u791
  1988     0582  2D84               	goto	u790
  1989     0583                     u791:
  1990     0583  2E40               	goto	l1416
  1991     0584                     u790:
  1992     0584                     l1396:
  1993     0584  087B               	movf	free@c,w
  1994     0585  0084               	movwf	4
  1995     0586  1783               	bsf	3,7
  1996     0587  1C7C               	btfss	free@c+1,0
  1997     0588  1383               	bcf	3,7
  1998     0589  0800               	movf	0,w
  1999     058A  0779               	addwf	free@cptr,w
  2000     058B  00F3               	movwf	??_free
  2001     058C  087A               	movf	free@cptr+1,w
  2002     058D  1803               	skipnc
  2003     058E  3E01               	addlw	1
  2004     058F  00F4               	movwf	??_free+1
  2005     0590  0874               	movf	??_free+1,w
  2006     0591  066E               	xorwf	___freelist+1,w
  2007     0592  1D03               	skipz
  2008     0593  2D96               	goto	u805
  2009     0594  0873               	movf	??_free,w
  2010     0595  066D               	xorwf	___freelist,w
  2011     0596                     u805:
  2012     0596  1D03               	skipz
  2013     0597  2D99               	goto	u801
  2014     0598  2D9A               	goto	u800
  2015     0599                     u801:
  2016     0599  2DE6               	goto	l1408
  2017     059A                     u800:
  2018     059A                     l1398:
  2019     059A  086D               	movf	___freelist,w
  2020     059B  3E02               	addlw	2
  2021     059C  00F3               	movwf	??_free
  2022     059D  086E               	movf	___freelist+1,w
  2023     059E  1803               	skipnc
  2024     059F  3E01               	addlw	1
  2025     05A0  3E00               	addlw	0
  2026     05A1  00F4               	movwf	??_free+1
  2027     05A2  0873               	movf	??_free,w
  2028     05A3  0084               	movwf	4
  2029     05A4  1783               	bsf	3,7
  2030     05A5  1C74               	btfss	??_free+1,0
  2031     05A6  1383               	bcf	3,7
  2032     05A7  0800               	movf	0,w
  2033     05A8  00F5               	movwf	??_free+2
  2034     05A9  0A84               	incf	4,f
  2035     05AA  0800               	movf	0,w
  2036     05AB  00F6               	movwf	??_free+3
  2037     05AC  087B               	movf	free@c,w
  2038     05AD  3E02               	addlw	2
  2039     05AE  00F7               	movwf	??_free+4
  2040     05AF  087C               	movf	free@c+1,w
  2041     05B0  1803               	skipnc
  2042     05B1  3E01               	addlw	1
  2043     05B2  3E00               	addlw	0
  2044     05B3  00F8               	movwf	??_free+5
  2045     05B4  0877               	movf	??_free+4,w
  2046     05B5  0084               	movwf	4
  2047     05B6  1783               	bsf	3,7
  2048     05B7  1C78               	btfss	??_free+5,0
  2049     05B8  1383               	bcf	3,7
  2050     05B9  0875               	movf	??_free+2,w
  2051     05BA  0080               	movwf	0
  2052     05BB  0876               	movf	??_free+3,w
  2053     05BC  0A84               	incf	4,f
  2054     05BD  0080               	movwf	0
  2055     05BE  0384               	decf	4,f
  2056     05BF                     l1400:
  2057     05BF  086D               	movf	___freelist,w
  2058     05C0  0084               	movwf	4
  2059     05C1  1783               	bsf	3,7
  2060     05C2  1C6E               	btfss	___freelist+1,0
  2061     05C3  1383               	bcf	3,7
  2062     05C4  0800               	movf	0,w
  2063     05C5  00F3               	movwf	??_free
  2064     05C6  0A84               	incf	4,f
  2065     05C7  0800               	movf	0,w
  2066     05C8  00F4               	movwf	??_free+1
  2067     05C9  0873               	movf	??_free,w
  2068     05CA  3E02               	addlw	2
  2069     05CB  00F5               	movwf	??_free+2
  2070     05CC  0874               	movf	??_free+1,w
  2071     05CD  1803               	skipnc
  2072     05CE  3E01               	addlw	1
  2073     05CF  3E00               	addlw	0
  2074     05D0  00F6               	movwf	??_free+3
  2075     05D1  087B               	movf	free@c,w
  2076     05D2  0084               	movwf	4
  2077     05D3  1783               	bsf	3,7
  2078     05D4  1C7C               	btfss	free@c+1,0
  2079     05D5  1383               	bcf	3,7
  2080     05D6  0875               	movf	??_free+2,w
  2081     05D7  0780               	addwf	0,f
  2082     05D8  0F84               	incfsz	4,f
  2083     05D9  0800               	movf	0,w
  2084     05DA  1803               	skipnc
  2085     05DB  0A00               	incf	0,w
  2086     05DC  00FF               	movwf	btemp+1
  2087     05DD  0876               	movf	??_free+3,w
  2088     05DE  077F               	addwf	btemp+1,w
  2089     05DF  0080               	movwf	0
  2090     05E0  0384               	decf	4,f
  2091     05E1                     l1402:
  2092     05E1  087B               	movf	free@c,w
  2093     05E2  00ED               	movwf	___freelist
  2094     05E3  087C               	movf	free@c+1,w
  2095     05E4  00EE               	movwf	___freelist+1
  2096     05E5  2E51               	goto	l719
  2097     05E6                     l1408:
  2098     05E6  086D               	movf	___freelist,w
  2099     05E7  0084               	movwf	4
  2100     05E8  1783               	bsf	3,7
  2101     05E9  1C6E               	btfss	___freelist+1,0
  2102     05EA  1383               	bcf	3,7
  2103     05EB  0800               	movf	0,w
  2104     05EC  00F3               	movwf	??_free
  2105     05ED  0A84               	incf	4,f
  2106     05EE  0800               	movf	0,w
  2107     05EF  00F4               	movwf	??_free+1
  2108     05F0  0873               	movf	??_free,w
  2109     05F1  076D               	addwf	___freelist,w
  2110     05F2  00F5               	movwf	??_free+2
  2111     05F3  0874               	movf	??_free+1,w
  2112     05F4  1803               	skipnc
  2113     05F5  0A74               	incf	??_free+1,w
  2114     05F6  076E               	addwf	___freelist+1,w
  2115     05F7  00F6               	movwf	??_free+3
  2116     05F8  0875               	movf	??_free+2,w
  2117     05F9  3E02               	addlw	2
  2118     05FA  00F7               	movwf	??_free+4
  2119     05FB  0876               	movf	??_free+3,w
  2120     05FC  1803               	skipnc
  2121     05FD  3E01               	addlw	1
  2122     05FE  3E00               	addlw	0
  2123     05FF  00F8               	movwf	??_free+5
  2124     0600  087C               	movf	free@c+1,w
  2125     0601  0678               	xorwf	??_free+5,w
  2126     0602  1D03               	skipz
  2127     0603  2E06               	goto	u815
  2128     0604  087B               	movf	free@c,w
  2129     0605  0677               	xorwf	??_free+4,w
  2130     0606                     u815:
  2131     0606  1D03               	skipz
  2132     0607  2E09               	goto	u811
  2133     0608  2E0A               	goto	u810
  2134     0609                     u811:
  2135     0609  2E2D               	goto	l1414
  2136     060A                     u810:
  2137     060A                     l1410:
  2138     060A  087B               	movf	free@c,w
  2139     060B  0084               	movwf	4
  2140     060C  1783               	bsf	3,7
  2141     060D  1C7C               	btfss	free@c+1,0
  2142     060E  1383               	bcf	3,7
  2143     060F  0800               	movf	0,w
  2144     0610  00F3               	movwf	??_free
  2145     0611  0A84               	incf	4,f
  2146     0612  0800               	movf	0,w
  2147     0613  00F4               	movwf	??_free+1
  2148     0614  0873               	movf	??_free,w
  2149     0615  3E02               	addlw	2
  2150     0616  00F5               	movwf	??_free+2
  2151     0617  0874               	movf	??_free+1,w
  2152     0618  1803               	skipnc
  2153     0619  3E01               	addlw	1
  2154     061A  3E00               	addlw	0
  2155     061B  00F6               	movwf	??_free+3
  2156     061C  086D               	movf	___freelist,w
  2157     061D  0084               	movwf	4
  2158     061E  1783               	bsf	3,7
  2159     061F  1C6E               	btfss	___freelist+1,0
  2160     0620  1383               	bcf	3,7
  2161     0621  0875               	movf	??_free+2,w
  2162     0622  0780               	addwf	0,f
  2163     0623  0F84               	incfsz	4,f
  2164     0624  0800               	movf	0,w
  2165     0625  1803               	skipnc
  2166     0626  0A00               	incf	0,w
  2167     0627  00FF               	movwf	btemp+1
  2168     0628  0876               	movf	??_free+3,w
  2169     0629  077F               	addwf	btemp+1,w
  2170     062A  0080               	movwf	0
  2171     062B  0384               	decf	4,f
  2172     062C  2E51               	goto	l719
  2173     062D                     l1414:
  2174     062D  087B               	movf	free@c,w
  2175     062E  3E02               	addlw	2
  2176     062F  00F3               	movwf	??_free
  2177     0630  087C               	movf	free@c+1,w
  2178     0631  1803               	skipnc
  2179     0632  3E01               	addlw	1
  2180     0633  3E00               	addlw	0
  2181     0634  00F4               	movwf	??_free+1
  2182     0635  0873               	movf	??_free,w
  2183     0636  0084               	movwf	4
  2184     0637  1783               	bsf	3,7
  2185     0638  1C74               	btfss	??_free+1,0
  2186     0639  1383               	bcf	3,7
  2187     063A  086D               	movf	___freelist,w
  2188     063B  0080               	movwf	0
  2189     063C  0A84               	incf	4,f
  2190     063D  086E               	movf	___freelist+1,w
  2191     063E  0080               	movwf	0
  2192     063F  2DE1               	goto	l1402
  2193     0640                     l1416:
  2194     0640  087B               	movf	free@c,w
  2195     0641  3E02               	addlw	2
  2196     0642  00F3               	movwf	??_free
  2197     0643  087C               	movf	free@c+1,w
  2198     0644  1803               	skipnc
  2199     0645  3E01               	addlw	1
  2200     0646  3E00               	addlw	0
  2201     0647  00F4               	movwf	??_free+1
  2202     0648  0873               	movf	??_free,w
  2203     0649  0084               	movwf	4
  2204     064A  1783               	bsf	3,7
  2205     064B  1C74               	btfss	??_free+1,0
  2206     064C  1383               	bcf	3,7
  2207     064D  0180               	clrf	0
  2208     064E  0A84               	incf	4,f
  2209     064F  0180               	clrf	0
  2210     0650  2DE1               	goto	l1402
  2211     0651                     l719:
  2212     0651  0008               	return
  2213     0652                     __end_of_free:
  2214                           
  2215                           	psect	text8
  2216     016A                     __ptext8:	
  2217 ;; *************** function _calloc *****************
  2218 ;; Defined at:
  2219 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_calloc.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  nmemb           2   24[BANK0 ] unsigned int 
  2222 ;;  size            2   26[BANK0 ] unsigned int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  new_ptr         2   28[BANK0 ] PTR void 
  2225 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2   24[BANK0 ] PTR void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       4       0       0       0
  2236 ;;      Locals:         0       2       0       0       0
  2237 ;;      Temps:          0       0       0       0       0
  2238 ;;      Totals:         0       6       0       0       0
  2239 ;;Total ram usage:        6 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 2
  2242 ;; This function calls:
  2243 ;;		___wmul
  2244 ;;		_malloc
  2245 ;;		_memset
  2246 ;; This function is called by:
  2247 ;;		_Rotate
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     016A                     _calloc:	
  2252                           ;psect for function _calloc
  2253                           
  2254     016A                     l1380:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _calloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2257                           
  2258     016A  1283               	bcf	3,5	;RP0=0, select bank0
  2259     016B  1303               	bcf	3,6	;RP1=0, select bank0
  2260     016C  0839               	movf	calloc@nmemb+1,w
  2261     016D  00F2               	movwf	___wmul@multiplier+1
  2262     016E  0838               	movf	calloc@nmemb,w
  2263     016F  00F1               	movwf	___wmul@multiplier
  2264     0170  083B               	movf	calloc@size+1,w
  2265     0171  00F4               	movwf	___wmul@multiplicand+1
  2266     0172  083A               	movf	calloc@size,w
  2267     0173  00F3               	movwf	___wmul@multiplicand
  2268     0174  120A  118A  2105  120A  118A  	fcall	___wmul
  2269     0179  0872               	movf	?___wmul+1,w
  2270     017A  00FA               	movwf	malloc@n+1
  2271     017B  0871               	movf	?___wmul,w
  2272     017C  00F9               	movwf	malloc@n
  2273     017D  120A  118A  2325  120A  118A  	fcall	_malloc
  2274     0182  0879               	movf	?_malloc,w
  2275     0183  1283               	bcf	3,5	;RP0=0, select bank0
  2276     0184  1303               	bcf	3,6	;RP1=0, select bank0
  2277     0185  00BC               	movwf	calloc@new_ptr
  2278     0186  087A               	movf	?_malloc+1,w
  2279     0187  00BD               	movwf	calloc@new_ptr+1
  2280     0188                     l1382:
  2281     0188  083C               	movf	calloc@new_ptr,w
  2282     0189  043D               	iorwf	calloc@new_ptr+1,w
  2283     018A  1903               	btfsc	3,2
  2284     018B  298D               	goto	u771
  2285     018C  298E               	goto	u770
  2286     018D                     u771:
  2287     018D  29AB               	goto	l1386
  2288     018E                     u770:
  2289     018E                     l1384:
  2290     018E  083C               	movf	calloc@new_ptr,w
  2291     018F  00F7               	movwf	memset@dest
  2292     0190  083D               	movf	calloc@new_ptr+1,w
  2293     0191  00F8               	movwf	memset@dest+1
  2294     0192  3000               	movlw	0
  2295     0193  00F9               	movwf	memset@c
  2296     0194  00FA               	movwf	memset@c+1
  2297     0195  0839               	movf	calloc@nmemb+1,w
  2298     0196  00F2               	movwf	___wmul@multiplier+1
  2299     0197  0838               	movf	calloc@nmemb,w
  2300     0198  00F1               	movwf	___wmul@multiplier
  2301     0199  083B               	movf	calloc@size+1,w
  2302     019A  00F4               	movwf	___wmul@multiplicand+1
  2303     019B  083A               	movf	calloc@size,w
  2304     019C  00F3               	movwf	___wmul@multiplicand
  2305     019D  120A  118A  2105  120A  118A  	fcall	___wmul
  2306     01A2  0872               	movf	?___wmul+1,w
  2307     01A3  00FC               	movwf	memset@n+1
  2308     01A4  0871               	movf	?___wmul,w
  2309     01A5  00FB               	movwf	memset@n
  2310     01A6  120A  118A  20E4  120A  118A  	fcall	_memset
  2311     01AB                     l1386:
  2312     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2313     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2314     01AD  083C               	movf	calloc@new_ptr,w
  2315     01AE  00B8               	movwf	?_calloc
  2316     01AF  083D               	movf	calloc@new_ptr+1,w
  2317     01B0  00B9               	movwf	?_calloc+1
  2318     01B1                     l696:
  2319     01B1  0008               	return
  2320     01B2                     __end_of_calloc:
  2321                           
  2322                           	psect	text9
  2323     00E4                     __ptext9:	
  2324 ;; *************** function _memset *****************
  2325 ;; Defined at:
  2326 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  dest            2    6[COMMON] PTR void 
  2329 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2330 ;;  c               2    8[COMMON] int 
  2331 ;;  n               2   10[COMMON] unsigned int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  p               2    0[BANK0 ] PTR unsigned char 
  2334 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    6[COMMON] PTR void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         6       0       0       0       0
  2345 ;;      Locals:         0       2       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         6       2       0       0       0
  2348 ;;Total ram usage:        8 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_calloc
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     00E4                     _memset:	
  2358                           ;psect for function _memset
  2359                           
  2360     00E4                     l1346:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2363                           
  2364     00E4  0877               	movf	memset@dest,w
  2365     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2366     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2367     00E7  00A0               	movwf	memset@p
  2368     00E8  0878               	movf	memset@dest+1,w
  2369     00E9  00A1               	movwf	memset@p+1
  2370     00EA  28F6               	goto	l1352
  2371     00EB                     l1348:
  2372     00EB  0820               	movf	memset@p,w
  2373     00EC  0084               	movwf	4
  2374     00ED  1783               	bsf	3,7
  2375     00EE  1C21               	btfss	memset@p+1,0
  2376     00EF  1383               	bcf	3,7
  2377     00F0  0879               	movf	memset@c,w
  2378     00F1  0080               	movwf	0
  2379     00F2                     l1350:
  2380     00F2  3001               	movlw	1
  2381     00F3  07A0               	addwf	memset@p,f
  2382     00F4  1803               	skipnc
  2383     00F5  0AA1               	incf	memset@p+1,f
  2384     00F6                     l1352:
  2385     00F6  3001               	movlw	1
  2386     00F7  02FB               	subwf	memset@n,f
  2387     00F8  3000               	movlw	0
  2388     00F9  1C03               	skipc
  2389     00FA  03FC               	decf	memset@n+1,f
  2390     00FB  02FC               	subwf	memset@n+1,f
  2391     00FC  0A7B               	incf	memset@n,w
  2392     00FD  1D03               	skipz
  2393     00FE  2903               	goto	u731
  2394     00FF  0A7C               	incf	memset@n+1,w
  2395     0100  1D03               	btfss	3,2
  2396     0101  2903               	goto	u731
  2397     0102  2904               	goto	u730
  2398     0103                     u731:
  2399     0103  28EB               	goto	l1348
  2400     0104                     u730:
  2401     0104                     l772:
  2402     0104  0008               	return
  2403     0105                     __end_of_memset:
  2404                           
  2405                           	psect	text10
  2406     0325                     __ptext10:	
  2407 ;; *************** function _malloc *****************
  2408 ;; Defined at:
  2409 ;;		line 16 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_malloc.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  n               2    8[COMMON] unsigned int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  sz              2   16[BANK0 ] PTR unsigned int 
  2414 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2415 ;;  new             2   22[BANK0 ] PTR unsigned char 
  2416 ;;		 -> __heap_hi(0), NULL(0), 
  2417 ;;  m               2   14[BANK0 ] unsigned int 
  2418 ;;  p               2   20[BANK0 ] PTR void 
  2419 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2420 ;;  size            2   18[BANK0 ] unsigned int 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2    8[COMMON] PTR void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         2       0       0       0       0
  2431 ;;      Locals:         0      10       0       0       0
  2432 ;;      Temps:          2       0       0       0       0
  2433 ;;      Totals:         4      10       0       0       0
  2434 ;;Total ram usage:       14 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 1
  2437 ;; This function calls:
  2438 ;;		___expand_heap
  2439 ;;		___simple_search_fl
  2440 ;; This function is called by:
  2441 ;;		_calloc
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445     0325                     _malloc:	
  2446                           ;psect for function _malloc
  2447                           
  2448     0325                     l1294:	
  2449                           ;incstack = 0
  2450                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2451                           
  2452     0325  1283               	bcf	3,5	;RP0=0, select bank0
  2453     0326  1303               	bcf	3,6	;RP1=0, select bank0
  2454     0327  01B2               	clrf	malloc@size
  2455     0328  01B3               	clrf	malloc@size+1
  2456     0329                     l1296:
  2457     0329  0879               	movf	malloc@n,w
  2458     032A  047A               	iorwf	malloc@n+1,w
  2459     032B  1D03               	btfss	3,2
  2460     032C  2B2E               	goto	u661
  2461     032D  2B2F               	goto	u660
  2462     032E                     u661:
  2463     032E  2B35               	goto	l739
  2464     032F                     u660:
  2465     032F                     l1298:
  2466     032F  3001               	movlw	1
  2467     0330  07F9               	addwf	malloc@n,f
  2468     0331  1803               	skipnc
  2469     0332  0AFA               	incf	malloc@n+1,f
  2470     0333  3000               	movlw	0
  2471     0334  07FA               	addwf	malloc@n+1,f
  2472     0335                     l739:
  2473     0335  3000               	movlw	0
  2474     0336  027A               	subwf	malloc@n+1,w
  2475     0337  3002               	movlw	2
  2476     0338  1903               	skipnz
  2477     0339  0279               	subwf	malloc@n,w
  2478     033A  1803               	skipnc
  2479     033B  2B3D               	goto	u671
  2480     033C  2B3E               	goto	u670
  2481     033D                     u671:
  2482     033D  2B43               	goto	l1302
  2483     033E                     u670:
  2484     033E                     l1300:
  2485     033E  3002               	movlw	2
  2486     033F  00F9               	movwf	malloc@n
  2487     0340  3000               	movlw	0
  2488     0341  00FA               	movwf	malloc@n+1
  2489     0342  2B5B               	goto	l1310
  2490     0343                     l1302:
  2491     0343  087A               	movf	malloc@n+1,w
  2492     0344  00FC               	movwf	??_malloc+1
  2493     0345  0879               	movf	malloc@n,w
  2494     0346  00FB               	movwf	??_malloc
  2495     0347  09FB               	comf	??_malloc,f
  2496     0348  09FC               	comf	??_malloc+1,f
  2497     0349  3000               	movlw	0
  2498     034A  027C               	subwf	??_malloc+1,w
  2499     034B  3002               	movlw	2
  2500     034C  1903               	skipnz
  2501     034D  027B               	subwf	??_malloc,w
  2502     034E  1803               	skipnc
  2503     034F  2B51               	goto	u681
  2504     0350  2B52               	goto	u680
  2505     0351                     u681:
  2506     0351  2B5B               	goto	l1310
  2507     0352                     u680:
  2508     0352                     l1304:
  2509     0352  300C               	movlw	12
  2510     0353  1683               	bsf	3,5	;RP0=1, select bank1
  2511     0354  1303               	bcf	3,6	;RP1=0, select bank1
  2512     0355  00A4               	movwf	_errno^(0+128)
  2513     0356  3000               	movlw	0
  2514     0357  00A5               	movwf	(_errno^(0+128)+1)
  2515     0358                     l1306:
  2516     0358  01F9               	clrf	?_malloc
  2517     0359  01FA               	clrf	?_malloc+1
  2518     035A  2BD6               	goto	l743
  2519     035B                     l1310:
  2520     035B                     l1312:
  2521     035B  087A               	movf	malloc@n+1,w
  2522     035C  00F2               	movwf	___simple_search_fl@n+1
  2523     035D  0879               	movf	malloc@n,w
  2524     035E  00F1               	movwf	___simple_search_fl@n
  2525     035F  120A  118A  2652  120A  118A  	fcall	___simple_search_fl
  2526     0364  0871               	movf	?___simple_search_fl,w
  2527     0365  1283               	bcf	3,5	;RP0=0, select bank0
  2528     0366  1303               	bcf	3,6	;RP1=0, select bank0
  2529     0367  00B4               	movwf	malloc@p
  2530     0368  0872               	movf	?___simple_search_fl+1,w
  2531     0369  00B5               	movwf	malloc@p+1
  2532     036A                     l1314:
  2533     036A  0834               	movf	malloc@p,w
  2534     036B  0435               	iorwf	malloc@p+1,w
  2535     036C  1D03               	btfss	3,2
  2536     036D  2B6F               	goto	u691
  2537     036E  2B70               	goto	u690
  2538     036F                     u691:
  2539     036F  2BD2               	goto	l1342
  2540     0370                     u690:
  2541     0370                     l1316:
  2542     0370  086B               	movf	malloc@cur,w
  2543     0371  0269               	subwf	malloc@end,w
  2544     0372  00FB               	movwf	??_malloc
  2545     0373  086C               	movf	malloc@cur+1,w
  2546     0374  1C03               	skipc
  2547     0375  0A6C               	incf	malloc@cur+1,w
  2548     0376  026A               	subwf	malloc@end+1,w
  2549     0377  00FC               	movwf	??_malloc+1
  2550     0378  087A               	movf	malloc@n+1,w
  2551     0379  027C               	subwf	??_malloc+1,w
  2552     037A  1D03               	skipz
  2553     037B  2B7E               	goto	u705
  2554     037C  0879               	movf	malloc@n,w
  2555     037D  027B               	subwf	??_malloc,w
  2556     037E                     u705:
  2557     037E  1803               	skipnc
  2558     037F  2B81               	goto	u701
  2559     0380  2B82               	goto	u700
  2560     0381                     u701:
  2561     0381  2BB3               	goto	l745
  2562     0382                     u700:
  2563     0382                     l1318:
  2564     0382  0879               	movf	malloc@n,w
  2565     0383  3E02               	addlw	2
  2566     0384  00AE               	movwf	malloc@m
  2567     0385  087A               	movf	malloc@n+1,w
  2568     0386  1803               	skipnc
  2569     0387  3E01               	addlw	1
  2570     0388  3E00               	addlw	0
  2571     0389  00AF               	movwf	malloc@m+1
  2572     038A                     l1320:
  2573     038A  302E               	movlw	(low (malloc@m| 0))& (0+255)
  2574     038B  00F1               	movwf	___expand_heap@pn
  2575     038C  120A  118A  21FB  120A  118A  	fcall	___expand_heap
  2576     0391  0871               	movf	?___expand_heap,w
  2577     0392  1283               	bcf	3,5	;RP0=0, select bank0
  2578     0393  1303               	bcf	3,6	;RP1=0, select bank0
  2579     0394  00B6               	movwf	malloc@new
  2580     0395  0872               	movf	?___expand_heap+1,w
  2581     0396  00B7               	movwf	malloc@new+1
  2582     0397                     l1322:
  2583     0397  0836               	movf	malloc@new,w
  2584     0398  0437               	iorwf	malloc@new+1,w
  2585     0399  1D03               	btfss	3,2
  2586     039A  2B9C               	goto	u711
  2587     039B  2B9D               	goto	u710
  2588     039C                     u711:
  2589     039C  2B9E               	goto	l1328
  2590     039D                     u710:
  2591     039D  2B58               	goto	l1306
  2592     039E                     l1328:
  2593     039E  086A               	movf	malloc@end+1,w
  2594     039F  0637               	xorwf	malloc@new+1,w
  2595     03A0  1D03               	skipz
  2596     03A1  2BA4               	goto	u725
  2597     03A2  0869               	movf	malloc@end,w
  2598     03A3  0636               	xorwf	malloc@new,w
  2599     03A4                     u725:
  2600     03A4  1903               	skipnz
  2601     03A5  2BA7               	goto	u721
  2602     03A6  2BA8               	goto	u720
  2603     03A7                     u721:
  2604     03A7  2BAC               	goto	l747
  2605     03A8                     u720:
  2606     03A8                     l1330:
  2607     03A8  0836               	movf	malloc@new,w
  2608     03A9  00EB               	movwf	malloc@cur
  2609     03AA  0837               	movf	malloc@new+1,w
  2610     03AB  00EC               	movwf	malloc@cur+1
  2611     03AC                     l747:
  2612     03AC  082E               	movf	malloc@m,w
  2613     03AD  0736               	addwf	malloc@new,w
  2614     03AE  00E9               	movwf	malloc@end
  2615     03AF  0837               	movf	malloc@new+1,w
  2616     03B0  1803               	skipnc
  2617     03B1  3E01               	addlw	1
  2618     03B2  00EA               	movwf	malloc@end+1
  2619     03B3                     l745:
  2620     03B3  086B               	movf	malloc@cur,w
  2621     03B4  00B4               	movwf	malloc@p
  2622     03B5  086C               	movf	malloc@cur+1,w
  2623     03B6  00B5               	movwf	malloc@p+1
  2624     03B7                     l1332:
  2625     03B7  0834               	movf	malloc@p,w
  2626     03B8  00B0               	movwf	malloc@sz
  2627     03B9  0835               	movf	malloc@p+1,w
  2628     03BA  00B1               	movwf	malloc@sz+1
  2629     03BB                     l1334:
  2630     03BB  0830               	movf	malloc@sz,w
  2631     03BC  0084               	movwf	4
  2632     03BD  1783               	bsf	3,7
  2633     03BE  1C31               	btfss	malloc@sz+1,0
  2634     03BF  1383               	bcf	3,7
  2635     03C0  0879               	movf	malloc@n,w
  2636     03C1  0080               	movwf	0
  2637     03C2  0A84               	incf	4,f
  2638     03C3  087A               	movf	malloc@n+1,w
  2639     03C4  0080               	movwf	0
  2640     03C5                     l1336:
  2641     03C5  3002               	movlw	2
  2642     03C6  07B0               	addwf	malloc@sz,f
  2643     03C7  1803               	skipnc
  2644     03C8  0AB1               	incf	malloc@sz+1,f
  2645     03C9                     l1338:
  2646     03C9  0830               	movf	malloc@sz,w
  2647     03CA  00B4               	movwf	malloc@p
  2648     03CB  0831               	movf	malloc@sz+1,w
  2649     03CC  00B5               	movwf	malloc@p+1
  2650     03CD                     l1340:
  2651     03CD  0879               	movf	malloc@n,w
  2652     03CE  3E02               	addlw	2
  2653     03CF  07EB               	addwf	malloc@cur,f
  2654     03D0  1803               	skipnc
  2655     03D1  0AEC               	incf	malloc@cur+1,f
  2656     03D2                     l1342:
  2657     03D2  0834               	movf	malloc@p,w
  2658     03D3  00F9               	movwf	?_malloc
  2659     03D4  0835               	movf	malloc@p+1,w
  2660     03D5  00FA               	movwf	?_malloc+1
  2661     03D6                     l743:
  2662     03D6  0008               	return
  2663     03D7                     __end_of_malloc:
  2664                           
  2665                           	psect	text11
  2666     0652                     __ptext11:	
  2667 ;; *************** function ___simple_search_fl *****************
  2668 ;; Defined at:
  2669 ;;		line 19 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  n               2    0[COMMON] unsigned int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  split           2    4[BANK0 ] PTR struct chunk
  2674 ;;		 -> __heap_hi$.$next(2), NULL(0), 
  2675 ;;  remaining_si    2    0[BANK0 ] unsigned int 
  2676 ;;  next            2    8[BANK0 ] PTR struct chunk
  2677 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2678 ;;  best            2   12[BANK0 ] PTR struct chunk
  2679 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2680 ;;  c               2   10[BANK0 ] PTR struct chunk
  2681 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2682 ;;  last            2    6[BANK0 ] PTR struct chunk
  2683 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2684 ;;  best_last       2    2[BANK0 ] PTR struct chunk
  2685 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    0[COMMON] PTR void 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         2       0       0       0       0
  2696 ;;      Locals:         0      14       0       0       0
  2697 ;;      Temps:          6       0       0       0       0
  2698 ;;      Totals:         8      14       0       0       0
  2699 ;;Total ram usage:       22 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_malloc
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708     0652                     ___simple_search_fl:	
  2709                           ;psect for function ___simple_search_fl
  2710                           
  2711     0652                     l1188:	
  2712                           ;incstack = 0
  2713                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0]
  2714                           
  2715     0652  1283               	bcf	3,5	;RP0=0, select bank0
  2716     0653  1303               	bcf	3,6	;RP1=0, select bank0
  2717     0654  01AC               	clrf	___simple_search_fl@best
  2718     0655  01AD               	clrf	___simple_search_fl@best+1
  2719     0656  01A2               	clrf	___simple_search_fl@best_last
  2720     0657  01A3               	clrf	___simple_search_fl@best_last+1
  2721     0658  01A6               	clrf	___simple_search_fl@last
  2722     0659  01A7               	clrf	___simple_search_fl@last+1
  2723     065A                     l1190:
  2724     065A  086D               	movf	___freelist,w
  2725     065B  046E               	iorwf	___freelist+1,w
  2726     065C  1D03               	btfss	3,2
  2727     065D  2E5F               	goto	u481
  2728     065E  2E60               	goto	u480
  2729     065F                     u481:
  2730     065F  2E63               	goto	l1196
  2731     0660                     u480:
  2732     0660                     l1192:
  2733     0660  01F1               	clrf	?___simple_search_fl
  2734     0661  01F2               	clrf	?___simple_search_fl+1
  2735     0662  2FD7               	goto	l702
  2736     0663                     l1196:
  2737     0663  086D               	movf	___freelist,w
  2738     0664  00AA               	movwf	___simple_search_fl@c
  2739     0665  086E               	movf	___freelist+1,w
  2740     0666  00AB               	movwf	___simple_search_fl@c+1
  2741     0667  2F1C               	goto	l1222
  2742     0668                     l1198:
  2743     0668  082A               	movf	___simple_search_fl@c,w
  2744     0669  0084               	movwf	4
  2745     066A  1783               	bsf	3,7
  2746     066B  1C2B               	btfss	___simple_search_fl@c+1,0
  2747     066C  1383               	bcf	3,7
  2748     066D  0800               	movf	0,w
  2749     066E  00F3               	movwf	??___simple_search_fl
  2750     066F  0A84               	incf	4,f
  2751     0670  0800               	movf	0,w
  2752     0671  00F4               	movwf	??___simple_search_fl+1
  2753     0672  0872               	movf	___simple_search_fl@n+1,w
  2754     0673  0674               	xorwf	??___simple_search_fl+1,w
  2755     0674  1D03               	skipz
  2756     0675  2E78               	goto	u495
  2757     0676  0871               	movf	___simple_search_fl@n,w
  2758     0677  0673               	xorwf	??___simple_search_fl,w
  2759     0678                     u495:
  2760     0678  1D03               	skipz
  2761     0679  2E7B               	goto	u491
  2762     067A  2E7C               	goto	u490
  2763     067B                     u491:
  2764     067B  2EC4               	goto	l1210
  2765     067C                     u490:
  2766     067C                     l1200:
  2767     067C  0826               	movf	___simple_search_fl@last,w
  2768     067D  0427               	iorwf	___simple_search_fl@last+1,w
  2769     067E  1903               	btfsc	3,2
  2770     067F  2E81               	goto	u501
  2771     0680  2E82               	goto	u500
  2772     0681                     u501:
  2773     0681  2EA8               	goto	l1204
  2774     0682                     u500:
  2775     0682                     l1202:
  2776     0682  082A               	movf	___simple_search_fl@c,w
  2777     0683  3E02               	addlw	2
  2778     0684  00F3               	movwf	??___simple_search_fl
  2779     0685  082B               	movf	___simple_search_fl@c+1,w
  2780     0686  1803               	skipnc
  2781     0687  3E01               	addlw	1
  2782     0688  3E00               	addlw	0
  2783     0689  00F4               	movwf	??___simple_search_fl+1
  2784     068A  0873               	movf	??___simple_search_fl,w
  2785     068B  0084               	movwf	4
  2786     068C  1783               	bsf	3,7
  2787     068D  1C74               	btfss	??___simple_search_fl+1,0
  2788     068E  1383               	bcf	3,7
  2789     068F  0800               	movf	0,w
  2790     0690  00F5               	movwf	??___simple_search_fl+2
  2791     0691  0A84               	incf	4,f
  2792     0692  0800               	movf	0,w
  2793     0693  00F6               	movwf	??___simple_search_fl+3
  2794     0694  0826               	movf	___simple_search_fl@last,w
  2795     0695  3E02               	addlw	2
  2796     0696  00F7               	movwf	??___simple_search_fl+4
  2797     0697  0827               	movf	___simple_search_fl@last+1,w
  2798     0698  1803               	skipnc
  2799     0699  3E01               	addlw	1
  2800     069A  3E00               	addlw	0
  2801     069B  00F8               	movwf	??___simple_search_fl+5
  2802     069C  0877               	movf	??___simple_search_fl+4,w
  2803     069D  0084               	movwf	4
  2804     069E  1783               	bsf	3,7
  2805     069F  1C78               	btfss	??___simple_search_fl+5,0
  2806     06A0  1383               	bcf	3,7
  2807     06A1  0875               	movf	??___simple_search_fl+2,w
  2808     06A2  0080               	movwf	0
  2809     06A3  0876               	movf	??___simple_search_fl+3,w
  2810     06A4  0A84               	incf	4,f
  2811     06A5  0080               	movwf	0
  2812     06A6  0384               	decf	4,f
  2813     06A7  2EBB               	goto	l1206
  2814     06A8                     l1204:
  2815     06A8  082A               	movf	___simple_search_fl@c,w
  2816     06A9  3E02               	addlw	2
  2817     06AA  00F3               	movwf	??___simple_search_fl
  2818     06AB  082B               	movf	___simple_search_fl@c+1,w
  2819     06AC  1803               	skipnc
  2820     06AD  3E01               	addlw	1
  2821     06AE  3E00               	addlw	0
  2822     06AF  00F4               	movwf	??___simple_search_fl+1
  2823     06B0  0873               	movf	??___simple_search_fl,w
  2824     06B1  0084               	movwf	4
  2825     06B2  1783               	bsf	3,7
  2826     06B3  1C74               	btfss	??___simple_search_fl+1,0
  2827     06B4  1383               	bcf	3,7
  2828     06B5  0800               	movf	0,w
  2829     06B6  00ED               	movwf	___freelist
  2830     06B7  0A84               	incf	4,f
  2831     06B8  0800               	movf	0,w
  2832     06B9  0384               	decf	4,f
  2833     06BA  00EE               	movwf	___freelist+1
  2834     06BB                     l1206:
  2835     06BB  082A               	movf	___simple_search_fl@c,w
  2836     06BC  3E02               	addlw	2
  2837     06BD  00F1               	movwf	?___simple_search_fl
  2838     06BE  082B               	movf	___simple_search_fl@c+1,w
  2839     06BF  1803               	skipnc
  2840     06C0  3E01               	addlw	1
  2841     06C1  3E00               	addlw	0
  2842     06C2  00F2               	movwf	?___simple_search_fl+1
  2843     06C3  2FD7               	goto	l702
  2844     06C4                     l1210:
  2845     06C4  082A               	movf	___simple_search_fl@c,w
  2846     06C5  0084               	movwf	4
  2847     06C6  1783               	bsf	3,7
  2848     06C7  1C2B               	btfss	___simple_search_fl@c+1,0
  2849     06C8  1383               	bcf	3,7
  2850     06C9  0800               	movf	0,w
  2851     06CA  00F3               	movwf	??___simple_search_fl
  2852     06CB  0A84               	incf	4,f
  2853     06CC  0800               	movf	0,w
  2854     06CD  00F4               	movwf	??___simple_search_fl+1
  2855     06CE  0874               	movf	??___simple_search_fl+1,w
  2856     06CF  0272               	subwf	___simple_search_fl@n+1,w
  2857     06D0  1D03               	skipz
  2858     06D1  2ED4               	goto	u515
  2859     06D2  0873               	movf	??___simple_search_fl,w
  2860     06D3  0271               	subwf	___simple_search_fl@n,w
  2861     06D4                     u515:
  2862     06D4  1803               	skipnc
  2863     06D5  2ED7               	goto	u511
  2864     06D6  2ED8               	goto	u510
  2865     06D7                     u511:
  2866     06D7  2F05               	goto	l710
  2867     06D8                     u510:
  2868     06D8                     l1212:
  2869     06D8  082C               	movf	___simple_search_fl@best,w
  2870     06D9  042D               	iorwf	___simple_search_fl@best+1,w
  2871     06DA  1903               	btfsc	3,2
  2872     06DB  2EDD               	goto	u521
  2873     06DC  2EDE               	goto	u520
  2874     06DD                     u521:
  2875     06DD  2EFD               	goto	l1218
  2876     06DE                     u520:
  2877     06DE                     l1214:
  2878     06DE  082C               	movf	___simple_search_fl@best,w
  2879     06DF  0084               	movwf	4
  2880     06E0  1783               	bsf	3,7
  2881     06E1  1C2D               	btfss	___simple_search_fl@best+1,0
  2882     06E2  1383               	bcf	3,7
  2883     06E3  0800               	movf	0,w
  2884     06E4  00F3               	movwf	??___simple_search_fl
  2885     06E5  0A84               	incf	4,f
  2886     06E6  0800               	movf	0,w
  2887     06E7  00F4               	movwf	??___simple_search_fl+1
  2888     06E8  082A               	movf	___simple_search_fl@c,w
  2889     06E9  0084               	movwf	4
  2890     06EA  1783               	bsf	3,7
  2891     06EB  1C2B               	btfss	___simple_search_fl@c+1,0
  2892     06EC  1383               	bcf	3,7
  2893     06ED  0800               	movf	0,w
  2894     06EE  00F5               	movwf	??___simple_search_fl+2
  2895     06EF  0A84               	incf	4,f
  2896     06F0  0800               	movf	0,w
  2897     06F1  00F6               	movwf	??___simple_search_fl+3
  2898     06F2  0874               	movf	??___simple_search_fl+1,w
  2899     06F3  0276               	subwf	??___simple_search_fl+3,w
  2900     06F4  1D03               	skipz
  2901     06F5  2EF8               	goto	u535
  2902     06F6  0873               	movf	??___simple_search_fl,w
  2903     06F7  0275               	subwf	??___simple_search_fl+2,w
  2904     06F8                     u535:
  2905     06F8  1C03               	skipc
  2906     06F9  2EFB               	goto	u531
  2907     06FA  2EFC               	goto	u530
  2908     06FB                     u531:
  2909     06FB  2EFD               	goto	l1218
  2910     06FC                     u530:
  2911     06FC  2F05               	goto	l710
  2912     06FD                     l1218:
  2913     06FD  082A               	movf	___simple_search_fl@c,w
  2914     06FE  00AC               	movwf	___simple_search_fl@best
  2915     06FF  082B               	movf	___simple_search_fl@c+1,w
  2916     0700  00AD               	movwf	___simple_search_fl@best+1
  2917     0701  0826               	movf	___simple_search_fl@last,w
  2918     0702  00A2               	movwf	___simple_search_fl@best_last
  2919     0703  0827               	movf	___simple_search_fl@last+1,w
  2920     0704  00A3               	movwf	___simple_search_fl@best_last+1
  2921     0705                     l710:
  2922     0705  082A               	movf	___simple_search_fl@c,w
  2923     0706  00A6               	movwf	___simple_search_fl@last
  2924     0707  082B               	movf	___simple_search_fl@c+1,w
  2925     0708  00A7               	movwf	___simple_search_fl@last+1
  2926     0709                     l1220:
  2927     0709  082A               	movf	___simple_search_fl@c,w
  2928     070A  3E02               	addlw	2
  2929     070B  00F3               	movwf	??___simple_search_fl
  2930     070C  082B               	movf	___simple_search_fl@c+1,w
  2931     070D  1803               	skipnc
  2932     070E  3E01               	addlw	1
  2933     070F  3E00               	addlw	0
  2934     0710  00F4               	movwf	??___simple_search_fl+1
  2935     0711  0873               	movf	??___simple_search_fl,w
  2936     0712  0084               	movwf	4
  2937     0713  1783               	bsf	3,7
  2938     0714  1C74               	btfss	??___simple_search_fl+1,0
  2939     0715  1383               	bcf	3,7
  2940     0716  0800               	movf	0,w
  2941     0717  00AA               	movwf	___simple_search_fl@c
  2942     0718  0A84               	incf	4,f
  2943     0719  0800               	movf	0,w
  2944     071A  0384               	decf	4,f
  2945     071B  00AB               	movwf	___simple_search_fl@c+1
  2946     071C                     l1222:
  2947     071C  082A               	movf	___simple_search_fl@c,w
  2948     071D  042B               	iorwf	___simple_search_fl@c+1,w
  2949     071E  1D03               	btfss	3,2
  2950     071F  2F21               	goto	u541
  2951     0720  2F22               	goto	u540
  2952     0721                     u541:
  2953     0721  2E68               	goto	l1198
  2954     0722                     u540:
  2955     0722                     l1224:
  2956     0722  082C               	movf	___simple_search_fl@best,w
  2957     0723  042D               	iorwf	___simple_search_fl@best+1,w
  2958     0724  1903               	btfsc	3,2
  2959     0725  2F27               	goto	u551
  2960     0726  2F28               	goto	u550
  2961     0727                     u551:
  2962     0727  2E60               	goto	l1192
  2963     0728                     u550:
  2964     0728                     l1226:
  2965     0728  082C               	movf	___simple_search_fl@best,w
  2966     0729  3E02               	addlw	2
  2967     072A  00F3               	movwf	??___simple_search_fl
  2968     072B  082D               	movf	___simple_search_fl@best+1,w
  2969     072C  1803               	skipnc
  2970     072D  3E01               	addlw	1
  2971     072E  3E00               	addlw	0
  2972     072F  00F4               	movwf	??___simple_search_fl+1
  2973     0730  0873               	movf	??___simple_search_fl,w
  2974     0731  0084               	movwf	4
  2975     0732  1783               	bsf	3,7
  2976     0733  1C74               	btfss	??___simple_search_fl+1,0
  2977     0734  1383               	bcf	3,7
  2978     0735  0800               	movf	0,w
  2979     0736  00A8               	movwf	___simple_search_fl@next
  2980     0737  0A84               	incf	4,f
  2981     0738  0800               	movf	0,w
  2982     0739  0384               	decf	4,f
  2983     073A  00A9               	movwf	___simple_search_fl@next+1
  2984     073B  082C               	movf	___simple_search_fl@best,w
  2985     073C  0084               	movwf	4
  2986     073D  1783               	bsf	3,7
  2987     073E  1C2D               	btfss	___simple_search_fl@best+1,0
  2988     073F  1383               	bcf	3,7
  2989     0740  0800               	movf	0,w
  2990     0741  00F3               	movwf	??___simple_search_fl
  2991     0742  0A84               	incf	4,f
  2992     0743  0800               	movf	0,w
  2993     0744  00F4               	movwf	??___simple_search_fl+1
  2994     0745  0871               	movf	___simple_search_fl@n,w
  2995     0746  0273               	subwf	??___simple_search_fl,w
  2996     0747  00F5               	movwf	??___simple_search_fl+2
  2997     0748  0872               	movf	___simple_search_fl@n+1,w
  2998     0749  1C03               	skipc
  2999     074A  0A72               	incf	___simple_search_fl@n+1,w
  3000     074B  0274               	subwf	??___simple_search_fl+1,w
  3001     074C  00F6               	movwf	??___simple_search_fl+3
  3002     074D  3000               	movlw	0
  3003     074E  0276               	subwf	??___simple_search_fl+3,w
  3004     074F  3005               	movlw	5
  3005     0750  1903               	skipnz
  3006     0751  0275               	subwf	??___simple_search_fl+2,w
  3007     0752  1C03               	skipc
  3008     0753  2F55               	goto	u561
  3009     0754  2F56               	goto	u560
  3010     0755                     u561:
  3011     0755  2FAE               	goto	l713
  3012     0756                     u560:
  3013     0756                     l1228:
  3014     0756  082C               	movf	___simple_search_fl@best,w
  3015     0757  0084               	movwf	4
  3016     0758  1783               	bsf	3,7
  3017     0759  1C2D               	btfss	___simple_search_fl@best+1,0
  3018     075A  1383               	bcf	3,7
  3019     075B  0800               	movf	0,w
  3020     075C  00F3               	movwf	??___simple_search_fl
  3021     075D  0A84               	incf	4,f
  3022     075E  0800               	movf	0,w
  3023     075F  00F4               	movwf	??___simple_search_fl+1
  3024     0760  0871               	movf	___simple_search_fl@n,w
  3025     0761  0273               	subwf	??___simple_search_fl,w
  3026     0762  00F5               	movwf	??___simple_search_fl+2
  3027     0763  0872               	movf	___simple_search_fl@n+1,w
  3028     0764  1C03               	skipc
  3029     0765  0A72               	incf	___simple_search_fl@n+1,w
  3030     0766  0274               	subwf	??___simple_search_fl+1,w
  3031     0767  00F6               	movwf	??___simple_search_fl+3
  3032     0768  0875               	movf	??___simple_search_fl+2,w
  3033     0769  3EFE               	addlw	254
  3034     076A  00A0               	movwf	___simple_search_fl@remaining_size
  3035     076B  0876               	movf	??___simple_search_fl+3,w
  3036     076C  1803               	skipnc
  3037     076D  3E01               	addlw	1
  3038     076E  3EFF               	addlw	255
  3039     076F  00A1               	movwf	___simple_search_fl@remaining_size+1
  3040     0770                     l1230:
  3041     0770  082C               	movf	___simple_search_fl@best,w
  3042     0771  0084               	movwf	4
  3043     0772  1783               	bsf	3,7
  3044     0773  1C2D               	btfss	___simple_search_fl@best+1,0
  3045     0774  1383               	bcf	3,7
  3046     0775  0871               	movf	___simple_search_fl@n,w
  3047     0776  0080               	movwf	0
  3048     0777  0A84               	incf	4,f
  3049     0778  0872               	movf	___simple_search_fl@n+1,w
  3050     0779  0080               	movwf	0
  3051     077A                     l1232:
  3052     077A  082C               	movf	___simple_search_fl@best,w
  3053     077B  0084               	movwf	4
  3054     077C  1783               	bsf	3,7
  3055     077D  1C2D               	btfss	___simple_search_fl@best+1,0
  3056     077E  1383               	bcf	3,7
  3057     077F  0800               	movf	0,w
  3058     0780  072C               	addwf	___simple_search_fl@best,w
  3059     0781  00F3               	movwf	??___simple_search_fl
  3060     0782  082D               	movf	___simple_search_fl@best+1,w
  3061     0783  1803               	skipnc
  3062     0784  3E01               	addlw	1
  3063     0785  00F4               	movwf	??___simple_search_fl+1
  3064     0786  0873               	movf	??___simple_search_fl,w
  3065     0787  3E02               	addlw	2
  3066     0788  00A4               	movwf	___simple_search_fl@split
  3067     0789  0874               	movf	??___simple_search_fl+1,w
  3068     078A  1803               	skipnc
  3069     078B  3E01               	addlw	1
  3070     078C  3E00               	addlw	0
  3071     078D  00A5               	movwf	___simple_search_fl@split+1
  3072     078E  0824               	movf	___simple_search_fl@split,w
  3073     078F  0084               	movwf	4
  3074     0790  1783               	bsf	3,7
  3075     0791  1C25               	btfss	___simple_search_fl@split+1,0
  3076     0792  1383               	bcf	3,7
  3077     0793  0820               	movf	___simple_search_fl@remaining_size,w
  3078     0794  0080               	movwf	0
  3079     0795  0A84               	incf	4,f
  3080     0796  0821               	movf	___simple_search_fl@remaining_size+1,w
  3081     0797  0080               	movwf	0
  3082     0798                     l1234:
  3083     0798  0824               	movf	___simple_search_fl@split,w
  3084     0799  3E02               	addlw	2
  3085     079A  00F3               	movwf	??___simple_search_fl
  3086     079B  0825               	movf	___simple_search_fl@split+1,w
  3087     079C  1803               	skipnc
  3088     079D  3E01               	addlw	1
  3089     079E  3E00               	addlw	0
  3090     079F  00F4               	movwf	??___simple_search_fl+1
  3091     07A0  0873               	movf	??___simple_search_fl,w
  3092     07A1  0084               	movwf	4
  3093     07A2  1783               	bsf	3,7
  3094     07A3  1C74               	btfss	??___simple_search_fl+1,0
  3095     07A4  1383               	bcf	3,7
  3096     07A5  0828               	movf	___simple_search_fl@next,w
  3097     07A6  0080               	movwf	0
  3098     07A7  0A84               	incf	4,f
  3099     07A8  0829               	movf	___simple_search_fl@next+1,w
  3100     07A9  0080               	movwf	0
  3101     07AA                     l1236:
  3102     07AA  0824               	movf	___simple_search_fl@split,w
  3103     07AB  00A8               	movwf	___simple_search_fl@next
  3104     07AC  0825               	movf	___simple_search_fl@split+1,w
  3105     07AD  00A9               	movwf	___simple_search_fl@next+1
  3106     07AE                     l713:
  3107     07AE  082D               	movf	___simple_search_fl@best+1,w
  3108     07AF  066E               	xorwf	___freelist+1,w
  3109     07B0  1D03               	skipz
  3110     07B1  2FB4               	goto	u575
  3111     07B2  082C               	movf	___simple_search_fl@best,w
  3112     07B3  066D               	xorwf	___freelist,w
  3113     07B4                     u575:
  3114     07B4  1D03               	skipz
  3115     07B5  2FB7               	goto	u571
  3116     07B6  2FB8               	goto	u570
  3117     07B7                     u571:
  3118     07B7  2FBD               	goto	l1240
  3119     07B8                     u570:
  3120     07B8                     l1238:
  3121     07B8  0828               	movf	___simple_search_fl@next,w
  3122     07B9  00ED               	movwf	___freelist
  3123     07BA  0829               	movf	___simple_search_fl@next+1,w
  3124     07BB  00EE               	movwf	___freelist+1
  3125     07BC  2FCF               	goto	l1242
  3126     07BD                     l1240:
  3127     07BD  0822               	movf	___simple_search_fl@best_last,w
  3128     07BE  3E02               	addlw	2
  3129     07BF  00F3               	movwf	??___simple_search_fl
  3130     07C0  0823               	movf	___simple_search_fl@best_last+1,w
  3131     07C1  1803               	skipnc
  3132     07C2  3E01               	addlw	1
  3133     07C3  3E00               	addlw	0
  3134     07C4  00F4               	movwf	??___simple_search_fl+1
  3135     07C5  0873               	movf	??___simple_search_fl,w
  3136     07C6  0084               	movwf	4
  3137     07C7  1783               	bsf	3,7
  3138     07C8  1C74               	btfss	??___simple_search_fl+1,0
  3139     07C9  1383               	bcf	3,7
  3140     07CA  0828               	movf	___simple_search_fl@next,w
  3141     07CB  0080               	movwf	0
  3142     07CC  0A84               	incf	4,f
  3143     07CD  0829               	movf	___simple_search_fl@next+1,w
  3144     07CE  0080               	movwf	0
  3145     07CF                     l1242:
  3146     07CF  082C               	movf	___simple_search_fl@best,w
  3147     07D0  3E02               	addlw	2
  3148     07D1  00F1               	movwf	?___simple_search_fl
  3149     07D2  082D               	movf	___simple_search_fl@best+1,w
  3150     07D3  1803               	skipnc
  3151     07D4  3E01               	addlw	1
  3152     07D5  3E00               	addlw	0
  3153     07D6  00F2               	movwf	?___simple_search_fl+1
  3154     07D7                     l702:
  3155     07D7  0008               	return
  3156     07D8                     __end_of___simple_search_fl:
  3157                           
  3158                           	psect	text12
  3159     01FB                     __ptext12:	
  3160 ;; *************** function ___expand_heap *****************
  3161 ;; Defined at:
  3162 ;;		line 14 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/expand_heap.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  pn              1    0[COMMON] PTR unsigned int 
  3165 ;;		 -> malloc@m(2), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  3168 ;;		 -> __heap_hi(0), NULL(0), 
  3169 ;;  n               2    1[COMMON] unsigned int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  2    0[COMMON] PTR void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         1       0       0       0       0
  3180 ;;      Locals:         4       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0
  3182 ;;      Totals:         5       0       0       0       0
  3183 ;;Total ram usage:        5 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_malloc
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192     01FB                     ___expand_heap:	
  3193                           ;psect for function ___expand_heap
  3194                           
  3195     01FB                     l1250:	
  3196                           ;incstack = 0
  3197                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  3198                           
  3199     01FB  0871               	movf	___expand_heap@pn,w
  3200     01FC  0084               	movwf	4
  3201     01FD  1383               	bcf	3,7	;select IRP bank0
  3202     01FE  0800               	movf	0,w
  3203     01FF  00F2               	movwf	___expand_heap@n
  3204     0200  0A84               	incf	4,f
  3205     0201  0800               	movf	0,w
  3206     0202  00F3               	movwf	___expand_heap@n+1
  3207     0203                     l1252:
  3208     0203  1283               	bcf	3,5	;RP0=0, select bank0
  3209     0204  1303               	bcf	3,6	;RP1=0, select bank0
  3210     0205  0867               	movf	_brkp,w
  3211     0206  0468               	iorwf	_brkp+1,w
  3212     0207  1D03               	btfss	3,2
  3213     0208  2A0A               	goto	u581
  3214     0209  2A0B               	goto	u580
  3215     020A                     u581:
  3216     020A  2A0F               	goto	l761
  3217     020B                     u580:
  3218     020B                     l1254:
  3219     020B  3070               	movlw	low ___heap_hi
  3220     020C  00E7               	movwf	_brkp
  3221     020D  3001               	movlw	high ___heap_hi
  3222     020E  00E8               	movwf	_brkp+1
  3223     020F                     l761:
  3224     020F  3000               	movlw	0
  3225     0210  0273               	subwf	___expand_heap@n+1,w
  3226     0211  3004               	movlw	4
  3227     0212  1903               	skipnz
  3228     0213  0272               	subwf	___expand_heap@n,w
  3229     0214  1803               	skipnc
  3230     0215  2A17               	goto	u591
  3231     0216  2A18               	goto	u590
  3232     0217                     u591:
  3233     0217  2A1C               	goto	l1258
  3234     0218                     u590:
  3235     0218                     l1256:
  3236     0218  3004               	movlw	4
  3237     0219  00F2               	movwf	___expand_heap@n
  3238     021A  3000               	movlw	0
  3239     021B  00F3               	movwf	___expand_heap@n+1
  3240     021C                     l1258:
  3241     021C  0872               	movf	___expand_heap@n,w
  3242     021D  0267               	subwf	_brkp,w
  3243     021E  00F4               	movwf	___expand_heap@new_brkp
  3244     021F  0868               	movf	_brkp+1,w
  3245     0220  1C03               	skipc
  3246     0221  0368               	decf	_brkp+1,w
  3247     0222  00F5               	movwf	___expand_heap@new_brkp+1
  3248     0223                     l1260:
  3249     0223  3001               	movlw	high ___heap_lo
  3250     0224  0275               	subwf	___expand_heap@new_brkp+1,w
  3251     0225  3010               	movlw	low ___heap_lo
  3252     0226  1903               	skipnz
  3253     0227  0274               	subwf	___expand_heap@new_brkp,w
  3254     0228  1C03               	skipc
  3255     0229  2A2B               	goto	u601
  3256     022A  2A2C               	goto	u600
  3257     022B                     u601:
  3258     022B  2A36               	goto	l1264
  3259     022C                     u600:
  3260     022C                     l1262:
  3261     022C  0868               	movf	_brkp+1,w
  3262     022D  0275               	subwf	___expand_heap@new_brkp+1,w
  3263     022E  1D03               	skipz
  3264     022F  2A32               	goto	u615
  3265     0230  0867               	movf	_brkp,w
  3266     0231  0274               	subwf	___expand_heap@new_brkp,w
  3267     0232                     u615:
  3268     0232  1C03               	skipc
  3269     0233  2A35               	goto	u611
  3270     0234  2A36               	goto	u610
  3271     0235                     u611:
  3272     0235  2A3F               	goto	l1270
  3273     0236                     u610:
  3274     0236                     l1264:
  3275     0236  300C               	movlw	12
  3276     0237  1683               	bsf	3,5	;RP0=1, select bank1
  3277     0238  1303               	bcf	3,6	;RP1=0, select bank1
  3278     0239  00A4               	movwf	_errno^(0+128)
  3279     023A  3000               	movlw	0
  3280     023B  00A5               	movwf	(_errno^(0+128)+1)
  3281     023C                     l1266:
  3282     023C  01F1               	clrf	?___expand_heap
  3283     023D  01F2               	clrf	?___expand_heap+1
  3284     023E  2A47               	goto	l766
  3285     023F                     l1270:
  3286     023F  0874               	movf	___expand_heap@new_brkp,w
  3287     0240  00E7               	movwf	_brkp
  3288     0241  0875               	movf	___expand_heap@new_brkp+1,w
  3289     0242  00E8               	movwf	_brkp+1
  3290     0243  0867               	movf	_brkp,w
  3291     0244  00F1               	movwf	?___expand_heap
  3292     0245  0868               	movf	_brkp+1,w
  3293     0246  00F2               	movwf	?___expand_heap+1
  3294     0247                     l766:
  3295     0247  0008               	return
  3296     0248                     __end_of___expand_heap:
  3297                           
  3298                           	psect	text13
  3299     0105                     __ptext13:	
  3300 ;; *************** function ___wmul *****************
  3301 ;; Defined at:
  3302 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  multiplier      2    0[COMMON] unsigned int 
  3305 ;;  multiplicand    2    2[COMMON] unsigned int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  product         2    4[COMMON] unsigned int 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    0[COMMON] unsigned int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         4       0       0       0       0
  3318 ;;      Locals:         2       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         6       0       0       0       0
  3321 ;;Total ram usage:        6 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_calloc
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330     0105                     ___wmul:	
  3331                           ;psect for function ___wmul
  3332                           
  3333     0105                     l1280:	
  3334                           ;incstack = 0
  3335                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3336                           
  3337     0105  01F5               	clrf	___wmul@product
  3338     0106  01F6               	clrf	___wmul@product+1
  3339     0107                     l1282:
  3340     0107  1C71               	btfss	___wmul@multiplier,0
  3341     0108  290A               	goto	u621
  3342     0109  290B               	goto	u620
  3343     010A                     u621:
  3344     010A  2911               	goto	l232
  3345     010B                     u620:
  3346     010B                     l1284:
  3347     010B  0873               	movf	___wmul@multiplicand,w
  3348     010C  07F5               	addwf	___wmul@product,f
  3349     010D  1803               	skipnc
  3350     010E  0AF6               	incf	___wmul@product+1,f
  3351     010F  0874               	movf	___wmul@multiplicand+1,w
  3352     0110  07F6               	addwf	___wmul@product+1,f
  3353     0111                     l232:
  3354     0111  3001               	movlw	1
  3355     0112                     u635:
  3356     0112  1003               	clrc
  3357     0113  0DF3               	rlf	___wmul@multiplicand,f
  3358     0114  0DF4               	rlf	___wmul@multiplicand+1,f
  3359     0115  3EFF               	addlw	-1
  3360     0116  1D03               	skipz
  3361     0117  2912               	goto	u635
  3362     0118                     l1286:
  3363     0118  3001               	movlw	1
  3364     0119                     u645:
  3365     0119  1003               	clrc
  3366     011A  0CF2               	rrf	___wmul@multiplier+1,f
  3367     011B  0CF1               	rrf	___wmul@multiplier,f
  3368     011C  3EFF               	addlw	-1
  3369     011D  1D03               	skipz
  3370     011E  2919               	goto	u645
  3371     011F                     l1288:
  3372     011F  0871               	movf	___wmul@multiplier,w
  3373     0120  0472               	iorwf	___wmul@multiplier+1,w
  3374     0121  1D03               	btfss	3,2
  3375     0122  2924               	goto	u651
  3376     0123  2925               	goto	u650
  3377     0124                     u651:
  3378     0124  2907               	goto	l1282
  3379     0125                     u650:
  3380     0125                     l1290:
  3381     0125  0876               	movf	___wmul@product+1,w
  3382     0126  00F2               	movwf	?___wmul+1
  3383     0127  0875               	movf	___wmul@product,w
  3384     0128  00F1               	movwf	?___wmul
  3385     0129                     l234:
  3386     0129  0008               	return
  3387     012A                     __end_of___wmul:
  3388                           
  3389                           	psect	text14
  3390     0248                     __ptext14:	
  3391 ;; *************** function _MovieShape *****************
  3392 ;; Defined at:
  3393 ;;		line 32 in file "shape.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  dir             1    wreg     enum E885
  3396 ;;  _shapePositi    2    5[BANK0 ] PTR struct .
  3397 ;;		 -> main@shapePosition(4), 
  3398 ;;  shapeArray      1    7[BANK0 ] PTR unsigned char 
  3399 ;;		 -> main@square_1(3), 
  3400 ;;  countElemntA    2    8[BANK0 ] int 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  dir             1   12[BANK0 ] enum E885
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       5       0       0       0
  3413 ;;      Locals:         0       1       0       0       0
  3414 ;;      Temps:          0       2       0       0       0
  3415 ;;      Totals:         0       8       0       0       0
  3416 ;;Total ram usage:        8 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 3
  3419 ;; This function calls:
  3420 ;;		_MovieDown
  3421 ;;		_MovieLeft
  3422 ;;		_MovieRigth
  3423 ;;		_MovieUp
  3424 ;;		_ShowShape
  3425 ;;		_SpiClearMatrix
  3426 ;; This function is called by:
  3427 ;;		_ChangeOfCoordinates
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431     0248                     _MovieShape:	
  3432                           ;psect for function _MovieShape
  3433                           
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _MovieShape: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3437                           ;MovieShape@dir stored from wreg
  3438     0248  1283               	bcf	3,5	;RP0=0, select bank0
  3439     0249  1303               	bcf	3,6	;RP1=0, select bank0
  3440     024A  00AC               	movwf	MovieShape@dir
  3441     024B                     l1420:
  3442                           
  3443                           ;shape.c: 34:     switch (dir){
  3444     024B  2A74               	goto	l1432
  3445     024C                     l1422:
  3446                           
  3447                           ;shape.c: 36:             MovieDown(_shapePosition);
  3448     024C  0825               	movf	MovieShape@_shapePosition,w
  3449     024D  00F1               	movwf	MovieDown@_shapePosition
  3450     024E  0826               	movf	MovieShape@_shapePosition+1,w
  3451     024F  00F2               	movwf	MovieDown@_shapePosition+1
  3452     0250  120A  118A  2072  120A  118A  	fcall	_MovieDown
  3453                           
  3454                           ;shape.c: 37:             break;
  3455     0255  2A8D               	goto	l1434
  3456     0256                     l1424:
  3457                           
  3458                           ;shape.c: 39:             MovieUp(_shapePosition);
  3459     0256  0825               	movf	MovieShape@_shapePosition,w
  3460     0257  00F1               	movwf	MovieUp@_shapePosition
  3461     0258  0826               	movf	MovieShape@_shapePosition+1,w
  3462     0259  00F2               	movwf	MovieUp@_shapePosition+1
  3463     025A  120A  118A  20AE  120A  118A  	fcall	_MovieUp
  3464                           
  3465                           ;shape.c: 40:             break;
  3466     025F  2A8D               	goto	l1434
  3467     0260                     l1426:
  3468                           
  3469                           ;shape.c: 42:             MovieLeft(_shapePosition);
  3470     0260  0825               	movf	MovieShape@_shapePosition,w
  3471     0261  00F1               	movwf	MovieLeft@_shapePosition
  3472     0262  0826               	movf	MovieShape@_shapePosition+1,w
  3473     0263  00F2               	movwf	MovieLeft@_shapePosition+1
  3474     0264  120A  118A  204F  120A  118A  	fcall	_MovieLeft
  3475                           
  3476                           ;shape.c: 43:             break;
  3477     0269  2A8D               	goto	l1434
  3478     026A                     l1428:
  3479                           
  3480                           ;shape.c: 45:             MovieRigth(_shapePosition);
  3481     026A  0825               	movf	MovieShape@_shapePosition,w
  3482     026B  00F1               	movwf	MovieRigth@_shapePosition
  3483     026C  0826               	movf	MovieShape@_shapePosition+1,w
  3484     026D  00F2               	movwf	MovieRigth@_shapePosition+1
  3485     026E  120A  118A  2039  120A  118A  	fcall	_MovieRigth
  3486                           
  3487                           ;shape.c: 46:             break;
  3488     0273  2A8D               	goto	l1434
  3489     0274                     l1432:
  3490     0274  082C               	movf	MovieShape@dir,w
  3491     0275  00AA               	movwf	??_MovieShape
  3492     0276  01AB               	clrf	??_MovieShape+1
  3493                           
  3494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 1, Range of values is 0 to 0
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte            4     3 (average)
  3500                           ; direct_byte           11     8 (fixed)
  3501                           ; jumptable            260     6 (fixed)
  3502                           ;	Chosen strategy is simple_byte
  3503     0277  082B               	movf	??_MovieShape+1,w
  3504     0278  3A00               	xorlw	0	; case 0
  3505     0279  1903               	skipnz
  3506     027A  2A7C               	goto	l1602
  3507     027B  2A8D               	goto	l1434
  3508     027C                     l1602:
  3509                           
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 5, Range of values is 0 to 4
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte           16     9 (average)
  3515                           ; direct_byte           23     8 (fixed)
  3516                           ; jumptable            260     6 (fixed)
  3517                           ;	Chosen strategy is simple_byte
  3518     027C  082A               	movf	??_MovieShape,w
  3519     027D  3A00               	xorlw	0	; case 0
  3520     027E  1903               	skipnz
  3521     027F  2A4C               	goto	l1422
  3522     0280  3A01               	xorlw	1	; case 1
  3523     0281  1903               	skipnz
  3524     0282  2A56               	goto	l1424
  3525     0283  3A03               	xorlw	3	; case 2
  3526     0284  1903               	skipnz
  3527     0285  2A60               	goto	l1426
  3528     0286  3A01               	xorlw	1	; case 3
  3529     0287  1903               	skipnz
  3530     0288  2A6A               	goto	l1428
  3531     0289  3A07               	xorlw	7	; case 4
  3532     028A  1903               	skipnz
  3533     028B  2A8D               	goto	l1434
  3534     028C  2A8D               	goto	l1434
  3535     028D                     l1434:
  3536                           
  3537                           ;shape.c: 51:     SpiClearMatrix();
  3538     028D  120A  118A  2098  120A  118A  	fcall	_SpiClearMatrix
  3539     0292                     l1436:
  3540                           
  3541                           ;shape.c: 52:     ShowShape(_shapePosition, countElemntArray, shapeArray);
  3542     0292  1283               	bcf	3,5	;RP0=0, select bank0
  3543     0293  1303               	bcf	3,6	;RP1=0, select bank0
  3544     0294  0825               	movf	MovieShape@_shapePosition,w
  3545     0295  00F5               	movwf	ShowShape@coord
  3546     0296  0826               	movf	MovieShape@_shapePosition+1,w
  3547     0297  00F6               	movwf	ShowShape@coord+1
  3548     0298  0829               	movf	MovieShape@countElemntArray+1,w
  3549     0299  00F8               	movwf	ShowShape@countElemntArray+1
  3550     029A  0828               	movf	MovieShape@countElemntArray,w
  3551     029B  00F7               	movwf	ShowShape@countElemntArray
  3552     029C  0827               	movf	MovieShape@shapeArray,w
  3553     029D  00F9               	movwf	ShowShape@shapeArray
  3554     029E  120A  118A  22A4  120A  118A  	fcall	_ShowShape
  3555     02A3                     l129:
  3556     02A3  0008               	return
  3557     02A4                     __end_of_MovieShape:
  3558                           
  3559                           	psect	text15
  3560     0098                     __ptext15:	
  3561 ;; *************** function _SpiClearMatrix *****************
  3562 ;; Defined at:
  3563 ;;		line 10 in file "matrix.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  i               1    6[COMMON] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       0       0       0       0
  3578 ;;      Locals:         1       0       0       0       0
  3579 ;;      Temps:          2       0       0       0       0
  3580 ;;      Totals:         3       0       0       0       0
  3581 ;;Total ram usage:        3 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 2
  3584 ;; This function calls:
  3585 ;;		_SendToSegment
  3586 ;; This function is called by:
  3587 ;;		_MatrixInit
  3588 ;;		_MovieShape
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592     0098                     _SpiClearMatrix:	
  3593                           ;psect for function _SpiClearMatrix
  3594                           
  3595     0098                     l1354:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;matrix.c: 12:   char i = 8;
  3601     0098  3008               	movlw	8
  3602     0099  00F7               	movwf	SpiClearMatrix@i
  3603     009A                     l1356:
  3604                           
  3605                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  3606     009A  0877               	movf	SpiClearMatrix@i,w
  3607     009B  00F5               	movwf	??_SpiClearMatrix
  3608     009C  01F6               	clrf	??_SpiClearMatrix+1
  3609     009D  0875               	movf	??_SpiClearMatrix,w
  3610     009E  00F2               	movwf	SendToSegment@segment
  3611     009F  0876               	movf	??_SpiClearMatrix+1,w
  3612     00A0  00F3               	movwf	SendToSegment@segment+1
  3613     00A1  01F4               	clrf	SendToSegment@data
  3614     00A2  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  3615     00A7                     l1358:
  3616                           
  3617                           ;matrix.c: 16:   } while (--i);
  3618     00A7  3001               	movlw	1
  3619     00A8  02F7               	subwf	SpiClearMatrix@i,f
  3620     00A9  1D03               	btfss	3,2
  3621     00AA  28AC               	goto	u741
  3622     00AB  28AD               	goto	u740
  3623     00AC                     u741:
  3624     00AC  289A               	goto	l1356
  3625     00AD                     u740:
  3626     00AD                     l84:
  3627     00AD  0008               	return
  3628     00AE                     __end_of_SpiClearMatrix:
  3629                           
  3630                           	psect	text16
  3631     02A4                     __ptext16:	
  3632 ;; *************** function _ShowShape *****************
  3633 ;; Defined at:
  3634 ;;		line 8 in file "shape.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  coord           2    4[COMMON] PTR struct .
  3637 ;;		 -> main@shapePosition(4), 
  3638 ;;  countElemntA    2    6[COMMON] int 
  3639 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
  3640 ;;		 -> main@square_1(3), 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  pos             2   11[COMMON] int 
  3643 ;;  _pos            2    9[COMMON] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         5       0       0       0       0
  3654 ;;      Locals:         4       0       0       0       0
  3655 ;;      Temps:          0       5       0       0       0
  3656 ;;      Totals:         9       5       0       0       0
  3657 ;;Total ram usage:       14 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 2
  3660 ;; This function calls:
  3661 ;;		_SendToSegment
  3662 ;; This function is called by:
  3663 ;;		_MovieShape
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667     02A4                     _ShowShape:	
  3668                           ;psect for function _ShowShape
  3669                           
  3670     02A4                     l1360:	
  3671                           ;incstack = 0
  3672                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3673                           
  3674     02A4                     l1362:
  3675                           
  3676                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  3677     02A4  0875               	movf	ShowShape@coord,w
  3678     02A5  0084               	movwf	4
  3679     02A6  1783               	bsf	3,7
  3680     02A7  1C76               	btfss	ShowShape@coord+1,0
  3681     02A8  1383               	bcf	3,7
  3682     02A9  0800               	movf	0,w
  3683     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3684     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3685     02AC  00A0               	movwf	??_ShowShape
  3686     02AD  0A84               	incf	4,f
  3687     02AE  0800               	movf	0,w
  3688     02AF  00A1               	movwf	??_ShowShape+1
  3689     02B0  0820               	movf	??_ShowShape,w
  3690     02B1  3E01               	addlw	1
  3691     02B2  00FC               	movwf	ShowShape@pos
  3692     02B3  0821               	movf	??_ShowShape+1,w
  3693     02B4  1803               	skipnc
  3694     02B5  3E01               	addlw	1
  3695     02B6  3E00               	addlw	0
  3696     02B7  00FD               	movwf	ShowShape@pos+1
  3697     02B8  2B02               	goto	l1370
  3698     02B9                     l1364:
  3699                           
  3700                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  3701     02B9  0875               	movf	ShowShape@coord,w
  3702     02BA  0084               	movwf	4
  3703     02BB  1783               	bsf	3,7
  3704     02BC  1C76               	btfss	ShowShape@coord+1,0
  3705     02BD  1383               	bcf	3,7
  3706     02BE  0800               	movf	0,w
  3707     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  3708     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  3709     02C1  00A0               	movwf	??_ShowShape
  3710     02C2  0A84               	incf	4,f
  3711     02C3  0800               	movf	0,w
  3712     02C4  00A1               	movwf	??_ShowShape+1
  3713     02C5  0820               	movf	??_ShowShape,w
  3714     02C6  027C               	subwf	ShowShape@pos,w
  3715     02C7  00A2               	movwf	??_ShowShape+2
  3716     02C8  0821               	movf	??_ShowShape+1,w
  3717     02C9  1C03               	skipc
  3718     02CA  0A21               	incf	??_ShowShape+1,w
  3719     02CB  027D               	subwf	ShowShape@pos+1,w
  3720     02CC  00A3               	movwf	??_ShowShape+3
  3721     02CD  0822               	movf	??_ShowShape+2,w
  3722     02CE  3EFF               	addlw	255
  3723     02CF  00FA               	movwf	ShowShape@_pos
  3724     02D0  0823               	movf	??_ShowShape+3,w
  3725     02D1  1803               	skipnc
  3726     02D2  3E01               	addlw	1
  3727     02D3  3EFF               	addlw	255
  3728     02D4  00FB               	movwf	ShowShape@_pos+1
  3729     02D5                     l1366:
  3730                           
  3731                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  3732     02D5  087D               	movf	ShowShape@pos+1,w
  3733     02D6  00F3               	movwf	SendToSegment@segment+1
  3734     02D7  087C               	movf	ShowShape@pos,w
  3735     02D8  00F2               	movwf	SendToSegment@segment
  3736     02D9  087A               	movf	ShowShape@_pos,w
  3737     02DA  0779               	addwf	ShowShape@shapeArray,w
  3738     02DB  00A0               	movwf	??_ShowShape
  3739     02DC  0820               	movf	??_ShowShape,w
  3740     02DD  0084               	movwf	4
  3741     02DE  1383               	bcf	3,7	;select IRP bank0
  3742     02DF  0800               	movf	0,w
  3743     02E0  00A1               	movwf	??_ShowShape+1
  3744     02E1  0875               	movf	ShowShape@coord,w
  3745     02E2  3E02               	addlw	2
  3746     02E3  00A2               	movwf	??_ShowShape+2
  3747     02E4  0876               	movf	ShowShape@coord+1,w
  3748     02E5  1803               	skipnc
  3749     02E6  3E01               	addlw	1
  3750     02E7  3E00               	addlw	0
  3751     02E8  00A3               	movwf	??_ShowShape+3
  3752     02E9  0822               	movf	??_ShowShape+2,w
  3753     02EA  0084               	movwf	4
  3754     02EB  1783               	bsf	3,7
  3755     02EC  1C23               	btfss	??_ShowShape+3,0
  3756     02ED  1383               	bcf	3,7
  3757     02EE  0A00               	incf	0,w
  3758     02EF  2AF2               	goto	u754
  3759     02F0                     u755:
  3760     02F0  1003               	clrc
  3761     02F1  0DA1               	rlf	??_ShowShape+1,f
  3762     02F2                     u754:
  3763     02F2  3EFF               	addlw	-1
  3764     02F3  1D03               	skipz
  3765     02F4  2AF0               	goto	u755
  3766     02F5  0821               	movf	??_ShowShape+1,w
  3767     02F6  00F4               	movwf	SendToSegment@data
  3768     02F7  120A  118A  2085  120A  118A  	fcall	_SendToSegment
  3769     02FC                     l1368:
  3770                           
  3771                           ;shape.c: 13:     }
  3772     02FC  3001               	movlw	1
  3773     02FD  07FC               	addwf	ShowShape@pos,f
  3774     02FE  1803               	skipnc
  3775     02FF  0AFD               	incf	ShowShape@pos+1,f
  3776     0300  3000               	movlw	0
  3777     0301  07FD               	addwf	ShowShape@pos+1,f
  3778     0302                     l1370:
  3779     0302  0875               	movf	ShowShape@coord,w
  3780     0303  0084               	movwf	4
  3781     0304  1783               	bsf	3,7
  3782     0305  1C76               	btfss	ShowShape@coord+1,0
  3783     0306  1383               	bcf	3,7
  3784     0307  0800               	movf	0,w
  3785     0308  1283               	bcf	3,5	;RP0=0, select bank0
  3786     0309  1303               	bcf	3,6	;RP1=0, select bank0
  3787     030A  00A0               	movwf	??_ShowShape
  3788     030B  0A84               	incf	4,f
  3789     030C  0800               	movf	0,w
  3790     030D  00A1               	movwf	??_ShowShape+1
  3791     030E  0877               	movf	ShowShape@countElemntArray,w
  3792     030F  0720               	addwf	??_ShowShape,w
  3793     0310  00A2               	movwf	??_ShowShape+2
  3794     0311  0878               	movf	ShowShape@countElemntArray+1,w
  3795     0312  1803               	skipnc
  3796     0313  0A78               	incf	ShowShape@countElemntArray+1,w
  3797     0314  0721               	addwf	??_ShowShape+1,w
  3798     0315  00A3               	movwf	??_ShowShape+3
  3799     0316  0823               	movf	??_ShowShape+3,w
  3800     0317  3A80               	xorlw	128
  3801     0318  00A4               	movwf	??_ShowShape+4
  3802     0319  087D               	movf	ShowShape@pos+1,w
  3803     031A  3A80               	xorlw	128
  3804     031B  0224               	subwf	??_ShowShape+4,w
  3805     031C  1D03               	skipz
  3806     031D  2B20               	goto	u765
  3807     031E  087C               	movf	ShowShape@pos,w
  3808     031F  0222               	subwf	??_ShowShape+2,w
  3809     0320                     u765:
  3810     0320  1803               	skipnc
  3811     0321  2B23               	goto	u761
  3812     0322  2B24               	goto	u760
  3813     0323                     u761:
  3814     0323  2AB9               	goto	l1364
  3815     0324                     u760:
  3816     0324                     l107:
  3817     0324  0008               	return
  3818     0325                     __end_of_ShowShape:
  3819                           
  3820                           	psect	text17
  3821     0085                     __ptext17:	
  3822 ;; *************** function _SendToSegment *****************
  3823 ;; Defined at:
  3824 ;;		line 34 in file "matrix.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  segment         2    1[COMMON] int 
  3827 ;;  data            1    3[COMMON] unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         3       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0
  3842 ;;      Totals:         3       0       0       0       0
  3843 ;;Total ram usage:        3 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 1
  3846 ;; This function calls:
  3847 ;;		_SpiSendByte
  3848 ;; This function is called by:
  3849 ;;		_SpiClearMatrix
  3850 ;;		_MatrixInit
  3851 ;;		_ShowShape
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855     0085                     _SendToSegment:	
  3856                           ;psect for function _SendToSegment
  3857                           
  3858     0085                     l1274:	
  3859                           ;incstack = 0
  3860                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  3861                           
  3862                           
  3863                           ;matrix.c: 35:     RA5 = 0;
  3864     0085  1283               	bcf	3,5	;RP0=0, select bank0
  3865     0086  1303               	bcf	3,6	;RP1=0, select bank0
  3866     0087  1285               	bcf	5,5	;volatile
  3867     0088                     l1276:
  3868                           
  3869                           ;matrix.c: 36:     SpiSendByte((char)segment);
  3870     0088  0872               	movf	SendToSegment@segment,w
  3871     0089  120A  118A  2044  120A  118A  	fcall	_SpiSendByte
  3872                           
  3873                           ;matrix.c: 37:     SpiSendByte(data);
  3874     008E  0874               	movf	SendToSegment@data,w
  3875     008F  120A  118A  2044  120A  118A  	fcall	_SpiSendByte
  3876     0094                     l1278:
  3877                           
  3878                           ;matrix.c: 38:     RA5 = 1;
  3879     0094  1283               	bcf	3,5	;RP0=0, select bank0
  3880     0095  1303               	bcf	3,6	;RP1=0, select bank0
  3881     0096  1685               	bsf	5,5	;volatile
  3882     0097                     l90:
  3883     0097  0008               	return
  3884     0098                     __end_of_SendToSegment:
  3885                           
  3886                           	psect	text18
  3887     0044                     __ptext18:	
  3888 ;; *************** function _SpiSendByte *****************
  3889 ;; Defined at:
  3890 ;;		line 18 in file "spi.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  data            1    wreg     unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  data            1    0[COMMON] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         1       0       0       0       0
  3908 ;;Total ram usage:        1 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_SendToSegment
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     0044                     _SpiSendByte:	
  3918                           ;psect for function _SpiSendByte
  3919                           
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _SpiSendByte: [wreg]
  3923                           ;SpiSendByte@data stored from wreg
  3924     0044  00F1               	movwf	SpiSendByte@data
  3925     0045                     l1186:
  3926                           
  3927                           ;spi.c: 19:     SSPBUF = data;
  3928     0045  0871               	movf	SpiSendByte@data,w
  3929     0046  1283               	bcf	3,5	;RP0=0, select bank0
  3930     0047  1303               	bcf	3,6	;RP1=0, select bank0
  3931     0048  0093               	movwf	19	;volatile
  3932     0049                     l68:	
  3933                           ;spi.c: 20:     while (!SSPIF);
  3934                           
  3935     0049  1D8C               	btfss	12,3	;volatile
  3936     004A  284C               	goto	u471
  3937     004B  284D               	goto	u470
  3938     004C                     u471:
  3939     004C  2849               	goto	l68
  3940     004D                     u470:
  3941     004D                     l70:
  3942                           
  3943                           ;spi.c: 21:     SSPIF = 0;
  3944     004D  118C               	bcf	12,3	;volatile
  3945     004E                     l71:
  3946     004E  0008               	return
  3947     004F                     __end_of_SpiSendByte:
  3948                           
  3949                           	psect	text19
  3950     00AE                     __ptext19:	
  3951 ;; *************** function _MovieUp *****************
  3952 ;; Defined at:
  3953 ;;		line 20 in file "shape.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3956 ;;		 -> main@shapePosition(4), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3968 ;;      Params:         2       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0
  3970 ;;      Temps:          2       0       0       0       0
  3971 ;;      Totals:         4       0       0       0       0
  3972 ;;Total ram usage:        4 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_MovieShape
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981     00AE                     _MovieUp:	
  3982                           ;psect for function _MovieUp
  3983                           
  3984     00AE                     l1374:	
  3985                           ;incstack = 0
  3986                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3987                           
  3988                           
  3989                           ;shape.c: 21:     _shapePosition->y--;
  3990     00AE  0871               	movf	MovieUp@_shapePosition,w
  3991     00AF  3E02               	addlw	2
  3992     00B0  00F3               	movwf	??_MovieUp
  3993     00B1  0872               	movf	MovieUp@_shapePosition+1,w
  3994     00B2  1803               	skipnc
  3995     00B3  3E01               	addlw	1
  3996     00B4  3E00               	addlw	0
  3997     00B5  00F4               	movwf	??_MovieUp+1
  3998     00B6  0873               	movf	??_MovieUp,w
  3999     00B7  0084               	movwf	4
  4000     00B8  1783               	bsf	3,7
  4001     00B9  1C74               	btfss	??_MovieUp+1,0
  4002     00BA  1383               	bcf	3,7
  4003     00BB  30FF               	movlw	255
  4004     00BC  0780               	addwf	0,f
  4005     00BD  0F84               	incfsz	4,f
  4006     00BE  0800               	movf	0,w
  4007     00BF  1803               	skipnc
  4008     00C0  0A00               	incf	0,w
  4009     00C1  00FF               	movwf	btemp+1
  4010     00C2  30FF               	movlw	255
  4011     00C3  077F               	addwf	btemp+1,w
  4012     00C4  0080               	movwf	0
  4013     00C5  0384               	decf	4,f
  4014     00C6                     l113:
  4015     00C6  0008               	return
  4016     00C7                     __end_of_MovieUp:
  4017                           
  4018                           	psect	text20
  4019     0039                     __ptext20:	
  4020 ;; *************** function _MovieRigth *****************
  4021 ;; Defined at:
  4022 ;;		line 28 in file "shape.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4025 ;;		 -> main@shapePosition(4), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         2       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         2       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_MovieShape
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050     0039                     _MovieRigth:	
  4051                           ;psect for function _MovieRigth
  4052                           
  4053     0039                     l1378:	
  4054                           ;incstack = 0
  4055                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  4056                           
  4057                           
  4058                           ;shape.c: 29:     _shapePosition->x++;
  4059     0039  0871               	movf	MovieRigth@_shapePosition,w
  4060     003A  0084               	movwf	4
  4061     003B  1783               	bsf	3,7
  4062     003C  1C72               	btfss	MovieRigth@_shapePosition+1,0
  4063     003D  1383               	bcf	3,7
  4064     003E  3001               	movlw	1
  4065     003F  0780               	addwf	0,f
  4066     0040  0A84               	incf	4,f
  4067     0041  1803               	skipnc
  4068     0042  0A80               	incf	0,f
  4069     0043                     l119:
  4070     0043  0008               	return
  4071     0044                     __end_of_MovieRigth:
  4072                           
  4073                           	psect	text21
  4074     004F                     __ptext21:	
  4075 ;; *************** function _MovieLeft *****************
  4076 ;; Defined at:
  4077 ;;		line 24 in file "shape.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4080 ;;		 -> main@shapePosition(4), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr0l, fsr0h, btemp+1
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         2       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0
  4095 ;;      Totals:         2       0       0       0       0
  4096 ;;Total ram usage:        2 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_MovieShape
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105     004F                     _MovieLeft:	
  4106                           ;psect for function _MovieLeft
  4107                           
  4108     004F                     l1376:	
  4109                           ;incstack = 0
  4110                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  4111                           
  4112                           
  4113                           ;shape.c: 25:     _shapePosition->x--;
  4114     004F  0871               	movf	MovieLeft@_shapePosition,w
  4115     0050  0084               	movwf	4
  4116     0051  1783               	bsf	3,7
  4117     0052  1C72               	btfss	MovieLeft@_shapePosition+1,0
  4118     0053  1383               	bcf	3,7
  4119     0054  30FF               	movlw	255
  4120     0055  0780               	addwf	0,f
  4121     0056  0F84               	incfsz	4,f
  4122     0057  0800               	movf	0,w
  4123     0058  1803               	skipnc
  4124     0059  0A00               	incf	0,w
  4125     005A  00FF               	movwf	btemp+1
  4126     005B  30FF               	movlw	255
  4127     005C  077F               	addwf	btemp+1,w
  4128     005D  0080               	movwf	0
  4129     005E  0384               	decf	4,f
  4130     005F                     l116:
  4131     005F  0008               	return
  4132     0060                     __end_of_MovieLeft:
  4133                           
  4134                           	psect	text22
  4135     0072                     __ptext22:	
  4136 ;; *************** function _MovieDown *****************
  4137 ;; Defined at:
  4138 ;;		line 16 in file "shape.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4141 ;;		 -> main@shapePosition(4), 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         2       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0
  4155 ;;      Temps:          2       0       0       0       0
  4156 ;;      Totals:         4       0       0       0       0
  4157 ;;Total ram usage:        4 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_MovieShape
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166     0072                     _MovieDown:	
  4167                           ;psect for function _MovieDown
  4168                           
  4169     0072                     l1372:	
  4170                           ;incstack = 0
  4171                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  4172                           
  4173                           
  4174                           ;shape.c: 17:     _shapePosition->y++;
  4175     0072  0871               	movf	MovieDown@_shapePosition,w
  4176     0073  3E02               	addlw	2
  4177     0074  00F3               	movwf	??_MovieDown
  4178     0075  0872               	movf	MovieDown@_shapePosition+1,w
  4179     0076  1803               	skipnc
  4180     0077  3E01               	addlw	1
  4181     0078  3E00               	addlw	0
  4182     0079  00F4               	movwf	??_MovieDown+1
  4183     007A  0873               	movf	??_MovieDown,w
  4184     007B  0084               	movwf	4
  4185     007C  1783               	bsf	3,7
  4186     007D  1C74               	btfss	??_MovieDown+1,0
  4187     007E  1383               	bcf	3,7
  4188     007F  3001               	movlw	1
  4189     0080  0780               	addwf	0,f
  4190     0081  0A84               	incf	4,f
  4191     0082  1803               	skipnc
  4192     0083  0A80               	incf	0,f
  4193     0084                     l110:
  4194     0084  0008               	return
  4195     0085                     __end_of_MovieDown:
  4196     0002                     ___latbits      equ	2
  4197     007E                     btemp           set	126	;btemp
  4198     007E                     wtemp0          set	126
  4199                           
  4200                           	psect	config
  4201                           
  4202                           ;Config register CONFIG @ 0x2007
  4203                           ;	Oscillator Selection bits
  4204                           ;	FOSC = HS, HS oscillator
  4205                           ;	Watchdog Timer Enable bit
  4206                           ;	WDTE = OFF, WDT disabled
  4207                           ;	Power-up Timer Enable bit
  4208                           ;	PWRTE = OFF, PWRT disabled
  4209                           ;	FLASH Program Memory Code Protection bits
  4210                           ;	CP = OFF, Code protection off
  4211                           ;	Brown-out Reset Enable bit
  4212                           ;	BOREN = OFF, BOR disabled
  4213                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  4214                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4215                           ;	Data EE Memory Code Protection
  4216                           ;	CPD = OFF, Code Protection off
  4217                           ;	FLASH Program Memory Write Enable
  4218                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  4219                           ;	In-Circuit Debugger Mode bit
  4220                           ;	DEBUG = 0x1, unprogrammed default
  4221     2007                     	org	8199
  4222     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    8
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     71      79
    BANK1            80      0       9
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    calloc@new_ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    ChangeOfCoordinates@_figure	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ChangeOfCoordinates@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    Rotate@array_	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@res	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    S655$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    SetPosition@position	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__calloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _MatrixInit->_SpiClearMatrix
    _Rotate->_free
    _calloc->_malloc
    _calloc->_memset
    _memset->___wmul
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape
    _SpiClearMatrix->_SendToSegment
    _ShowShape->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_ChangeOfCoordinates
    _ChangeOfCoordinates->_Rotate
    _Rotate->_calloc
    _calloc->_malloc
    _malloc->___simple_search_fl
    _MovieShape->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4261
                                             62 BANK0      9     9      0
                _ChangeOfCoordinates
                         _MatrixInit
                          _PortBInit
                        _SetPosition
                            _SpiInit
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPosition                                          8     2      6      91
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _ChangeOfCoordinates                                 12     7      5    3845
                                             50 BANK0     12     7      5
                         _MovieShape
                             _Rotate
 ---------------------------------------------------------------------------------
 (2) _Rotate                                              20    17      3    2581
                                             30 BANK0     20    17      3
                             _calloc
                               _free
 ---------------------------------------------------------------------------------
 (3) _free                                                12    10      2     289
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (3) _calloc                                               6     2      4    1813
                                             24 BANK0      6     2      4
                             ___wmul
                             _malloc
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6      99
                                              6 COMMON     6     0      6
                                              0 BANK0      2     2      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _malloc                                              14    12      2    1461
                                              8 COMMON     4     2      2
                                             14 BANK0     10    10      0
                      ___expand_heap
                 ___simple_search_fl
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___simple_search_fl                                  22    20      2     827
                                              0 COMMON     8     6      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (5) ___expand_heap                                        5     4      1     136
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MovieShape                                           8     3      5     729
                                              5 BANK0      8     3      5
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _ShowShape
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (2) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _ShowShape                                           14     9      5     312
                                              4 COMMON     9     4      5
                                              0 BANK0      5     5      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (4) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeOfCoordinates
     _MovieShape
       _MovieDown
       _MovieLeft
       _MovieRigth
       _MovieUp
       _ShowShape
         _SendToSegment
           _SpiSendByte
       _SpiClearMatrix
         _SendToSegment
     _Rotate
       _calloc
         ___wmul
         _malloc
           ___expand_heap
           ___simple_search_fl
           ___wmul (ARG)
         _memset
           ___wmul (ARG)
       _free
   _MatrixInit
     _SendToSegment
     _SpiClearMatrix
   _PortBInit
   _SetPosition
   _SpiInit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               85      0       0      0.0%
BITBANK3            85      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       9     11.2%
BITBANK1            80      0       0      0.0%
BANK0               80     71      79     98.8%
BITBANK0            80      0       0      0.0%
COMMON              13     13      13    100.0%
BITCOMMON           13      0       0      0.0%
DATA                 0      0     101      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Dec 18 10:48:50 2024

                      _SpiClearMatrix 0098                                     pc 0002  
                                  l19 0498                                    l29 0563  
                                  l70 004D                                    l71 004E  
                                  l48 0038                                    l65 0071  
                                  l90 0097                                    l68 0049  
                                  l84 00AD                                    l87 0169  
                                  fsr 0004                   ___wmul@multiplicand 0073  
                     SpiSendByte@data 0071                                   l101 00E3  
                                 l110 0084                                   l113 00C6  
                                 l107 0324                                   l116 005F  
                                 l140 0493                                   l119 0043  
                                 l232 0111                                   l129 02A3  
                                 l234 0129                                   l710 0705  
                                 l702 07D7                                   l713 07AE  
                                 l743 03D6                                   l719 0651  
                                 l761 020F                                   l745 03B3  
                                 l747 03AC                                   l739 0335  
                                 l772 0104                                   l766 0247  
                                 l696 01B1                                   _RA5 002D  
                                 u500 0682                                   u501 0681  
                                 u510 06D8                                   u511 06D7  
                                 u600 022C                                   u520 06DE  
                                 u601 022B                                   u521 06DD  
                                 u610 0236                                   u530 06FC  
                                 u611 0235                                   u531 06FB  
                                 u515 06D4                                   u620 010B  
                                 u540 0722                                   u700 0382  
                                 u621 010A                                   u541 0721  
                                 u701 0381                                   u470 004D  
                                 u550 0728                                   u710 039D  
                                 u471 004C                                   u615 0232  
                                 u551 0727                                   u535 06F8  
                                 u711 039C                                   u560 0756  
                                 u480 0660                                   u720 03A8  
                                 u800 059A                                   u561 0755  
                                 u481 065F                                   u721 03A7  
                                 u705 037E                                   u801 0599  
                                 u650 0125                                   u570 07B8  
                                 u490 067C                                   u730 0104  
                                 u810 060A                                   u651 0124  
                                 u635 0112                                   u571 07B7  
                                 u491 067B                                   u731 0103  
                                 u811 0609                                   u740 00AD  
                                 u580 020B                                   u660 032F  
                                 u820 03F2                                   u900 054E  
                                 u741 00AC                                   u645 0119  
                                 u581 020A                                   u725 03A4  
                                 u661 032E                                   u805 0596  
                                 u821 03F1                                   u901 054D  
                                 u590 0218                                   u670 033E  
                                 u830 03FE                                   u910 0563  
                                 u591 0217                                   u575 07B4  
                                 u495 0678                                   u671 033D  
                                 u815 0606                                   u831 03FD  
                                 u911 0562                                   u760 0324  
                                 u680 0352                                   u840 040D  
                                 u761 0323                                   u681 0351  
                                 u841 040C                                   u905 054A  
                                 u754 02F2                                   u690 0370  
                                 u770 018E                                   u755 02F0  
                                 u691 036F                                   u771 018D  
                                 u915 055F                                   u780 056E  
                                 u765 0320                                   u781 056D  
                                 u790 0584                                   u870 0433  
                                 u854 041A                                   u791 0583  
                                 u855 0418                                   u927 0130  
                                 u880 0461                                   u864 0424  
                                 u865 0422                                   u937 0532  
                                 u890 0488                                   u891 0487  
                                 u895 0484                                   fsr0 0004  
                                 indf 0000                                  l1200 067C  
                                l1202 0682                                  l1210 06C4  
                                l1220 0709                                  l1212 06D8  
                                l1204 06A8                                  l1300 033E  
                                l1230 0770                                  l1214 06DE  
                                l1206 06BB                                  l1222 071C  
                                l1310 035B                                  l1302 0343  
                                l1240 07BD                                  l1232 077A  
                                l1224 0722                                  l1320 038A  
                                l1312 035B                                  l1304 0352  
                                l1400 05BF                                  l1250 01FB  
                                l1242 07CF                                  l1234 0798  
                                l1226 0728                                  l1218 06FD  
                                l1330 03A8                                  l1322 0397  
                                l1314 036A                                  l1306 0358  
                                l1410 060A                                  l1402 05E1  
                                l1420 024B                                  l1260 0223  
                                l1252 0203                                  l1236 07AA  
                                l1228 0756                                  l1340 03CD  
                                l1332 03B7                                  l1316 0370  
                                l1500 0515                                  l1422 024C  
                                l1270 023F                                  l1262 022C  
                                l1254 020B                                  l1238 07B8  
                                l1190 065A                                  l1334 03BB  
                                l1318 0382                                  l1342 03D2  
                                l1350 00F2                                  l1414 062D  
                                l1502 052A                                  l1360 02A4  
                                l1424 0256                                  l1432 0274  
                                l1280 0105                                  l1264 0236  
                                l1256 0218                                  l1192 0660  
                                l1336 03C5                                  l1328 039E  
                                l1352 00F6                                  l1408 05E6  
                                l1416 0640                                  l1504 0541  
                                l1600 051C                                  l1520 006D  
                                l1186 0045                                  l1274 0085  
                                l1370 0302                                  l1362 02A4  
                                l1354 0098                                  l1602 027C  
                                l1426 0260                                  l1434 028D  
                                l1290 0125                                  l1282 0107  
                                l1266 023C                                  l1258 021C  
                                l1338 03C9                                  l1346 00E4  
                                l1450 03FA                                  l1506 054E  
                                l1530 014E                                  l1522 012A  
                                l1514 0060                                  l1372 0072  
                                l1276 0088                                  l1364 02B9  
                                l1356 009A                                  l1436 0292  
                                l1428 026A                                  l1284 010B  
                                l1196 0663                                  l1188 0652  
                                l1348 00EB                                  l1380 016A  
                                l1444 03D7                                  l1508 0556  
                                l1532 0159                                  l1524 0136  
                                l1540 00D1                                  l1516 0063  
                                l1374 00AE                                  l1278 0094  
                                l1366 02D5                                  l1358 00A7  
                                l1286 0118                                  l1198 0668  
                                l1294 0325                                  l1382 0188  
                                l1390 0564                                  l1470 044B  
                                l1462 040E                                  l1454 03FF  
                                l1446 03EC                                  l1534 0164  
                                l1526 0139                                  l1518 006B  
                                l1542 01B2                                  l1376 004F  
                                l1368 02FC                                  l1288 011F  
                                l1296 0329                                  l1384 018E  
                                l1480 047A                                  l1464 043E  
                                l1456 0407                                  l1448 03F2  
                                l1528 0143                                  l1536 0032  
                                l1544 01BC                                  l1378 0039  
                                l1298 032F                                  l1386 01AB  
                                l1394 056F                                  l1466 0444  
                                l1458 0409                                  l1474 0452  
                                l1482 0488                                  l1490 049D  
                                l1538 00C7                                  l1546 01D7  
                                l1396 0584                                  l1476 0455  
                                l1492 04BB                                  l1484 0494  
                                l1548 01E6                                  l1398 059A  
                                l1478 0474                                  l1494 04D9  
                                l1496 04F7                                  _brkp 0067  
                                _free 0564                                  _main 01B2  
                                btemp 007E                                  start 0000  
              __end_of_SpiClearMatrix 00AE                       __end_of_MovieUp 00C7  
                     __end_of_SpiInit 0072                                 ?_free 0071  
                               ?_main 0071                   _ChangeOfCoordinates 0494  
                               _PORTA 0005                                 _PORTB 0006  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _SSPIF 0063  
                     SpiClearMatrix@i 0077                     SendToSegment@data 0074  
                               _errno 00A4                                 free@c 007B  
                               pclath 000A                      ___expand_heap@pn 0071  
                               status 0003                                 wtemp0 007E  
                        main@square_1 005E                  ?_ChangeOfCoordinates 0052  
                     ?_SpiClearMatrix 0071                       __initialization 07D8  
                        __end_of_free 0652                          __end_of_main 01FB  
                       ___expand_heap 01FB                            _MatrixInit 012A  
                              ??_free 0073                                ??_main 007E  
                       ??_SetPosition 0077                         calloc@new_ptr 003C  
               ??_ChangeOfCoordinates 0057                                _SSPCON 0014  
                              _SSPBUF 0013                            _MovieShape 0248  
                          _MovieRigth 0039                  MovieShape@shapeArray 0027  
                           ??_MovieUp 0073                             ??_SpiInit 0071  
                       ??_SpiSendByte 0071                                _Rotate 03D7  
                      ?___expand_heap 0071               ___simple_search_fl@best 002C  
             ___simple_search_fl@last 0026               ___simple_search_fl@next 0028  
                              ___wmul 0105                                _calloc 016A  
                              _malloc 0325                                _memset 00E4  
                      ShowShape@coord 0075               __end_of__initialization 07FC  
                 __end_of_SetPosition 00E4                            ___freelist 006D  
                      __pcstackCOMMON 0071                          __pidataBANK1 002F  
                         ?_MatrixInit 0071                   __end_of_SpiSendByte 004F  
   ChangeOfCoordinates@_shapePosition 0052  ChangeOfCoordinates@_countElemntArray 0055  
          __end_of___simple_search_fl 07D8                            __pbssBANK0 0067  
                          __pbssBANK1 00A0                     __end_of_MovieLeft 0060  
                   __end_of_MovieDown 0085              MovieShape@_shapePosition 0025  
                   __end_of_PortBInit 0039                     __end_of_ShowShape 0325  
                         ?_MovieShape 0025                     main@shapePosition 0063  
                         ?_MovieRigth 0071                       ??___expand_heap 0072  
                          __pmaintext 01B2                               ?_Rotate 003E  
                             ?___wmul 0071                               ?_calloc 0038  
                             ?_malloc 0079                               ?_memset 0077  
                       MovieShape@dir 002C             ShowShape@countElemntArray 0077  
                         _SetPosition 00C7                               _SSPSTAT 0094  
                          __stringtab 0003                      ??_SpiClearMatrix 0075  
                          calloc@size 003A                               _MovieUp 00AE  
                             _SpiInit 0060                         _SendToSegment 0085  
                ___simple_search_fl@c 002A                  ___simple_search_fl@n 0071  
                         _SpiSendByte 0044                               Rotate@i 004A  
                             Rotate@x 0048                               Rotate@y 004C  
            ___simple_search_fl@split 0024                               __ptext1 0060  
                             __ptext2 00C7                               __ptext3 0032  
                             __ptext4 012A                               __ptext5 0494  
                             __ptext6 03D7                               __ptext7 0564  
                             __ptext8 016A                               __ptext9 00E4  
             ChangeOfCoordinates@step 005A                               free@ptr 0071  
                end_of_initialization 07FC                               malloc@m 002E  
                             malloc@n 0079                               malloc@p 0034  
              ___expand_heap@new_brkp 0074                               memset@c 0079  
                             memset@n 007B                               memset@p 0020  
                      ?_SendToSegment 0072                     __end_ofmain@delay 000D  
                 SetPosition@position 0071           __end_of_ChangeOfCoordinates 0564  
             MovieLeft@_shapePosition 0071            ChangeOfCoordinates@_figure 0054  
                      __end_of_Rotate 0494                        __end_of___wmul 012A  
                        ??_MatrixInit 0078                        __end_of_calloc 01B2  
                      __end_of_malloc 03D7                        __end_of_memset 0105  
                     ___expand_heap@n 0072                   start_initialization 07D8  
                          malloc@lock 00A0                            malloc@size 0032  
                  __end_of_MatrixInit 016A                       ??_SendToSegment 0075  
                        ??_MovieShape 002A                          ??_MovieRigth 0073  
                           _MovieLeft 004F                             _MovieDown 0072  
                  ___simple_search_fl 0652                             _PortBInit 0032  
                            ??_Rotate 0041                             _ShowShape 02A4  
        ___simple_search_fl@best_last 0022                              ??___wmul 0075  
                            ??_calloc 007D                           __pdataBANK1 00A6  
                            ??_malloc 007B                              ??_memset 007D  
                 ?___simple_search_fl 0071                            memset@dest 0077  
                       ShowShape@_pos 007A                          SetPosition@x 0073  
                        SetPosition@y 0075                             Rotate@res 004E  
                           ___heap_hi 0170                             ___heap_lo 0110  
                           ___latbits 0002                         __pcstackBANK0 0020  
                  __end_of_MovieShape 02A4                    __end_of_MovieRigth 0044  
                        ?_SetPosition 0071                  main@countElemntArray 0061  
                 ShowShape@shapeArray 0079                  ??___simple_search_fl 0073  
                          ?_MovieLeft 0071                            ?_MovieDown 0071  
                            ?_MovieUp 0071                              ?_SpiInit 0071  
                          ?_PortBInit 0071                 __end_of___expand_heap 0248  
                        ?_SpiSendByte 0071                            ?_ShowShape 0075  
                           __pstrings 0003               MovieDown@_shapePosition 0071  
    __end_ofChangeOfCoordinates@delay 0011                 MovieUp@_shapePosition 0071  
                      ___wmul@product 0075                           __stringbase 0008  
                   ___wmul@multiplier 0071                             main@delay 0009  
                           malloc@end 0069                             malloc@cur 006B  
                           malloc@new 0036                           ??_MovieLeft 0073  
                         ??_MovieDown 0073                           calloc@nmemb 0038  
                         ??_PortBInit 0071                           ??_ShowShape 0020  
                        ShowShape@pos 007C                              Rotate@_i 0050  
                  __end_of__stringtab 0009                              __ptext10 0325  
                            __ptext11 0652                              __ptext20 0039  
                            __ptext12 01FB                              __ptext21 004F  
                            __ptext13 0105                              __ptext22 0072  
                            __ptext14 0248                              __ptext15 0098  
                            __ptext16 02A4                              __ptext17 0085  
                            __ptext18 0044                              __ptext19 00AE  
            ChangeOfCoordinates@delay 000D                              main@F927 00A6  
                SendToSegment@segment 0072                              free@cptr 0079  
                            malloc@sz 0030     ___simple_search_fl@remaining_size 0020  
                ChangeOfCoordinates@i 005C                             stringcode 0003  
               __end_of_SendToSegment 0098              MovieRigth@_shapePosition 0071  
          MovieShape@countElemntArray 0028                              stringdir 0003  
                            stringtab 0003                          Rotate@array_ 003E  
                        Rotate@length 003F  
