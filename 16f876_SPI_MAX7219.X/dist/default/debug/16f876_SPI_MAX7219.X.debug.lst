

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 17 10:44:11 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F876 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0004                     fsr             equ	4
    72     0004                     fsr0            equ	4
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0000                     INDF            equ	0	;# 
    80     0001                     TMR0            equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR             equ	4	;# 
    84     0005                     PORTA           equ	5	;# 
    85     0006                     PORTB           equ	6	;# 
    86     0007                     PORTC           equ	7	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     000C                     PIR1            equ	12	;# 
    90     000D                     PIR2            equ	13	;# 
    91     000E                     TMR1            equ	14	;# 
    92     000E                     TMR1L           equ	14	;# 
    93     000F                     TMR1H           equ	15	;# 
    94     0010                     T1CON           equ	16	;# 
    95     0011                     TMR2            equ	17	;# 
    96     0012                     T2CON           equ	18	;# 
    97     0013                     SSPBUF          equ	19	;# 
    98     0014                     SSPCON          equ	20	;# 
    99     0015                     CCPR1           equ	21	;# 
   100     0015                     CCPR1L          equ	21	;# 
   101     0016                     CCPR1H          equ	22	;# 
   102     0017                     CCP1CON         equ	23	;# 
   103     0018                     RCSTA           equ	24	;# 
   104     0019                     TXREG           equ	25	;# 
   105     001A                     RCREG           equ	26	;# 
   106     001B                     CCPR2           equ	27	;# 
   107     001B                     CCPR2L          equ	27	;# 
   108     001C                     CCPR2H          equ	28	;# 
   109     001D                     CCP2CON         equ	29	;# 
   110     001E                     ADRESH          equ	30	;# 
   111     001F                     ADCON0          equ	31	;# 
   112     0081                     OPTION_REG      equ	129	;# 
   113     0085                     TRISA           equ	133	;# 
   114     0086                     TRISB           equ	134	;# 
   115     0087                     TRISC           equ	135	;# 
   116     008C                     PIE1            equ	140	;# 
   117     008D                     PIE2            equ	141	;# 
   118     008E                     PCON            equ	142	;# 
   119     0091                     SSPCON2         equ	145	;# 
   120     0092                     PR2             equ	146	;# 
   121     0093                     SSPADD          equ	147	;# 
   122     0094                     SSPSTAT         equ	148	;# 
   123     0098                     TXSTA           equ	152	;# 
   124     0099                     SPBRG           equ	153	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     008C                     PIE1            equ	140	;# 
   171     008D                     PIE2            equ	141	;# 
   172     008E                     PCON            equ	142	;# 
   173     0091                     SSPCON2         equ	145	;# 
   174     0092                     PR2             equ	146	;# 
   175     0093                     SSPADD          equ	147	;# 
   176     0094                     SSPSTAT         equ	148	;# 
   177     0098                     TXSTA           equ	152	;# 
   178     0099                     SPBRG           equ	153	;# 
   179     009E                     ADRESL          equ	158	;# 
   180     009F                     ADCON1          equ	159	;# 
   181     010C                     EEDATA          equ	268	;# 
   182     010D                     EEADR           equ	269	;# 
   183     010E                     EEDATH          equ	270	;# 
   184     010F                     EEADRH          equ	271	;# 
   185     018C                     EECON1          equ	396	;# 
   186     018D                     EECON2          equ	397	;# 
   187     0000                     INDF            equ	0	;# 
   188     0001                     TMR0            equ	1	;# 
   189     0002                     PCL             equ	2	;# 
   190     0003                     STATUS          equ	3	;# 
   191     0004                     FSR             equ	4	;# 
   192     0005                     PORTA           equ	5	;# 
   193     0006                     PORTB           equ	6	;# 
   194     0007                     PORTC           equ	7	;# 
   195     000A                     PCLATH          equ	10	;# 
   196     000B                     INTCON          equ	11	;# 
   197     000C                     PIR1            equ	12	;# 
   198     000D                     PIR2            equ	13	;# 
   199     000E                     TMR1            equ	14	;# 
   200     000E                     TMR1L           equ	14	;# 
   201     000F                     TMR1H           equ	15	;# 
   202     0010                     T1CON           equ	16	;# 
   203     0011                     TMR2            equ	17	;# 
   204     0012                     T2CON           equ	18	;# 
   205     0013                     SSPBUF          equ	19	;# 
   206     0014                     SSPCON          equ	20	;# 
   207     0015                     CCPR1           equ	21	;# 
   208     0015                     CCPR1L          equ	21	;# 
   209     0016                     CCPR1H          equ	22	;# 
   210     0017                     CCP1CON         equ	23	;# 
   211     0018                     RCSTA           equ	24	;# 
   212     0019                     TXREG           equ	25	;# 
   213     001A                     RCREG           equ	26	;# 
   214     001B                     CCPR2           equ	27	;# 
   215     001B                     CCPR2L          equ	27	;# 
   216     001C                     CCPR2H          equ	28	;# 
   217     001D                     CCP2CON         equ	29	;# 
   218     001E                     ADRESH          equ	30	;# 
   219     001F                     ADCON0          equ	31	;# 
   220     0081                     OPTION_REG      equ	129	;# 
   221     0085                     TRISA           equ	133	;# 
   222     0086                     TRISB           equ	134	;# 
   223     0087                     TRISC           equ	135	;# 
   224     008C                     PIE1            equ	140	;# 
   225     008D                     PIE2            equ	141	;# 
   226     008E                     PCON            equ	142	;# 
   227     0091                     SSPCON2         equ	145	;# 
   228     0092                     PR2             equ	146	;# 
   229     0093                     SSPADD          equ	147	;# 
   230     0094                     SSPSTAT         equ	148	;# 
   231     0098                     TXSTA           equ	152	;# 
   232     0099                     SPBRG           equ	153	;# 
   233     009E                     ADRESL          equ	158	;# 
   234     009F                     ADCON1          equ	159	;# 
   235     010C                     EEDATA          equ	268	;# 
   236     010D                     EEADR           equ	269	;# 
   237     010E                     EEDATH          equ	270	;# 
   238     010F                     EEADRH          equ	271	;# 
   239     018C                     EECON1          equ	396	;# 
   240     018D                     EECON2          equ	397	;# 
   241     0000                     INDF            equ	0	;# 
   242     0001                     TMR0            equ	1	;# 
   243     0002                     PCL             equ	2	;# 
   244     0003                     STATUS          equ	3	;# 
   245     0004                     FSR             equ	4	;# 
   246     0005                     PORTA           equ	5	;# 
   247     0006                     PORTB           equ	6	;# 
   248     0007                     PORTC           equ	7	;# 
   249     000A                     PCLATH          equ	10	;# 
   250     000B                     INTCON          equ	11	;# 
   251     000C                     PIR1            equ	12	;# 
   252     000D                     PIR2            equ	13	;# 
   253     000E                     TMR1            equ	14	;# 
   254     000E                     TMR1L           equ	14	;# 
   255     000F                     TMR1H           equ	15	;# 
   256     0010                     T1CON           equ	16	;# 
   257     0011                     TMR2            equ	17	;# 
   258     0012                     T2CON           equ	18	;# 
   259     0013                     SSPBUF          equ	19	;# 
   260     0014                     SSPCON          equ	20	;# 
   261     0015                     CCPR1           equ	21	;# 
   262     0015                     CCPR1L          equ	21	;# 
   263     0016                     CCPR1H          equ	22	;# 
   264     0017                     CCP1CON         equ	23	;# 
   265     0018                     RCSTA           equ	24	;# 
   266     0019                     TXREG           equ	25	;# 
   267     001A                     RCREG           equ	26	;# 
   268     001B                     CCPR2           equ	27	;# 
   269     001B                     CCPR2L          equ	27	;# 
   270     001C                     CCPR2H          equ	28	;# 
   271     001D                     CCP2CON         equ	29	;# 
   272     001E                     ADRESH          equ	30	;# 
   273     001F                     ADCON0          equ	31	;# 
   274     0081                     OPTION_REG      equ	129	;# 
   275     0085                     TRISA           equ	133	;# 
   276     0086                     TRISB           equ	134	;# 
   277     0087                     TRISC           equ	135	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     0091                     SSPCON2         equ	145	;# 
   282     0092                     PR2             equ	146	;# 
   283     0093                     SSPADD          equ	147	;# 
   284     0094                     SSPSTAT         equ	148	;# 
   285     0098                     TXSTA           equ	152	;# 
   286     0099                     SPBRG           equ	153	;# 
   287     009E                     ADRESL          equ	158	;# 
   288     009F                     ADCON1          equ	159	;# 
   289     010C                     EEDATA          equ	268	;# 
   290     010D                     EEADR           equ	269	;# 
   291     010E                     EEDATH          equ	270	;# 
   292     010F                     EEADRH          equ	271	;# 
   293     018C                     EECON1          equ	396	;# 
   294     018D                     EECON2          equ	397	;# 
   295     0000                     INDF            equ	0	;# 
   296     0001                     TMR0            equ	1	;# 
   297     0002                     PCL             equ	2	;# 
   298     0003                     STATUS          equ	3	;# 
   299     0004                     FSR             equ	4	;# 
   300     0005                     PORTA           equ	5	;# 
   301     0006                     PORTB           equ	6	;# 
   302     0007                     PORTC           equ	7	;# 
   303     000A                     PCLATH          equ	10	;# 
   304     000B                     INTCON          equ	11	;# 
   305     000C                     PIR1            equ	12	;# 
   306     000D                     PIR2            equ	13	;# 
   307     000E                     TMR1            equ	14	;# 
   308     000E                     TMR1L           equ	14	;# 
   309     000F                     TMR1H           equ	15	;# 
   310     0010                     T1CON           equ	16	;# 
   311     0011                     TMR2            equ	17	;# 
   312     0012                     T2CON           equ	18	;# 
   313     0013                     SSPBUF          equ	19	;# 
   314     0014                     SSPCON          equ	20	;# 
   315     0015                     CCPR1           equ	21	;# 
   316     0015                     CCPR1L          equ	21	;# 
   317     0016                     CCPR1H          equ	22	;# 
   318     0017                     CCP1CON         equ	23	;# 
   319     0018                     RCSTA           equ	24	;# 
   320     0019                     TXREG           equ	25	;# 
   321     001A                     RCREG           equ	26	;# 
   322     001B                     CCPR2           equ	27	;# 
   323     001B                     CCPR2L          equ	27	;# 
   324     001C                     CCPR2H          equ	28	;# 
   325     001D                     CCP2CON         equ	29	;# 
   326     001E                     ADRESH          equ	30	;# 
   327     001F                     ADCON0          equ	31	;# 
   328     0081                     OPTION_REG      equ	129	;# 
   329     0085                     TRISA           equ	133	;# 
   330     0086                     TRISB           equ	134	;# 
   331     0087                     TRISC           equ	135	;# 
   332     008C                     PIE1            equ	140	;# 
   333     008D                     PIE2            equ	141	;# 
   334     008E                     PCON            equ	142	;# 
   335     0091                     SSPCON2         equ	145	;# 
   336     0092                     PR2             equ	146	;# 
   337     0093                     SSPADD          equ	147	;# 
   338     0094                     SSPSTAT         equ	148	;# 
   339     0098                     TXSTA           equ	152	;# 
   340     0099                     SPBRG           equ	153	;# 
   341     009E                     ADRESL          equ	158	;# 
   342     009F                     ADCON1          equ	159	;# 
   343     010C                     EEDATA          equ	268	;# 
   344     010D                     EEADR           equ	269	;# 
   345     010E                     EEDATH          equ	270	;# 
   346     010F                     EEADRH          equ	271	;# 
   347     018C                     EECON1          equ	396	;# 
   348     018D                     EECON2          equ	397	;# 
   349     0000                     INDF            equ	0	;# 
   350     0001                     TMR0            equ	1	;# 
   351     0002                     PCL             equ	2	;# 
   352     0003                     STATUS          equ	3	;# 
   353     0004                     FSR             equ	4	;# 
   354     0005                     PORTA           equ	5	;# 
   355     0006                     PORTB           equ	6	;# 
   356     0007                     PORTC           equ	7	;# 
   357     000A                     PCLATH          equ	10	;# 
   358     000B                     INTCON          equ	11	;# 
   359     000C                     PIR1            equ	12	;# 
   360     000D                     PIR2            equ	13	;# 
   361     000E                     TMR1            equ	14	;# 
   362     000E                     TMR1L           equ	14	;# 
   363     000F                     TMR1H           equ	15	;# 
   364     0010                     T1CON           equ	16	;# 
   365     0011                     TMR2            equ	17	;# 
   366     0012                     T2CON           equ	18	;# 
   367     0013                     SSPBUF          equ	19	;# 
   368     0014                     SSPCON          equ	20	;# 
   369     0015                     CCPR1           equ	21	;# 
   370     0015                     CCPR1L          equ	21	;# 
   371     0016                     CCPR1H          equ	22	;# 
   372     0017                     CCP1CON         equ	23	;# 
   373     0018                     RCSTA           equ	24	;# 
   374     0019                     TXREG           equ	25	;# 
   375     001A                     RCREG           equ	26	;# 
   376     001B                     CCPR2           equ	27	;# 
   377     001B                     CCPR2L          equ	27	;# 
   378     001C                     CCPR2H          equ	28	;# 
   379     001D                     CCP2CON         equ	29	;# 
   380     001E                     ADRESH          equ	30	;# 
   381     001F                     ADCON0          equ	31	;# 
   382     0081                     OPTION_REG      equ	129	;# 
   383     0085                     TRISA           equ	133	;# 
   384     0086                     TRISB           equ	134	;# 
   385     0087                     TRISC           equ	135	;# 
   386     008C                     PIE1            equ	140	;# 
   387     008D                     PIE2            equ	141	;# 
   388     008E                     PCON            equ	142	;# 
   389     0091                     SSPCON2         equ	145	;# 
   390     0092                     PR2             equ	146	;# 
   391     0093                     SSPADD          equ	147	;# 
   392     0094                     SSPSTAT         equ	148	;# 
   393     0098                     TXSTA           equ	152	;# 
   394     0099                     SPBRG           equ	153	;# 
   395     009E                     ADRESL          equ	158	;# 
   396     009F                     ADCON1          equ	159	;# 
   397     010C                     EEDATA          equ	268	;# 
   398     010D                     EEADR           equ	269	;# 
   399     010E                     EEDATH          equ	270	;# 
   400     010F                     EEADRH          equ	271	;# 
   401     018C                     EECON1          equ	396	;# 
   402     018D                     EECON2          equ	397	;# 
   403                           
   404                           	psect	idataBANK0
   405     0068                     __pidataBANK0:
   406                           
   407                           ;initializer for main@F929
   408     0068  3407               	retlw	7
   409     0069  3405               	retlw	5
   410     006A  3402               	retlw	2
   411                           
   412                           	psect	strings
   413     0003                     __pstrings:
   414     0003                     stringtab:
   415     0003                     __stringtab:
   416     0003                     stringcode:	
   417                           ;	String table - string pointers are 1 byte each
   418                           
   419     0003                     stringdir:
   420     0003  3000               	movlw	high stringdir
   421     0004  008A               	movwf	10
   422     0005  0804               	movf	4,w
   423     0006  0A84               	incf	4,f
   424     0007  0782               	addwf	2,f
   425     0008                     __stringbase:
   426     0008  3400               	retlw	0
   427     0009                     __end_of__stringtab:
   428     0009                     main@delay:
   429     0009  34E8               	retlw	232
   430     000A  3403               	retlw	3
   431     000B  3400               	retlw	0
   432     000C  3400               	retlw	0
   433     000D                     __end_ofmain@delay:
   434     000D                     ChangeOfCoordinates@delay:
   435     000D  3464               	retlw	100
   436     000E  3400               	retlw	0
   437     000F  3400               	retlw	0
   438     0010  3400               	retlw	0
   439     0011                     __end_ofChangeOfCoordinates@delay:
   440     0013                     _SSPBUF         set	19
   441     0014                     _SSPCON         set	20
   442     0005                     _PORTA          set	5
   443     0006                     _PORTB          set	6
   444     002D                     _RA5            set	45
   445     0063                     _SSPIF          set	99
   446     0094                     _SSPSTAT        set	148
   447     0085                     _TRISA          set	133
   448     0087                     _TRISC          set	135
   449     0086                     _TRISB          set	134
   450                           
   451                           	psect	cinit
   452     07DC                     start_initialization:	
   453                           ; #config settings
   454                           
   455     07DC                     __initialization:
   456                           
   457                           ; Initialize objects allocated to BANK0
   458     07DC  120A  118A  2068  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   459     07E1  00E9               	movwf	__pdataBANK0& (0+127)
   460     07E2  120A  118A  2069  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   461     07E7  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   462     07E8  120A  118A  206A  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   463     07ED  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   464                           
   465                           ; Clear objects allocated to BANK0
   466     07EE  01DB               	clrf	__pbssBANK0& (0+127)
   467     07EF  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   468     07F0  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   469     07F1  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   470     07F2  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   471     07F3  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   472     07F4  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   473     07F5  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   474     07F6  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   475     07F7  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   476     07F8  01E5               	clrf	(__pbssBANK0+10)& (0+127)
   477     07F9  01E6               	clrf	(__pbssBANK0+11)& (0+127)
   478     07FA  01E7               	clrf	(__pbssBANK0+12)& (0+127)
   479     07FB  01E8               	clrf	(__pbssBANK0+13)& (0+127)
   480     07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483     07FC                     __end_of__initialization:
   484     07FC  0183               	clrf	3
   485     07FD  120A  118A  2A36   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssBANK0
   488     005B                     __pbssBANK0:
   489     005B                     malloc@lock:
   490     005B                     	ds	4
   491     005F                     _brkp:
   492     005F                     	ds	2
   493     0061                     malloc@end:
   494     0061                     	ds	2
   495     0063                     malloc@cur:
   496     0063                     	ds	2
   497     0065                     _errno:
   498     0065                     	ds	2
   499     0067                     ___freelist:
   500     0067                     	ds	2
   501                           
   502                           	psect	dataBANK0
   503     0069                     __pdataBANK0:
   504     0069                     main@F929:
   505     0069                     	ds	3
   506                           
   507                           	psect	cstackCOMMON
   508     0071                     __pcstackCOMMON:
   509     0071                     ?_free:
   510     0071                     ?_SpiInit:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0071                     ?_MatrixInit:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0071                     ?_PortBInit:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0071                     ?_SetPosition:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0071                     ?_main:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0071                     ?_SpiSendByte:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0071                     ?_SpiClearMatrix:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0071                     ?_MovieDown:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0071                     ?_MovieUp:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0071                     ?_MovieLeft:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0071                     ?_MovieRigth:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0071                     ?___simple_search_fl:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0071                     ?___expand_heap:	
   547                           ; 2 bytes @ 0x0
   548                           
   549     0071                     ?___wmul:	
   550                           ; 2 bytes @ 0x0
   551                           
   552     0071                     SpiSendByte@data:	
   553                           ; 2 bytes @ 0x0
   554                           
   555     0071                     ___expand_heap@pn:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0071                     SetPosition@position:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0071                     MovieDown@_shapePosition:	
   562                           ; 2 bytes @ 0x0
   563                           
   564     0071                     MovieUp@_shapePosition:	
   565                           ; 2 bytes @ 0x0
   566                           
   567     0071                     MovieLeft@_shapePosition:	
   568                           ; 2 bytes @ 0x0
   569                           
   570     0071                     MovieRigth@_shapePosition:	
   571                           ; 2 bytes @ 0x0
   572                           
   573     0071                     ___wmul@multiplier:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0071                     ___simple_search_fl@n:	
   577                           ; 2 bytes @ 0x0
   578                           
   579     0071                     free@ptr:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0071                     ??_SpiInit:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0071                     ??_PortBInit:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0071                     ??_SpiSendByte:	
   589                           ; 1 bytes @ 0x0
   590                           
   591                           
   592                           ; 1 bytes @ 0x0
   593     0071                     	ds	1
   594     0072                     ?_SendToSegment:
   595     0072                     SendToSegment@segment:	
   596                           ; 1 bytes @ 0x1
   597                           
   598     0072                     ___expand_heap@n:	
   599                           ; 2 bytes @ 0x1
   600                           
   601     0072                     ??___expand_heap:	
   602                           ; 2 bytes @ 0x1
   603                           
   604                           
   605                           ; 1 bytes @ 0x1
   606     0072                     	ds	1
   607     0073                     SetPosition@x:
   608     0073                     ___wmul@multiplicand:	
   609                           ; 2 bytes @ 0x2
   610                           
   611     0073                     ??_free:	
   612                           ; 2 bytes @ 0x2
   613                           
   614     0073                     ??___simple_search_fl:	
   615                           ; 1 bytes @ 0x2
   616                           
   617     0073                     ??_MovieDown:	
   618                           ; 1 bytes @ 0x2
   619                           
   620     0073                     ??_MovieUp:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0073                     ??_MovieLeft:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0073                     ??_MovieRigth:	
   627                           ; 1 bytes @ 0x2
   628                           
   629                           
   630                           ; 1 bytes @ 0x2
   631     0073                     	ds	1
   632     0074                     SendToSegment@data:
   633     0074                     ___expand_heap@new_brkp:	
   634                           ; 1 bytes @ 0x3
   635                           
   636                           
   637                           ; 2 bytes @ 0x3
   638     0074                     	ds	1
   639     0075                     ?_ShowShape:
   640     0075                     SetPosition@y:	
   641                           ; 1 bytes @ 0x4
   642                           
   643     0075                     ShowShape@coord:	
   644                           ; 2 bytes @ 0x4
   645                           
   646     0075                     ___wmul@product:	
   647                           ; 2 bytes @ 0x4
   648                           
   649     0075                     ??_SendToSegment:	
   650                           ; 2 bytes @ 0x4
   651                           
   652     0075                     ??_SpiClearMatrix:	
   653                           ; 1 bytes @ 0x4
   654                           
   655     0075                     ??___wmul:	
   656                           ; 1 bytes @ 0x4
   657                           
   658                           
   659                           ; 1 bytes @ 0x4
   660     0075                     	ds	2
   661     0077                     ?_memset:
   662     0077                     SpiClearMatrix@i:	
   663                           ; 2 bytes @ 0x6
   664                           
   665     0077                     ShowShape@countElemntArray:	
   666                           ; 1 bytes @ 0x6
   667                           
   668     0077                     memset@dest:	
   669                           ; 2 bytes @ 0x6
   670                           
   671     0077                     ??_SetPosition:	
   672                           ; 2 bytes @ 0x6
   673                           
   674                           
   675                           ; 1 bytes @ 0x6
   676     0077                     	ds	1
   677     0078                     ??_MatrixInit:
   678                           
   679                           ; 1 bytes @ 0x7
   680     0078                     	ds	1
   681     0079                     ?_malloc:
   682     0079                     ShowShape@shapeArray:	
   683                           ; 2 bytes @ 0x8
   684                           
   685     0079                     free@cptr:	
   686                           ; 1 bytes @ 0x8
   687                           
   688     0079                     malloc@n:	
   689                           ; 2 bytes @ 0x8
   690                           
   691     0079                     memset@c:	
   692                           ; 2 bytes @ 0x8
   693                           
   694                           
   695                           ; 2 bytes @ 0x8
   696     0079                     	ds	1
   697     007A                     ShowShape@_pos:
   698                           
   699                           ; 2 bytes @ 0x9
   700     007A                     	ds	1
   701     007B                     free@c:
   702     007B                     memset@n:	
   703                           ; 2 bytes @ 0xA
   704                           
   705     007B                     ??_malloc:	
   706                           ; 2 bytes @ 0xA
   707                           
   708                           
   709                           ; 1 bytes @ 0xA
   710     007B                     	ds	1
   711     007C                     ShowShape@pos:
   712                           
   713                           ; 2 bytes @ 0xB
   714     007C                     	ds	1
   715     007D                     ??_calloc:
   716     007D                     ??_memset:	
   717                           ; 1 bytes @ 0xC
   718                           
   719                           
   720                           ; 1 bytes @ 0xC
   721     007D                     	ds	1
   722     007E                     ??_main:
   723                           
   724                           	psect	cstackBANK0
   725     0020                     __pcstackBANK0:	
   726                           ; 1 bytes @ 0xD
   727                           
   728     0020                     ___simple_search_fl@remaining_size:
   729     0020                     memset@p:	
   730                           ; 2 bytes @ 0x0
   731                           
   732     0020                     ??_ShowShape:	
   733                           ; 2 bytes @ 0x0
   734                           
   735                           
   736                           ; 1 bytes @ 0x0
   737     0020                     	ds	2
   738     0022                     ___simple_search_fl@best_last:
   739                           
   740                           ; 2 bytes @ 0x2
   741     0022                     	ds	2
   742     0024                     ___simple_search_fl@split:
   743                           
   744                           ; 2 bytes @ 0x4
   745     0024                     	ds	1
   746     0025                     ?_MovieShape:
   747     0025                     MovieShape@_shapePosition:	
   748                           ; 1 bytes @ 0x5
   749                           
   750                           
   751                           ; 2 bytes @ 0x5
   752     0025                     	ds	1
   753     0026                     ___simple_search_fl@last:
   754                           
   755                           ; 2 bytes @ 0x6
   756     0026                     	ds	1
   757     0027                     MovieShape@shapeArray:
   758                           
   759                           ; 1 bytes @ 0x7
   760     0027                     	ds	1
   761     0028                     MovieShape@countElemntArray:
   762     0028                     ___simple_search_fl@next:	
   763                           ; 2 bytes @ 0x8
   764                           
   765                           
   766                           ; 2 bytes @ 0x8
   767     0028                     	ds	2
   768     002A                     ___simple_search_fl@c:
   769     002A                     ??_MovieShape:	
   770                           ; 2 bytes @ 0xA
   771                           
   772                           
   773                           ; 1 bytes @ 0xA
   774     002A                     	ds	2
   775     002C                     MovieShape@dir:
   776     002C                     ___simple_search_fl@best:	
   777                           ; 1 bytes @ 0xC
   778                           
   779                           
   780                           ; 2 bytes @ 0xC
   781     002C                     	ds	1
   782     002D                     ?_ChangeOfCoordinates:
   783     002D                     ChangeOfCoordinates@_shapePosition:	
   784                           ; 1 bytes @ 0xD
   785                           
   786                           
   787                           ; 2 bytes @ 0xD
   788     002D                     	ds	1
   789     002E                     malloc@m:
   790                           
   791                           ; 2 bytes @ 0xE
   792     002E                     	ds	1
   793     002F                     ChangeOfCoordinates@_figure:
   794                           
   795                           ; 1 bytes @ 0xF
   796     002F                     	ds	1
   797     0030                     ChangeOfCoordinates@_countElemntArray:
   798     0030                     malloc@sz:	
   799                           ; 2 bytes @ 0x10
   800                           
   801                           
   802                           ; 2 bytes @ 0x10
   803     0030                     	ds	2
   804     0032                     malloc@size:
   805     0032                     ??_ChangeOfCoordinates:	
   806                           ; 2 bytes @ 0x12
   807                           
   808                           
   809                           ; 1 bytes @ 0x12
   810     0032                     	ds	2
   811     0034                     malloc@p:
   812                           
   813                           ; 2 bytes @ 0x14
   814     0034                     	ds	1
   815     0035                     ChangeOfCoordinates@step:
   816                           
   817                           ; 2 bytes @ 0x15
   818     0035                     	ds	1
   819     0036                     malloc@new:
   820                           
   821                           ; 2 bytes @ 0x16
   822     0036                     	ds	1
   823     0037                     ChangeOfCoordinates@i:
   824                           
   825                           ; 2 bytes @ 0x17
   826     0037                     	ds	1
   827     0038                     ?_calloc:
   828     0038                     calloc@nmemb:	
   829                           ; 2 bytes @ 0x18
   830                           
   831                           
   832                           ; 2 bytes @ 0x18
   833     0038                     	ds	2
   834     003A                     calloc@size:
   835                           
   836                           ; 2 bytes @ 0x1A
   837     003A                     	ds	2
   838     003C                     calloc@new_ptr:
   839                           
   840                           ; 2 bytes @ 0x1C
   841     003C                     	ds	2
   842     003E                     ?_Rotate:
   843     003E                     Rotate@array_:	
   844                           ; 1 bytes @ 0x1E
   845                           
   846                           
   847                           ; 1 bytes @ 0x1E
   848     003E                     	ds	1
   849     003F                     Rotate@length:
   850                           
   851                           ; 2 bytes @ 0x1F
   852     003F                     	ds	2
   853     0041                     ??_Rotate:
   854                           
   855                           ; 1 bytes @ 0x21
   856     0041                     	ds	7
   857     0048                     Rotate@x:
   858                           
   859                           ; 2 bytes @ 0x28
   860     0048                     	ds	2
   861     004A                     Rotate@i:
   862                           
   863                           ; 2 bytes @ 0x2A
   864     004A                     	ds	2
   865     004C                     Rotate@y:
   866                           
   867                           ; 2 bytes @ 0x2C
   868     004C                     	ds	2
   869     004E                     Rotate@res:
   870                           
   871                           ; 2 bytes @ 0x2E
   872     004E                     	ds	2
   873     0050                     Rotate@_i:
   874                           
   875                           ; 2 bytes @ 0x30
   876     0050                     	ds	2
   877     0052                     main@square_1:
   878                           
   879                           ; 3 bytes @ 0x32
   880     0052                     	ds	3
   881     0055                     main@countElemntArray:
   882                           
   883                           ; 2 bytes @ 0x35
   884     0055                     	ds	2
   885     0057                     main@shapePosition:
   886                           
   887                           ; 4 bytes @ 0x37
   888     0057                     	ds	4
   889                           
   890                           	psect	maintext
   891     0236                     __pmaintext:	
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   894 ;;
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 73 in file "main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  shapePositio    4   55[BANK0 ] struct .
   902 ;;  square_1        3   50[BANK0 ] unsigned char [3]
   903 ;;  countElemntA    2   53[BANK0 ] int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : B00/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       9       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       9       0       0       0
   917 ;;Total ram usage:        9 bytes
   918 ;; Hardware stack levels required when called: 5
   919 ;; This function calls:
   920 ;;		_ChangeOfCoordinates
   921 ;;		_MatrixInit
   922 ;;		_PortBInit
   923 ;;		_Rotate
   924 ;;		_SetPosition
   925 ;;		_SpiInit
   926 ;; This function is called by:
   927 ;;		Startup code after reset
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931     0236                     _main:	
   932                           ;psect for function _main
   933                           
   934     0236                     l1524:	
   935                           ;incstack = 0
   936                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   937                           
   938                           
   939                           ;main.c: 74:     SpiInit();
   940     0236  120A  118A  2099  120A  118A  	fcall	_SpiInit
   941                           
   942                           ;main.c: 75:     MatrixInit();
   943     023B  120A  118A  2163  120A  118A  	fcall	_MatrixInit
   944     0240                     l1526:
   945                           
   946                           ;main.c: 76:     PortBInit();
   947     0240  120A  118A  206B  120A  118A  	fcall	_PortBInit
   948                           
   949                           ;main.c: 78:     TCoord shapePosition;;main.c: 79:     char square_1[3] = { 0x07, 0x05, 
      +                          0x02 };
   950     0245  1283               	bcf	3,5	;RP0=0, select bank0
   951     0246  1303               	bcf	3,6	;RP1=0, select bank0
   952     0247  0869               	movf	main@F929,w
   953     0248  00D2               	movwf	main@square_1
   954     0249  086A               	movf	main@F929+1,w
   955     024A  00D3               	movwf	main@square_1+1
   956     024B  086B               	movf	main@F929+2,w
   957     024C  00D4               	movwf	main@square_1+2
   958                           
   959                           ;main.c: 80:     int countElemntArray = 3;
   960     024D  3003               	movlw	3
   961     024E  00D5               	movwf	main@countElemntArray
   962     024F  3000               	movlw	0
   963     0250  00D6               	movwf	main@countElemntArray+1
   964     0251                     l1528:
   965                           
   966                           ;main.c: 84:         SetPosition(&shapePosition, 0, 0);
   967     0251  3057               	movlw	low main@shapePosition
   968     0252  00F1               	movwf	SetPosition@position
   969     0253  3000               	movlw	high main@shapePosition
   970     0254  00F2               	movwf	SetPosition@position+1
   971     0255  3000               	movlw	0
   972     0256  00F3               	movwf	SetPosition@x
   973     0257  00F4               	movwf	SetPosition@x+1
   974     0258  3000               	movlw	0
   975     0259  00F5               	movwf	SetPosition@y
   976     025A  00F6               	movwf	SetPosition@y+1
   977     025B  120A  118A  2100  120A  118A  	fcall	_SetPosition
   978     0260                     l1530:
   979                           
   980                           ;main.c: 85:         ChangeOfCoordinates(&shapePosition, square_1, countElemntArray);
   981     0260  3057               	movlw	low main@shapePosition
   982     0261  1283               	bcf	3,5	;RP0=0, select bank0
   983     0262  1303               	bcf	3,6	;RP1=0, select bank0
   984     0263  00AD               	movwf	ChangeOfCoordinates@_shapePosition
   985     0264  3000               	movlw	high main@shapePosition
   986     0265  00AE               	movwf	ChangeOfCoordinates@_shapePosition+1
   987     0266  3052               	movlw	(low (main@square_1| 0))& (0+255)
   988     0267  00AF               	movwf	ChangeOfCoordinates@_figure
   989     0268  0856               	movf	main@countElemntArray+1,w
   990     0269  00B1               	movwf	ChangeOfCoordinates@_countElemntArray+1
   991     026A  0855               	movf	main@countElemntArray,w
   992     026B  00B0               	movwf	ChangeOfCoordinates@_countElemntArray
   993     026C  120A  118A  235F  120A  118A  	fcall	_ChangeOfCoordinates
   994     0271                     l1532:
   995                           
   996                           ;main.c: 86:         Rotate(square_1, countElemntArray);
   997     0271  3052               	movlw	(low (main@square_1| 0))& (0+255)
   998     0272  1283               	bcf	3,5	;RP0=0, select bank0
   999     0273  1303               	bcf	3,6	;RP1=0, select bank0
  1000     0274  00BE               	movwf	Rotate@array_
  1001     0275  0856               	movf	main@countElemntArray+1,w
  1002     0276  00C0               	movwf	Rotate@length+1
  1003     0277  0855               	movf	main@countElemntArray,w
  1004     0278  00BF               	movwf	Rotate@length
  1005     0279  120A  118A  24AB  120A  118A  	fcall	_Rotate
  1006     027E  2A51               	goto	l1528
  1007     027F  120A  118A  2800   	ljmp	start
  1008     0282                     __end_of_main:
  1009                           
  1010                           	psect	text1
  1011     0099                     __ptext1:	
  1012 ;; *************** function _SpiInit *****************
  1013 ;; Defined at:
  1014 ;;		line 9 in file "spi.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041     0099                     _SpiInit:	
  1042                           ;psect for function _SpiInit
  1043                           
  1044     0099                     l1496:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _SpiInit: [wreg+status,2+status,0]
  1047                           
  1048                           
  1049                           ;spi.c: 10:     TRISC |= 0x10;
  1050     0099  1683               	bsf	3,5	;RP0=1, select bank1
  1051     009A  1303               	bcf	3,6	;RP1=0, select bank1
  1052     009B  1607               	bsf	7,4	;volatile
  1053     009C                     l1498:
  1054                           
  1055                           ;spi.c: 11:     TRISC &= ~0x28;
  1056     009C  30D7               	movlw	215
  1057     009D  0587               	andwf	7,f	;volatile
  1058                           
  1059                           ;spi.c: 12:     TRISA &= ~0x20;
  1060     009E  30DF               	movlw	223
  1061     009F  0585               	andwf	5,f	;volatile
  1062                           
  1063                           ;spi.c: 13:     PORTA &= ~0x20;
  1064     00A0  30DF               	movlw	223
  1065     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1066     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1067     00A3  0585               	andwf	5,f	;volatile
  1068     00A4                     l1500:
  1069                           
  1070                           ;spi.c: 14:     SSPCON = 0x30;
  1071     00A4  3030               	movlw	48
  1072     00A5  0094               	movwf	20	;volatile
  1073     00A6                     l1502:
  1074                           
  1075                           ;spi.c: 15:     SSPSTAT = 0x80;
  1076     00A6  3080               	movlw	128
  1077     00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1078     00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1079     00A9  0094               	movwf	20	;volatile
  1080     00AA                     l78:
  1081     00AA  0008               	return
  1082     00AB                     __end_of_SpiInit:
  1083                           
  1084                           	psect	text2
  1085     0100                     __ptext2:	
  1086 ;; *************** function _SetPosition *****************
  1087 ;; Defined at:
  1088 ;;		line 3 in file "shape.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  position        2    0[COMMON] PTR struct .
  1091 ;;		 -> main@shapePosition(4), 
  1092 ;;  x               2    2[COMMON] int 
  1093 ;;  y               2    4[COMMON] int 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         6       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0
  1108 ;;      Totals:         8       0       0       0       0
  1109 ;;Total ram usage:        8 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118     0100                     _SetPosition:	
  1119                           ;psect for function _SetPosition
  1120                           
  1121     0100                     l1520:	
  1122                           ;incstack = 0
  1123                           ; Regs used in _SetPosition: [wreg-fsr0h+status,2+status,0]
  1124                           
  1125                           
  1126                           ;shape.c: 4:     position->x = x;
  1127     0100  0871               	movf	SetPosition@position,w
  1128     0101  0084               	movwf	4
  1129     0102  1783               	bsf	3,7
  1130     0103  1C72               	btfss	SetPosition@position+1,0
  1131     0104  1383               	bcf	3,7
  1132     0105  0873               	movf	SetPosition@x,w
  1133     0106  0080               	movwf	0
  1134     0107  0A84               	incf	4,f
  1135     0108  0874               	movf	SetPosition@x+1,w
  1136     0109  0080               	movwf	0
  1137     010A                     l1522:
  1138                           
  1139                           ;shape.c: 5:     position->y = y;
  1140     010A  0871               	movf	SetPosition@position,w
  1141     010B  3E02               	addlw	2
  1142     010C  00F7               	movwf	??_SetPosition
  1143     010D  0872               	movf	SetPosition@position+1,w
  1144     010E  1803               	skipnc
  1145     010F  3E01               	addlw	1
  1146     0110  3E00               	addlw	0
  1147     0111  00F8               	movwf	??_SetPosition+1
  1148     0112  0877               	movf	??_SetPosition,w
  1149     0113  0084               	movwf	4
  1150     0114  1783               	bsf	3,7
  1151     0115  1C78               	btfss	??_SetPosition+1,0
  1152     0116  1383               	bcf	3,7
  1153     0117  0875               	movf	SetPosition@y,w
  1154     0118  0080               	movwf	0
  1155     0119  0A84               	incf	4,f
  1156     011A  0876               	movf	SetPosition@y+1,w
  1157     011B  0080               	movwf	0
  1158     011C                     l110:
  1159     011C  0008               	return
  1160     011D                     __end_of_SetPosition:
  1161                           
  1162                           	psect	text3
  1163     04AB                     __ptext3:	
  1164 ;; *************** function _Rotate *****************
  1165 ;; Defined at:
  1166 ;;		line 55 in file "main.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  array_          1   30[BANK0 ] PTR unsigned char 
  1169 ;;		 -> main@square_1(3), 
  1170 ;;  length          2   31[BANK0 ] int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  i               2   42[BANK0 ] int 
  1173 ;;  x               2   40[BANK0 ] int 
  1174 ;;  y               2   44[BANK0 ] int 
  1175 ;;  _i              2   48[BANK0 ] int 
  1176 ;;  res             2   46[BANK0 ] PTR unsigned char 
  1177 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       3       0       0       0
  1188 ;;      Locals:         0      10       0       0       0
  1189 ;;      Temps:          0       7       0       0       0
  1190 ;;      Totals:         0      20       0       0       0
  1191 ;;Total ram usage:       20 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 3
  1194 ;; This function calls:
  1195 ;;		_calloc
  1196 ;;		_free
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202     04AB                     _Rotate:	
  1203                           ;psect for function _Rotate
  1204                           
  1205     04AB                     l1456:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _Rotate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1208                           
  1209                           
  1210                           ;main.c: 57:     char * res = calloc((size_t)length, sizeof(unsigned char));
  1211     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1212     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1213     04AD  0840               	movf	Rotate@length+1,w
  1214     04AE  00B9               	movwf	calloc@nmemb+1
  1215     04AF  083F               	movf	Rotate@length,w
  1216     04B0  00B8               	movwf	calloc@nmemb
  1217     04B1  3001               	movlw	1
  1218     04B2  00BA               	movwf	calloc@size
  1219     04B3  3000               	movlw	0
  1220     04B4  00BB               	movwf	calloc@size+1
  1221     04B5  120A  118A  21A3  120A  118A  	fcall	_calloc
  1222     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1223     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1224     04BC  0838               	movf	?_calloc,w
  1225     04BD  00CE               	movwf	Rotate@res
  1226     04BE  0839               	movf	?_calloc+1,w
  1227     04BF  00CF               	movwf	Rotate@res+1
  1228     04C0                     l1458:
  1229                           
  1230                           ;main.c: 59:     if (res){
  1231     04C0  084E               	movf	Rotate@res,w
  1232     04C1  044F               	iorwf	Rotate@res+1,w
  1233     04C2  1903               	btfsc	3,2
  1234     04C3  2CC5               	goto	u831
  1235     04C4  2CC6               	goto	u830
  1236     04C5                     u831:
  1237     04C5  2D5C               	goto	l1494
  1238     04C6                     u830:
  1239     04C6                     l1460:
  1240                           
  1241                           ;main.c: 60:         for(int _i = length - 1; _i >= 0; _i--){
  1242     04C6  083F               	movf	Rotate@length,w
  1243     04C7  3EFF               	addlw	255
  1244     04C8  00D0               	movwf	Rotate@_i
  1245     04C9  0840               	movf	Rotate@length+1,w
  1246     04CA  1803               	skipnc
  1247     04CB  3E01               	addlw	1
  1248     04CC  3EFF               	addlw	255
  1249     04CD  00D1               	movwf	Rotate@_i+1
  1250     04CE                     l1462:
  1251     04CE  1FD1               	btfss	Rotate@_i+1,7
  1252     04CF  2CD1               	goto	u841
  1253     04D0  2CD2               	goto	u840
  1254     04D1                     u841:
  1255     04D1  2CD3               	goto	l1466
  1256     04D2                     u840:
  1257     04D2  2D26               	goto	l1486
  1258     04D3                     l1466:
  1259                           
  1260                           ;main.c: 61:             for(int i = length - 1, x = 0; i >= 0; i--, x++){
  1261     04D3  083F               	movf	Rotate@length,w
  1262     04D4  3EFF               	addlw	255
  1263     04D5  00CA               	movwf	Rotate@i
  1264     04D6  0840               	movf	Rotate@length+1,w
  1265     04D7  1803               	skipnc
  1266     04D8  3E01               	addlw	1
  1267     04D9  3EFF               	addlw	255
  1268     04DA  00CB               	movwf	Rotate@i+1
  1269     04DB                     l1468:
  1270     04DB  01C8               	clrf	Rotate@x
  1271     04DC  01C9               	clrf	Rotate@x+1
  1272     04DD                     l1470:
  1273     04DD  1FCB               	btfss	Rotate@i+1,7
  1274     04DE  2CE0               	goto	u851
  1275     04DF  2CE1               	goto	u850
  1276     04E0                     u851:
  1277     04E0  2CE2               	goto	l1474
  1278     04E1                     u850:
  1279     04E1  2D1F               	goto	l1482
  1280     04E2                     l1474:
  1281                           
  1282                           ;main.c: 62:                 res[_i] |= ((array_[x] >> _i ) & 1) << i;
  1283     04E2  0848               	movf	Rotate@x,w
  1284     04E3  073E               	addwf	Rotate@array_,w
  1285     04E4  00C1               	movwf	??_Rotate
  1286     04E5  0841               	movf	??_Rotate,w
  1287     04E6  0084               	movwf	4
  1288     04E7  1383               	bcf	3,7	;select IRP bank0
  1289     04E8  0800               	movf	0,w
  1290     04E9  00C2               	movwf	??_Rotate+1
  1291     04EA  0A50               	incf	Rotate@_i,w
  1292     04EB  2CEE               	goto	u864
  1293     04EC                     u865:
  1294     04EC  1003               	clrc
  1295     04ED  0CC2               	rrf	??_Rotate+1,f
  1296     04EE                     u864:
  1297     04EE  3EFF               	addlw	-1
  1298     04EF  1D03               	skipz
  1299     04F0  2CEC               	goto	u865
  1300     04F1  0842               	movf	??_Rotate+1,w
  1301     04F2  3901               	andlw	1
  1302     04F3  00C3               	movwf	??_Rotate+2
  1303     04F4  0A4A               	incf	Rotate@i,w
  1304     04F5  2CF8               	goto	u874
  1305     04F6                     u875:
  1306     04F6  1003               	clrc
  1307     04F7  0DC3               	rlf	??_Rotate+2,f
  1308     04F8                     u874:
  1309     04F8  3EFF               	addlw	-1
  1310     04F9  1D03               	skipz
  1311     04FA  2CF6               	goto	u875
  1312     04FB  0843               	movf	??_Rotate+2,w
  1313     04FC  00C4               	movwf	??_Rotate+3
  1314     04FD  0850               	movf	Rotate@_i,w
  1315     04FE  074E               	addwf	Rotate@res,w
  1316     04FF  00C6               	movwf	??_Rotate+5
  1317     0500  084F               	movf	Rotate@res+1,w
  1318     0501  00C5               	movwf	??_Rotate+4
  1319     0502  1803               	skipnc
  1320     0503  0AC5               	incf	??_Rotate+4,f
  1321     0504  1FD0               	btfss	Rotate@_i,7
  1322     0505  2D07               	goto	u880
  1323     0506  03C5               	decf	??_Rotate+4,f
  1324     0507                     u880:
  1325     0507  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0508  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0509  0845               	movf	??_Rotate+4,w
  1328     050A  00C7               	movwf	??_Rotate+6
  1329     050B  0846               	movf	??_Rotate+5,w
  1330     050C  0084               	movwf	4
  1331     050D  1783               	bsf	3,7
  1332     050E  1C47               	btfss	??_Rotate+6,0
  1333     050F  1383               	bcf	3,7
  1334     0510  0844               	movf	??_Rotate+3,w
  1335     0511  0480               	iorwf	0,f
  1336     0512                     l1476:
  1337                           
  1338                           ;main.c: 63:             }
  1339     0512  30FF               	movlw	255
  1340     0513  07CA               	addwf	Rotate@i,f
  1341     0514  1803               	skipnc
  1342     0515  0ACB               	incf	Rotate@i+1,f
  1343     0516  30FF               	movlw	255
  1344     0517  07CB               	addwf	Rotate@i+1,f
  1345     0518                     l1478:
  1346     0518  3001               	movlw	1
  1347     0519  07C8               	addwf	Rotate@x,f
  1348     051A  1803               	skipnc
  1349     051B  0AC9               	incf	Rotate@x+1,f
  1350     051C  3000               	movlw	0
  1351     051D  07C9               	addwf	Rotate@x+1,f
  1352     051E  2CDD               	goto	l1470
  1353     051F                     l1482:
  1354                           
  1355                           ;main.c: 64:         }
  1356     051F  30FF               	movlw	255
  1357     0520  07D0               	addwf	Rotate@_i,f
  1358     0521  1803               	skipnc
  1359     0522  0AD1               	incf	Rotate@_i+1,f
  1360     0523  30FF               	movlw	255
  1361     0524  07D1               	addwf	Rotate@_i+1,f
  1362     0525  2CCE               	goto	l1462
  1363     0526                     l1486:
  1364                           
  1365                           ;main.c: 66:         for(int y = 0; y < length; y++){
  1366     0526  01CC               	clrf	Rotate@y
  1367     0527  01CD               	clrf	Rotate@y+1
  1368     0528  2D4E               	goto	l1492
  1369     0529                     l1488:
  1370                           
  1371                           ;main.c: 67:             array_[y] = res[y];
  1372     0529  1283               	bcf	3,5	;RP0=0, select bank0
  1373     052A  1303               	bcf	3,6	;RP1=0, select bank0
  1374     052B  084C               	movf	Rotate@y,w
  1375     052C  074E               	addwf	Rotate@res,w
  1376     052D  00C2               	movwf	??_Rotate+1
  1377     052E  084F               	movf	Rotate@res+1,w
  1378     052F  00C1               	movwf	??_Rotate
  1379     0530  1803               	skipnc
  1380     0531  0AC1               	incf	??_Rotate,f
  1381     0532  1FCC               	btfss	Rotate@y,7
  1382     0533  2D35               	goto	u890
  1383     0534  03C1               	decf	??_Rotate,f
  1384     0535                     u890:
  1385     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1386     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1387     0537  0841               	movf	??_Rotate,w
  1388     0538  00C3               	movwf	??_Rotate+2
  1389     0539  0842               	movf	??_Rotate+1,w
  1390     053A  0084               	movwf	4
  1391     053B  1783               	bsf	3,7
  1392     053C  1C43               	btfss	??_Rotate+2,0
  1393     053D  1383               	bcf	3,7
  1394     053E  0800               	movf	0,w
  1395     053F  00C4               	movwf	??_Rotate+3
  1396     0540  084C               	movf	Rotate@y,w
  1397     0541  073E               	addwf	Rotate@array_,w
  1398     0542  00C5               	movwf	??_Rotate+4
  1399     0543  0845               	movf	??_Rotate+4,w
  1400     0544  0084               	movwf	4
  1401     0545  0844               	movf	??_Rotate+3,w
  1402     0546  1383               	bcf	3,7	;select IRP bank0
  1403     0547  0080               	movwf	0
  1404     0548                     l1490:
  1405                           
  1406                           ;main.c: 68:         }
  1407     0548  3001               	movlw	1
  1408     0549  07CC               	addwf	Rotate@y,f
  1409     054A  1803               	skipnc
  1410     054B  0ACD               	incf	Rotate@y+1,f
  1411     054C  3000               	movlw	0
  1412     054D  07CD               	addwf	Rotate@y+1,f
  1413     054E                     l1492:
  1414     054E  084D               	movf	Rotate@y+1,w
  1415     054F  3A80               	xorlw	128
  1416     0550  00C1               	movwf	??_Rotate
  1417     0551  0840               	movf	Rotate@length+1,w
  1418     0552  3A80               	xorlw	128
  1419     0553  0241               	subwf	??_Rotate,w
  1420     0554  1D03               	skipz
  1421     0555  2D58               	goto	u905
  1422     0556  083F               	movf	Rotate@length,w
  1423     0557  024C               	subwf	Rotate@y,w
  1424     0558                     u905:
  1425     0558  1C03               	skipc
  1426     0559  2D5B               	goto	u901
  1427     055A  2D5C               	goto	u900
  1428     055B                     u901:
  1429     055B  2D29               	goto	l1488
  1430     055C                     u900:
  1431     055C                     l1494:
  1432                           
  1433                           ;main.c: 70:     free(res);
  1434     055C  1283               	bcf	3,5	;RP0=0, select bank0
  1435     055D  1303               	bcf	3,6	;RP1=0, select bank0
  1436     055E  084E               	movf	Rotate@res,w
  1437     055F  00F1               	movwf	free@ptr
  1438     0560  084F               	movf	Rotate@res+1,w
  1439     0561  00F2               	movwf	free@ptr+1
  1440     0562  120A  118A  2568  120A  118A  	fcall	_free
  1441     0567                     l42:
  1442     0567  0008               	return
  1443     0568                     __end_of_Rotate:
  1444                           
  1445                           	psect	text4
  1446     0568                     __ptext4:	
  1447 ;; *************** function _free *****************
  1448 ;; Defined at:
  1449 ;;		line 67 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  ptr             2    0[COMMON] PTR void 
  1452 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  c               2   10[COMMON] PTR struct chunk
  1455 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1456 ;;  cptr            2    8[COMMON] PTR unsigned char 
  1457 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         2       0       0       0       0
  1468 ;;      Locals:         4       0       0       0       0
  1469 ;;      Temps:          6       0       0       0       0
  1470 ;;      Totals:        12       0       0       0       0
  1471 ;;Total ram usage:       12 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_Rotate
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480     0568                     _free:	
  1481                           ;psect for function _free
  1482                           
  1483     0568                     l1396:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _free: [wreg-fsr0h+status,2+status,0+btemp+1]
  1486                           
  1487     0568  0871               	movf	free@ptr,w
  1488     0569  00F9               	movwf	free@cptr
  1489     056A  0872               	movf	free@ptr+1,w
  1490     056B  00FA               	movwf	free@cptr+1
  1491     056C  0871               	movf	free@ptr,w
  1492     056D  0472               	iorwf	free@ptr+1,w
  1493     056E  1D03               	btfss	3,2
  1494     056F  2D71               	goto	u771
  1495     0570  2D72               	goto	u770
  1496     0571                     u771:
  1497     0571  2D73               	goto	l1400
  1498     0572                     u770:
  1499     0572  2E55               	goto	l711
  1500     0573                     l1400:
  1501     0573  30FE               	movlw	254
  1502     0574  00F3               	movwf	??_free
  1503     0575  0873               	movf	??_free,w
  1504     0576  0779               	addwf	free@cptr,w
  1505     0577  00FB               	movwf	free@c
  1506     0578  087A               	movf	free@cptr+1,w
  1507     0579  00F4               	movwf	??_free+1
  1508     057A  1803               	skipnc
  1509     057B  0AF4               	incf	??_free+1,f
  1510     057C  1BF3               	btfsc	??_free,7
  1511     057D  03F4               	decf	??_free+1,f
  1512     057E  0874               	movf	??_free+1,w
  1513     057F  00FC               	movwf	free@c+1
  1514     0580  1283               	bcf	3,5	;RP0=0, select bank0
  1515     0581  1303               	bcf	3,6	;RP1=0, select bank0
  1516     0582  0867               	movf	___freelist,w
  1517     0583  0468               	iorwf	___freelist+1,w
  1518     0584  1903               	btfsc	3,2
  1519     0585  2D87               	goto	u781
  1520     0586  2D88               	goto	u780
  1521     0587                     u781:
  1522     0587  2E44               	goto	l1422
  1523     0588                     u780:
  1524     0588                     l1402:
  1525     0588  087B               	movf	free@c,w
  1526     0589  0084               	movwf	4
  1527     058A  1783               	bsf	3,7
  1528     058B  1C7C               	btfss	free@c+1,0
  1529     058C  1383               	bcf	3,7
  1530     058D  0800               	movf	0,w
  1531     058E  0779               	addwf	free@cptr,w
  1532     058F  00F3               	movwf	??_free
  1533     0590  087A               	movf	free@cptr+1,w
  1534     0591  1803               	skipnc
  1535     0592  3E01               	addlw	1
  1536     0593  00F4               	movwf	??_free+1
  1537     0594  0874               	movf	??_free+1,w
  1538     0595  0668               	xorwf	___freelist+1,w
  1539     0596  1D03               	skipz
  1540     0597  2D9A               	goto	u795
  1541     0598  0873               	movf	??_free,w
  1542     0599  0667               	xorwf	___freelist,w
  1543     059A                     u795:
  1544     059A  1D03               	skipz
  1545     059B  2D9D               	goto	u791
  1546     059C  2D9E               	goto	u790
  1547     059D                     u791:
  1548     059D  2DEA               	goto	l1414
  1549     059E                     u790:
  1550     059E                     l1404:
  1551     059E  0867               	movf	___freelist,w
  1552     059F  3E02               	addlw	2
  1553     05A0  00F3               	movwf	??_free
  1554     05A1  0868               	movf	___freelist+1,w
  1555     05A2  1803               	skipnc
  1556     05A3  3E01               	addlw	1
  1557     05A4  3E00               	addlw	0
  1558     05A5  00F4               	movwf	??_free+1
  1559     05A6  0873               	movf	??_free,w
  1560     05A7  0084               	movwf	4
  1561     05A8  1783               	bsf	3,7
  1562     05A9  1C74               	btfss	??_free+1,0
  1563     05AA  1383               	bcf	3,7
  1564     05AB  0800               	movf	0,w
  1565     05AC  00F5               	movwf	??_free+2
  1566     05AD  0A84               	incf	4,f
  1567     05AE  0800               	movf	0,w
  1568     05AF  00F6               	movwf	??_free+3
  1569     05B0  087B               	movf	free@c,w
  1570     05B1  3E02               	addlw	2
  1571     05B2  00F7               	movwf	??_free+4
  1572     05B3  087C               	movf	free@c+1,w
  1573     05B4  1803               	skipnc
  1574     05B5  3E01               	addlw	1
  1575     05B6  3E00               	addlw	0
  1576     05B7  00F8               	movwf	??_free+5
  1577     05B8  0877               	movf	??_free+4,w
  1578     05B9  0084               	movwf	4
  1579     05BA  1783               	bsf	3,7
  1580     05BB  1C78               	btfss	??_free+5,0
  1581     05BC  1383               	bcf	3,7
  1582     05BD  0875               	movf	??_free+2,w
  1583     05BE  0080               	movwf	0
  1584     05BF  0876               	movf	??_free+3,w
  1585     05C0  0A84               	incf	4,f
  1586     05C1  0080               	movwf	0
  1587     05C2  0384               	decf	4,f
  1588     05C3                     l1406:
  1589     05C3  0867               	movf	___freelist,w
  1590     05C4  0084               	movwf	4
  1591     05C5  1783               	bsf	3,7
  1592     05C6  1C68               	btfss	___freelist+1,0
  1593     05C7  1383               	bcf	3,7
  1594     05C8  0800               	movf	0,w
  1595     05C9  00F3               	movwf	??_free
  1596     05CA  0A84               	incf	4,f
  1597     05CB  0800               	movf	0,w
  1598     05CC  00F4               	movwf	??_free+1
  1599     05CD  0873               	movf	??_free,w
  1600     05CE  3E02               	addlw	2
  1601     05CF  00F5               	movwf	??_free+2
  1602     05D0  0874               	movf	??_free+1,w
  1603     05D1  1803               	skipnc
  1604     05D2  3E01               	addlw	1
  1605     05D3  3E00               	addlw	0
  1606     05D4  00F6               	movwf	??_free+3
  1607     05D5  087B               	movf	free@c,w
  1608     05D6  0084               	movwf	4
  1609     05D7  1783               	bsf	3,7
  1610     05D8  1C7C               	btfss	free@c+1,0
  1611     05D9  1383               	bcf	3,7
  1612     05DA  0875               	movf	??_free+2,w
  1613     05DB  0780               	addwf	0,f
  1614     05DC  0F84               	incfsz	4,f
  1615     05DD  0800               	movf	0,w
  1616     05DE  1803               	skipnc
  1617     05DF  0A00               	incf	0,w
  1618     05E0  00FF               	movwf	btemp+1
  1619     05E1  0876               	movf	??_free+3,w
  1620     05E2  077F               	addwf	btemp+1,w
  1621     05E3  0080               	movwf	0
  1622     05E4  0384               	decf	4,f
  1623     05E5                     l1408:
  1624     05E5  087B               	movf	free@c,w
  1625     05E6  00E7               	movwf	___freelist
  1626     05E7  087C               	movf	free@c+1,w
  1627     05E8  00E8               	movwf	___freelist+1
  1628     05E9  2E55               	goto	l711
  1629     05EA                     l1414:
  1630     05EA  0867               	movf	___freelist,w
  1631     05EB  0084               	movwf	4
  1632     05EC  1783               	bsf	3,7
  1633     05ED  1C68               	btfss	___freelist+1,0
  1634     05EE  1383               	bcf	3,7
  1635     05EF  0800               	movf	0,w
  1636     05F0  00F3               	movwf	??_free
  1637     05F1  0A84               	incf	4,f
  1638     05F2  0800               	movf	0,w
  1639     05F3  00F4               	movwf	??_free+1
  1640     05F4  0873               	movf	??_free,w
  1641     05F5  0767               	addwf	___freelist,w
  1642     05F6  00F5               	movwf	??_free+2
  1643     05F7  0874               	movf	??_free+1,w
  1644     05F8  1803               	skipnc
  1645     05F9  0A74               	incf	??_free+1,w
  1646     05FA  0768               	addwf	___freelist+1,w
  1647     05FB  00F6               	movwf	??_free+3
  1648     05FC  0875               	movf	??_free+2,w
  1649     05FD  3E02               	addlw	2
  1650     05FE  00F7               	movwf	??_free+4
  1651     05FF  0876               	movf	??_free+3,w
  1652     0600  1803               	skipnc
  1653     0601  3E01               	addlw	1
  1654     0602  3E00               	addlw	0
  1655     0603  00F8               	movwf	??_free+5
  1656     0604  087C               	movf	free@c+1,w
  1657     0605  0678               	xorwf	??_free+5,w
  1658     0606  1D03               	skipz
  1659     0607  2E0A               	goto	u805
  1660     0608  087B               	movf	free@c,w
  1661     0609  0677               	xorwf	??_free+4,w
  1662     060A                     u805:
  1663     060A  1D03               	skipz
  1664     060B  2E0D               	goto	u801
  1665     060C  2E0E               	goto	u800
  1666     060D                     u801:
  1667     060D  2E31               	goto	l1420
  1668     060E                     u800:
  1669     060E                     l1416:
  1670     060E  087B               	movf	free@c,w
  1671     060F  0084               	movwf	4
  1672     0610  1783               	bsf	3,7
  1673     0611  1C7C               	btfss	free@c+1,0
  1674     0612  1383               	bcf	3,7
  1675     0613  0800               	movf	0,w
  1676     0614  00F3               	movwf	??_free
  1677     0615  0A84               	incf	4,f
  1678     0616  0800               	movf	0,w
  1679     0617  00F4               	movwf	??_free+1
  1680     0618  0873               	movf	??_free,w
  1681     0619  3E02               	addlw	2
  1682     061A  00F5               	movwf	??_free+2
  1683     061B  0874               	movf	??_free+1,w
  1684     061C  1803               	skipnc
  1685     061D  3E01               	addlw	1
  1686     061E  3E00               	addlw	0
  1687     061F  00F6               	movwf	??_free+3
  1688     0620  0867               	movf	___freelist,w
  1689     0621  0084               	movwf	4
  1690     0622  1783               	bsf	3,7
  1691     0623  1C68               	btfss	___freelist+1,0
  1692     0624  1383               	bcf	3,7
  1693     0625  0875               	movf	??_free+2,w
  1694     0626  0780               	addwf	0,f
  1695     0627  0F84               	incfsz	4,f
  1696     0628  0800               	movf	0,w
  1697     0629  1803               	skipnc
  1698     062A  0A00               	incf	0,w
  1699     062B  00FF               	movwf	btemp+1
  1700     062C  0876               	movf	??_free+3,w
  1701     062D  077F               	addwf	btemp+1,w
  1702     062E  0080               	movwf	0
  1703     062F  0384               	decf	4,f
  1704     0630  2E55               	goto	l711
  1705     0631                     l1420:
  1706     0631  087B               	movf	free@c,w
  1707     0632  3E02               	addlw	2
  1708     0633  00F3               	movwf	??_free
  1709     0634  087C               	movf	free@c+1,w
  1710     0635  1803               	skipnc
  1711     0636  3E01               	addlw	1
  1712     0637  3E00               	addlw	0
  1713     0638  00F4               	movwf	??_free+1
  1714     0639  0873               	movf	??_free,w
  1715     063A  0084               	movwf	4
  1716     063B  1783               	bsf	3,7
  1717     063C  1C74               	btfss	??_free+1,0
  1718     063D  1383               	bcf	3,7
  1719     063E  0867               	movf	___freelist,w
  1720     063F  0080               	movwf	0
  1721     0640  0A84               	incf	4,f
  1722     0641  0868               	movf	___freelist+1,w
  1723     0642  0080               	movwf	0
  1724     0643  2DE5               	goto	l1408
  1725     0644                     l1422:
  1726     0644  087B               	movf	free@c,w
  1727     0645  3E02               	addlw	2
  1728     0646  00F3               	movwf	??_free
  1729     0647  087C               	movf	free@c+1,w
  1730     0648  1803               	skipnc
  1731     0649  3E01               	addlw	1
  1732     064A  3E00               	addlw	0
  1733     064B  00F4               	movwf	??_free+1
  1734     064C  0873               	movf	??_free,w
  1735     064D  0084               	movwf	4
  1736     064E  1783               	bsf	3,7
  1737     064F  1C74               	btfss	??_free+1,0
  1738     0650  1383               	bcf	3,7
  1739     0651  0180               	clrf	0
  1740     0652  0A84               	incf	4,f
  1741     0653  0180               	clrf	0
  1742     0654  2DE5               	goto	l1408
  1743     0655                     l711:
  1744     0655  0008               	return
  1745     0656                     __end_of_free:
  1746                           
  1747                           	psect	text5
  1748     01A3                     __ptext5:	
  1749 ;; *************** function _calloc *****************
  1750 ;; Defined at:
  1751 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_calloc.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  nmemb           2   24[BANK0 ] unsigned int 
  1754 ;;  size            2   26[BANK0 ] unsigned int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  new_ptr         2   28[BANK0 ] PTR void 
  1757 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2   24[BANK0 ] PTR void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       4       0       0       0
  1768 ;;      Locals:         0       2       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       6       0       0       0
  1771 ;;Total ram usage:        6 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 2
  1774 ;; This function calls:
  1775 ;;		___wmul
  1776 ;;		_malloc
  1777 ;;		_memset
  1778 ;; This function is called by:
  1779 ;;		_Rotate
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783     01A3                     _calloc:	
  1784                           ;psect for function _calloc
  1785                           
  1786     01A3                     l1386:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _calloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1789                           
  1790     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1791     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1792     01A5  0839               	movf	calloc@nmemb+1,w
  1793     01A6  00F2               	movwf	___wmul@multiplier+1
  1794     01A7  0838               	movf	calloc@nmemb,w
  1795     01A8  00F1               	movwf	___wmul@multiplier
  1796     01A9  083B               	movf	calloc@size+1,w
  1797     01AA  00F4               	movwf	___wmul@multiplicand+1
  1798     01AB  083A               	movf	calloc@size,w
  1799     01AC  00F3               	movwf	___wmul@multiplicand
  1800     01AD  120A  118A  213E  120A  118A  	fcall	___wmul
  1801     01B2  0872               	movf	?___wmul+1,w
  1802     01B3  00FA               	movwf	malloc@n+1
  1803     01B4  0871               	movf	?___wmul,w
  1804     01B5  00F9               	movwf	malloc@n
  1805     01B6  120A  118A  23FB  120A  118A  	fcall	_malloc
  1806     01BB  0879               	movf	?_malloc,w
  1807     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1808     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1809     01BE  00BC               	movwf	calloc@new_ptr
  1810     01BF  087A               	movf	?_malloc+1,w
  1811     01C0  00BD               	movwf	calloc@new_ptr+1
  1812     01C1                     l1388:
  1813     01C1  083C               	movf	calloc@new_ptr,w
  1814     01C2  043D               	iorwf	calloc@new_ptr+1,w
  1815     01C3  1903               	btfsc	3,2
  1816     01C4  29C6               	goto	u761
  1817     01C5  29C7               	goto	u760
  1818     01C6                     u761:
  1819     01C6  29E4               	goto	l1392
  1820     01C7                     u760:
  1821     01C7                     l1390:
  1822     01C7  083C               	movf	calloc@new_ptr,w
  1823     01C8  00F7               	movwf	memset@dest
  1824     01C9  083D               	movf	calloc@new_ptr+1,w
  1825     01CA  00F8               	movwf	memset@dest+1
  1826     01CB  3000               	movlw	0
  1827     01CC  00F9               	movwf	memset@c
  1828     01CD  00FA               	movwf	memset@c+1
  1829     01CE  0839               	movf	calloc@nmemb+1,w
  1830     01CF  00F2               	movwf	___wmul@multiplier+1
  1831     01D0  0838               	movf	calloc@nmemb,w
  1832     01D1  00F1               	movwf	___wmul@multiplier
  1833     01D2  083B               	movf	calloc@size+1,w
  1834     01D3  00F4               	movwf	___wmul@multiplicand+1
  1835     01D4  083A               	movf	calloc@size,w
  1836     01D5  00F3               	movwf	___wmul@multiplicand
  1837     01D6  120A  118A  213E  120A  118A  	fcall	___wmul
  1838     01DB  0872               	movf	?___wmul+1,w
  1839     01DC  00FC               	movwf	memset@n+1
  1840     01DD  0871               	movf	?___wmul,w
  1841     01DE  00FB               	movwf	memset@n
  1842     01DF  120A  118A  211D  120A  118A  	fcall	_memset
  1843     01E4                     l1392:
  1844     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1845     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1846     01E6  083C               	movf	calloc@new_ptr,w
  1847     01E7  00B8               	movwf	?_calloc
  1848     01E8  083D               	movf	calloc@new_ptr+1,w
  1849     01E9  00B9               	movwf	?_calloc+1
  1850     01EA                     l688:
  1851     01EA  0008               	return
  1852     01EB                     __end_of_calloc:
  1853                           
  1854                           	psect	text6
  1855     011D                     __ptext6:	
  1856 ;; *************** function _memset *****************
  1857 ;; Defined at:
  1858 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memset.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  dest            2    6[COMMON] PTR void 
  1861 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1862 ;;  c               2    8[COMMON] int 
  1863 ;;  n               2   10[COMMON] unsigned int 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  p               2    0[BANK0 ] PTR unsigned char 
  1866 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2    6[COMMON] PTR void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         6       0       0       0       0
  1877 ;;      Locals:         0       2       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         6       2       0       0       0
  1880 ;;Total ram usage:        8 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_calloc
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889     011D                     _memset:	
  1890                           ;psect for function _memset
  1891                           
  1892     011D                     l1354:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1895                           
  1896     011D  0877               	movf	memset@dest,w
  1897     011E  1283               	bcf	3,5	;RP0=0, select bank0
  1898     011F  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0120  00A0               	movwf	memset@p
  1900     0121  0878               	movf	memset@dest+1,w
  1901     0122  00A1               	movwf	memset@p+1
  1902     0123  292F               	goto	l1360
  1903     0124                     l1356:
  1904     0124  0820               	movf	memset@p,w
  1905     0125  0084               	movwf	4
  1906     0126  1783               	bsf	3,7
  1907     0127  1C21               	btfss	memset@p+1,0
  1908     0128  1383               	bcf	3,7
  1909     0129  0879               	movf	memset@c,w
  1910     012A  0080               	movwf	0
  1911     012B                     l1358:
  1912     012B  3001               	movlw	1
  1913     012C  07A0               	addwf	memset@p,f
  1914     012D  1803               	skipnc
  1915     012E  0AA1               	incf	memset@p+1,f
  1916     012F                     l1360:
  1917     012F  3001               	movlw	1
  1918     0130  02FB               	subwf	memset@n,f
  1919     0131  3000               	movlw	0
  1920     0132  1C03               	skipc
  1921     0133  03FC               	decf	memset@n+1,f
  1922     0134  02FC               	subwf	memset@n+1,f
  1923     0135  0A7B               	incf	memset@n,w
  1924     0136  1D03               	skipz
  1925     0137  293C               	goto	u751
  1926     0138  0A7C               	incf	memset@n+1,w
  1927     0139  1D03               	btfss	3,2
  1928     013A  293C               	goto	u751
  1929     013B  293D               	goto	u750
  1930     013C                     u751:
  1931     013C  2924               	goto	l1356
  1932     013D                     u750:
  1933     013D                     l764:
  1934     013D  0008               	return
  1935     013E                     __end_of_memset:
  1936                           
  1937                           	psect	text7
  1938     03FB                     __ptext7:	
  1939 ;; *************** function _malloc *****************
  1940 ;; Defined at:
  1941 ;;		line 16 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_malloc.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  n               2    8[COMMON] unsigned int 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  sz              2   16[BANK0 ] PTR unsigned int 
  1946 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1947 ;;  new             2   22[BANK0 ] PTR unsigned char 
  1948 ;;		 -> __heap_hi(0), NULL(0), 
  1949 ;;  m               2   14[BANK0 ] unsigned int 
  1950 ;;  p               2   20[BANK0 ] PTR void 
  1951 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  1952 ;;  size            2   18[BANK0 ] unsigned int 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2    8[COMMON] PTR void 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         2       0       0       0       0
  1963 ;;      Locals:         0      10       0       0       0
  1964 ;;      Temps:          2       0       0       0       0
  1965 ;;      Totals:         4      10       0       0       0
  1966 ;;Total ram usage:       14 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 1
  1969 ;; This function calls:
  1970 ;;		___expand_heap
  1971 ;;		___simple_search_fl
  1972 ;; This function is called by:
  1973 ;;		_calloc
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977     03FB                     _malloc:	
  1978                           ;psect for function _malloc
  1979                           
  1980     03FB                     l1302:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _malloc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1983                           
  1984     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1985     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1986     03FD  01B2               	clrf	malloc@size
  1987     03FE  01B3               	clrf	malloc@size+1
  1988     03FF                     l1304:
  1989     03FF  0879               	movf	malloc@n,w
  1990     0400  047A               	iorwf	malloc@n+1,w
  1991     0401  1D03               	btfss	3,2
  1992     0402  2C04               	goto	u681
  1993     0403  2C05               	goto	u680
  1994     0404                     u681:
  1995     0404  2C0B               	goto	l731
  1996     0405                     u680:
  1997     0405                     l1306:
  1998     0405  3001               	movlw	1
  1999     0406  07F9               	addwf	malloc@n,f
  2000     0407  1803               	skipnc
  2001     0408  0AFA               	incf	malloc@n+1,f
  2002     0409  3000               	movlw	0
  2003     040A  07FA               	addwf	malloc@n+1,f
  2004     040B                     l731:
  2005     040B  3000               	movlw	0
  2006     040C  027A               	subwf	malloc@n+1,w
  2007     040D  3002               	movlw	2
  2008     040E  1903               	skipnz
  2009     040F  0279               	subwf	malloc@n,w
  2010     0410  1803               	skipnc
  2011     0411  2C13               	goto	u691
  2012     0412  2C14               	goto	u690
  2013     0413                     u691:
  2014     0413  2C19               	goto	l1310
  2015     0414                     u690:
  2016     0414                     l1308:
  2017     0414  3002               	movlw	2
  2018     0415  00F9               	movwf	malloc@n
  2019     0416  3000               	movlw	0
  2020     0417  00FA               	movwf	malloc@n+1
  2021     0418  2C2F               	goto	l1318
  2022     0419                     l1310:
  2023     0419  087A               	movf	malloc@n+1,w
  2024     041A  00FC               	movwf	??_malloc+1
  2025     041B  0879               	movf	malloc@n,w
  2026     041C  00FB               	movwf	??_malloc
  2027     041D  09FB               	comf	??_malloc,f
  2028     041E  09FC               	comf	??_malloc+1,f
  2029     041F  3000               	movlw	0
  2030     0420  027C               	subwf	??_malloc+1,w
  2031     0421  3002               	movlw	2
  2032     0422  1903               	skipnz
  2033     0423  027B               	subwf	??_malloc,w
  2034     0424  1803               	skipnc
  2035     0425  2C27               	goto	u701
  2036     0426  2C28               	goto	u700
  2037     0427                     u701:
  2038     0427  2C2F               	goto	l1318
  2039     0428                     u700:
  2040     0428                     l1312:
  2041     0428  300C               	movlw	12
  2042     0429  00E5               	movwf	_errno
  2043     042A  3000               	movlw	0
  2044     042B  00E6               	movwf	_errno+1
  2045     042C                     l1314:
  2046     042C  01F9               	clrf	?_malloc
  2047     042D  01FA               	clrf	?_malloc+1
  2048     042E  2CAA               	goto	l735
  2049     042F                     l1318:
  2050     042F                     l1320:
  2051     042F  087A               	movf	malloc@n+1,w
  2052     0430  00F2               	movwf	___simple_search_fl@n+1
  2053     0431  0879               	movf	malloc@n,w
  2054     0432  00F1               	movwf	___simple_search_fl@n
  2055     0433  120A  118A  2656  120A  118A  	fcall	___simple_search_fl
  2056     0438  0871               	movf	?___simple_search_fl,w
  2057     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2058     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2059     043B  00B4               	movwf	malloc@p
  2060     043C  0872               	movf	?___simple_search_fl+1,w
  2061     043D  00B5               	movwf	malloc@p+1
  2062     043E                     l1322:
  2063     043E  0834               	movf	malloc@p,w
  2064     043F  0435               	iorwf	malloc@p+1,w
  2065     0440  1D03               	btfss	3,2
  2066     0441  2C43               	goto	u711
  2067     0442  2C44               	goto	u710
  2068     0443                     u711:
  2069     0443  2CA6               	goto	l1350
  2070     0444                     u710:
  2071     0444                     l1324:
  2072     0444  0863               	movf	malloc@cur,w
  2073     0445  0261               	subwf	malloc@end,w
  2074     0446  00FB               	movwf	??_malloc
  2075     0447  0864               	movf	malloc@cur+1,w
  2076     0448  1C03               	skipc
  2077     0449  0A64               	incf	malloc@cur+1,w
  2078     044A  0262               	subwf	malloc@end+1,w
  2079     044B  00FC               	movwf	??_malloc+1
  2080     044C  087A               	movf	malloc@n+1,w
  2081     044D  027C               	subwf	??_malloc+1,w
  2082     044E  1D03               	skipz
  2083     044F  2C52               	goto	u725
  2084     0450  0879               	movf	malloc@n,w
  2085     0451  027B               	subwf	??_malloc,w
  2086     0452                     u725:
  2087     0452  1803               	skipnc
  2088     0453  2C55               	goto	u721
  2089     0454  2C56               	goto	u720
  2090     0455                     u721:
  2091     0455  2C87               	goto	l737
  2092     0456                     u720:
  2093     0456                     l1326:
  2094     0456  0879               	movf	malloc@n,w
  2095     0457  3E02               	addlw	2
  2096     0458  00AE               	movwf	malloc@m
  2097     0459  087A               	movf	malloc@n+1,w
  2098     045A  1803               	skipnc
  2099     045B  3E01               	addlw	1
  2100     045C  3E00               	addlw	0
  2101     045D  00AF               	movwf	malloc@m+1
  2102     045E                     l1328:
  2103     045E  302E               	movlw	(low (malloc@m| 0))& (0+255)
  2104     045F  00F1               	movwf	___expand_heap@pn
  2105     0460  120A  118A  21EB  120A  118A  	fcall	___expand_heap
  2106     0465  0871               	movf	?___expand_heap,w
  2107     0466  1283               	bcf	3,5	;RP0=0, select bank0
  2108     0467  1303               	bcf	3,6	;RP1=0, select bank0
  2109     0468  00B6               	movwf	malloc@new
  2110     0469  0872               	movf	?___expand_heap+1,w
  2111     046A  00B7               	movwf	malloc@new+1
  2112     046B                     l1330:
  2113     046B  0836               	movf	malloc@new,w
  2114     046C  0437               	iorwf	malloc@new+1,w
  2115     046D  1D03               	btfss	3,2
  2116     046E  2C70               	goto	u731
  2117     046F  2C71               	goto	u730
  2118     0470                     u731:
  2119     0470  2C72               	goto	l1336
  2120     0471                     u730:
  2121     0471  2C2C               	goto	l1314
  2122     0472                     l1336:
  2123     0472  0862               	movf	malloc@end+1,w
  2124     0473  0637               	xorwf	malloc@new+1,w
  2125     0474  1D03               	skipz
  2126     0475  2C78               	goto	u745
  2127     0476  0861               	movf	malloc@end,w
  2128     0477  0636               	xorwf	malloc@new,w
  2129     0478                     u745:
  2130     0478  1903               	skipnz
  2131     0479  2C7B               	goto	u741
  2132     047A  2C7C               	goto	u740
  2133     047B                     u741:
  2134     047B  2C80               	goto	l739
  2135     047C                     u740:
  2136     047C                     l1338:
  2137     047C  0836               	movf	malloc@new,w
  2138     047D  00E3               	movwf	malloc@cur
  2139     047E  0837               	movf	malloc@new+1,w
  2140     047F  00E4               	movwf	malloc@cur+1
  2141     0480                     l739:
  2142     0480  082E               	movf	malloc@m,w
  2143     0481  0736               	addwf	malloc@new,w
  2144     0482  00E1               	movwf	malloc@end
  2145     0483  0837               	movf	malloc@new+1,w
  2146     0484  1803               	skipnc
  2147     0485  3E01               	addlw	1
  2148     0486  00E2               	movwf	malloc@end+1
  2149     0487                     l737:
  2150     0487  0863               	movf	malloc@cur,w
  2151     0488  00B4               	movwf	malloc@p
  2152     0489  0864               	movf	malloc@cur+1,w
  2153     048A  00B5               	movwf	malloc@p+1
  2154     048B                     l1340:
  2155     048B  0834               	movf	malloc@p,w
  2156     048C  00B0               	movwf	malloc@sz
  2157     048D  0835               	movf	malloc@p+1,w
  2158     048E  00B1               	movwf	malloc@sz+1
  2159     048F                     l1342:
  2160     048F  0830               	movf	malloc@sz,w
  2161     0490  0084               	movwf	4
  2162     0491  1783               	bsf	3,7
  2163     0492  1C31               	btfss	malloc@sz+1,0
  2164     0493  1383               	bcf	3,7
  2165     0494  0879               	movf	malloc@n,w
  2166     0495  0080               	movwf	0
  2167     0496  0A84               	incf	4,f
  2168     0497  087A               	movf	malloc@n+1,w
  2169     0498  0080               	movwf	0
  2170     0499                     l1344:
  2171     0499  3002               	movlw	2
  2172     049A  07B0               	addwf	malloc@sz,f
  2173     049B  1803               	skipnc
  2174     049C  0AB1               	incf	malloc@sz+1,f
  2175     049D                     l1346:
  2176     049D  0830               	movf	malloc@sz,w
  2177     049E  00B4               	movwf	malloc@p
  2178     049F  0831               	movf	malloc@sz+1,w
  2179     04A0  00B5               	movwf	malloc@p+1
  2180     04A1                     l1348:
  2181     04A1  0879               	movf	malloc@n,w
  2182     04A2  3E02               	addlw	2
  2183     04A3  07E3               	addwf	malloc@cur,f
  2184     04A4  1803               	skipnc
  2185     04A5  0AE4               	incf	malloc@cur+1,f
  2186     04A6                     l1350:
  2187     04A6  0834               	movf	malloc@p,w
  2188     04A7  00F9               	movwf	?_malloc
  2189     04A8  0835               	movf	malloc@p+1,w
  2190     04A9  00FA               	movwf	?_malloc+1
  2191     04AA                     l735:
  2192     04AA  0008               	return
  2193     04AB                     __end_of_malloc:
  2194                           
  2195                           	psect	text8
  2196     0656                     __ptext8:	
  2197 ;; *************** function ___simple_search_fl *****************
  2198 ;; Defined at:
  2199 ;;		line 19 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lite_free.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  n               2    0[COMMON] unsigned int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  split           2    4[BANK0 ] PTR struct chunk
  2204 ;;		 -> __heap_hi$.$next(2), NULL(0), 
  2205 ;;  remaining_si    2    0[BANK0 ] unsigned int 
  2206 ;;  next            2    8[BANK0 ] PTR struct chunk
  2207 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2208 ;;  best            2   12[BANK0 ] PTR struct chunk
  2209 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2210 ;;  c               2   10[BANK0 ] PTR struct chunk
  2211 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2212 ;;  last            2    6[BANK0 ] PTR struct chunk
  2213 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2214 ;;  best_last       2    2[BANK0 ] PTR struct chunk
  2215 ;;		 -> __heap_hi$.$next(2), __heap_hi(0), NULL(0), 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    0[COMMON] PTR void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         2       0       0       0       0
  2226 ;;      Locals:         0      14       0       0       0
  2227 ;;      Temps:          6       0       0       0       0
  2228 ;;      Totals:         8      14       0       0       0
  2229 ;;Total ram usage:       22 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_malloc
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238     0656                     ___simple_search_fl:	
  2239                           ;psect for function ___simple_search_fl
  2240                           
  2241     0656                     l1176:	
  2242                           ;incstack = 0
  2243                           ; Regs used in ___simple_search_fl: [wreg-fsr0h+status,2+status,0]
  2244                           
  2245     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2246     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2247     0658  01AC               	clrf	___simple_search_fl@best
  2248     0659  01AD               	clrf	___simple_search_fl@best+1
  2249     065A  01A2               	clrf	___simple_search_fl@best_last
  2250     065B  01A3               	clrf	___simple_search_fl@best_last+1
  2251     065C  01A6               	clrf	___simple_search_fl@last
  2252     065D  01A7               	clrf	___simple_search_fl@last+1
  2253     065E                     l1178:
  2254     065E  0867               	movf	___freelist,w
  2255     065F  0468               	iorwf	___freelist+1,w
  2256     0660  1D03               	btfss	3,2
  2257     0661  2E63               	goto	u471
  2258     0662  2E64               	goto	u470
  2259     0663                     u471:
  2260     0663  2E67               	goto	l1184
  2261     0664                     u470:
  2262     0664                     l1180:
  2263     0664  01F1               	clrf	?___simple_search_fl
  2264     0665  01F2               	clrf	?___simple_search_fl+1
  2265     0666  2FDB               	goto	l694
  2266     0667                     l1184:
  2267     0667  0867               	movf	___freelist,w
  2268     0668  00AA               	movwf	___simple_search_fl@c
  2269     0669  0868               	movf	___freelist+1,w
  2270     066A  00AB               	movwf	___simple_search_fl@c+1
  2271     066B  2F20               	goto	l1210
  2272     066C                     l1186:
  2273     066C  082A               	movf	___simple_search_fl@c,w
  2274     066D  0084               	movwf	4
  2275     066E  1783               	bsf	3,7
  2276     066F  1C2B               	btfss	___simple_search_fl@c+1,0
  2277     0670  1383               	bcf	3,7
  2278     0671  0800               	movf	0,w
  2279     0672  00F3               	movwf	??___simple_search_fl
  2280     0673  0A84               	incf	4,f
  2281     0674  0800               	movf	0,w
  2282     0675  00F4               	movwf	??___simple_search_fl+1
  2283     0676  0872               	movf	___simple_search_fl@n+1,w
  2284     0677  0674               	xorwf	??___simple_search_fl+1,w
  2285     0678  1D03               	skipz
  2286     0679  2E7C               	goto	u485
  2287     067A  0871               	movf	___simple_search_fl@n,w
  2288     067B  0673               	xorwf	??___simple_search_fl,w
  2289     067C                     u485:
  2290     067C  1D03               	skipz
  2291     067D  2E7F               	goto	u481
  2292     067E  2E80               	goto	u480
  2293     067F                     u481:
  2294     067F  2EC8               	goto	l1198
  2295     0680                     u480:
  2296     0680                     l1188:
  2297     0680  0826               	movf	___simple_search_fl@last,w
  2298     0681  0427               	iorwf	___simple_search_fl@last+1,w
  2299     0682  1903               	btfsc	3,2
  2300     0683  2E85               	goto	u491
  2301     0684  2E86               	goto	u490
  2302     0685                     u491:
  2303     0685  2EAC               	goto	l1192
  2304     0686                     u490:
  2305     0686                     l1190:
  2306     0686  082A               	movf	___simple_search_fl@c,w
  2307     0687  3E02               	addlw	2
  2308     0688  00F3               	movwf	??___simple_search_fl
  2309     0689  082B               	movf	___simple_search_fl@c+1,w
  2310     068A  1803               	skipnc
  2311     068B  3E01               	addlw	1
  2312     068C  3E00               	addlw	0
  2313     068D  00F4               	movwf	??___simple_search_fl+1
  2314     068E  0873               	movf	??___simple_search_fl,w
  2315     068F  0084               	movwf	4
  2316     0690  1783               	bsf	3,7
  2317     0691  1C74               	btfss	??___simple_search_fl+1,0
  2318     0692  1383               	bcf	3,7
  2319     0693  0800               	movf	0,w
  2320     0694  00F5               	movwf	??___simple_search_fl+2
  2321     0695  0A84               	incf	4,f
  2322     0696  0800               	movf	0,w
  2323     0697  00F6               	movwf	??___simple_search_fl+3
  2324     0698  0826               	movf	___simple_search_fl@last,w
  2325     0699  3E02               	addlw	2
  2326     069A  00F7               	movwf	??___simple_search_fl+4
  2327     069B  0827               	movf	___simple_search_fl@last+1,w
  2328     069C  1803               	skipnc
  2329     069D  3E01               	addlw	1
  2330     069E  3E00               	addlw	0
  2331     069F  00F8               	movwf	??___simple_search_fl+5
  2332     06A0  0877               	movf	??___simple_search_fl+4,w
  2333     06A1  0084               	movwf	4
  2334     06A2  1783               	bsf	3,7
  2335     06A3  1C78               	btfss	??___simple_search_fl+5,0
  2336     06A4  1383               	bcf	3,7
  2337     06A5  0875               	movf	??___simple_search_fl+2,w
  2338     06A6  0080               	movwf	0
  2339     06A7  0876               	movf	??___simple_search_fl+3,w
  2340     06A8  0A84               	incf	4,f
  2341     06A9  0080               	movwf	0
  2342     06AA  0384               	decf	4,f
  2343     06AB  2EBF               	goto	l1194
  2344     06AC                     l1192:
  2345     06AC  082A               	movf	___simple_search_fl@c,w
  2346     06AD  3E02               	addlw	2
  2347     06AE  00F3               	movwf	??___simple_search_fl
  2348     06AF  082B               	movf	___simple_search_fl@c+1,w
  2349     06B0  1803               	skipnc
  2350     06B1  3E01               	addlw	1
  2351     06B2  3E00               	addlw	0
  2352     06B3  00F4               	movwf	??___simple_search_fl+1
  2353     06B4  0873               	movf	??___simple_search_fl,w
  2354     06B5  0084               	movwf	4
  2355     06B6  1783               	bsf	3,7
  2356     06B7  1C74               	btfss	??___simple_search_fl+1,0
  2357     06B8  1383               	bcf	3,7
  2358     06B9  0800               	movf	0,w
  2359     06BA  00E7               	movwf	___freelist
  2360     06BB  0A84               	incf	4,f
  2361     06BC  0800               	movf	0,w
  2362     06BD  0384               	decf	4,f
  2363     06BE  00E8               	movwf	___freelist+1
  2364     06BF                     l1194:
  2365     06BF  082A               	movf	___simple_search_fl@c,w
  2366     06C0  3E02               	addlw	2
  2367     06C1  00F1               	movwf	?___simple_search_fl
  2368     06C2  082B               	movf	___simple_search_fl@c+1,w
  2369     06C3  1803               	skipnc
  2370     06C4  3E01               	addlw	1
  2371     06C5  3E00               	addlw	0
  2372     06C6  00F2               	movwf	?___simple_search_fl+1
  2373     06C7  2FDB               	goto	l694
  2374     06C8                     l1198:
  2375     06C8  082A               	movf	___simple_search_fl@c,w
  2376     06C9  0084               	movwf	4
  2377     06CA  1783               	bsf	3,7
  2378     06CB  1C2B               	btfss	___simple_search_fl@c+1,0
  2379     06CC  1383               	bcf	3,7
  2380     06CD  0800               	movf	0,w
  2381     06CE  00F3               	movwf	??___simple_search_fl
  2382     06CF  0A84               	incf	4,f
  2383     06D0  0800               	movf	0,w
  2384     06D1  00F4               	movwf	??___simple_search_fl+1
  2385     06D2  0874               	movf	??___simple_search_fl+1,w
  2386     06D3  0272               	subwf	___simple_search_fl@n+1,w
  2387     06D4  1D03               	skipz
  2388     06D5  2ED8               	goto	u505
  2389     06D6  0873               	movf	??___simple_search_fl,w
  2390     06D7  0271               	subwf	___simple_search_fl@n,w
  2391     06D8                     u505:
  2392     06D8  1803               	skipnc
  2393     06D9  2EDB               	goto	u501
  2394     06DA  2EDC               	goto	u500
  2395     06DB                     u501:
  2396     06DB  2F09               	goto	l702
  2397     06DC                     u500:
  2398     06DC                     l1200:
  2399     06DC  082C               	movf	___simple_search_fl@best,w
  2400     06DD  042D               	iorwf	___simple_search_fl@best+1,w
  2401     06DE  1903               	btfsc	3,2
  2402     06DF  2EE1               	goto	u511
  2403     06E0  2EE2               	goto	u510
  2404     06E1                     u511:
  2405     06E1  2F01               	goto	l1206
  2406     06E2                     u510:
  2407     06E2                     l1202:
  2408     06E2  082C               	movf	___simple_search_fl@best,w
  2409     06E3  0084               	movwf	4
  2410     06E4  1783               	bsf	3,7
  2411     06E5  1C2D               	btfss	___simple_search_fl@best+1,0
  2412     06E6  1383               	bcf	3,7
  2413     06E7  0800               	movf	0,w
  2414     06E8  00F3               	movwf	??___simple_search_fl
  2415     06E9  0A84               	incf	4,f
  2416     06EA  0800               	movf	0,w
  2417     06EB  00F4               	movwf	??___simple_search_fl+1
  2418     06EC  082A               	movf	___simple_search_fl@c,w
  2419     06ED  0084               	movwf	4
  2420     06EE  1783               	bsf	3,7
  2421     06EF  1C2B               	btfss	___simple_search_fl@c+1,0
  2422     06F0  1383               	bcf	3,7
  2423     06F1  0800               	movf	0,w
  2424     06F2  00F5               	movwf	??___simple_search_fl+2
  2425     06F3  0A84               	incf	4,f
  2426     06F4  0800               	movf	0,w
  2427     06F5  00F6               	movwf	??___simple_search_fl+3
  2428     06F6  0874               	movf	??___simple_search_fl+1,w
  2429     06F7  0276               	subwf	??___simple_search_fl+3,w
  2430     06F8  1D03               	skipz
  2431     06F9  2EFC               	goto	u525
  2432     06FA  0873               	movf	??___simple_search_fl,w
  2433     06FB  0275               	subwf	??___simple_search_fl+2,w
  2434     06FC                     u525:
  2435     06FC  1C03               	skipc
  2436     06FD  2EFF               	goto	u521
  2437     06FE  2F00               	goto	u520
  2438     06FF                     u521:
  2439     06FF  2F01               	goto	l1206
  2440     0700                     u520:
  2441     0700  2F09               	goto	l702
  2442     0701                     l1206:
  2443     0701  082A               	movf	___simple_search_fl@c,w
  2444     0702  00AC               	movwf	___simple_search_fl@best
  2445     0703  082B               	movf	___simple_search_fl@c+1,w
  2446     0704  00AD               	movwf	___simple_search_fl@best+1
  2447     0705  0826               	movf	___simple_search_fl@last,w
  2448     0706  00A2               	movwf	___simple_search_fl@best_last
  2449     0707  0827               	movf	___simple_search_fl@last+1,w
  2450     0708  00A3               	movwf	___simple_search_fl@best_last+1
  2451     0709                     l702:
  2452     0709  082A               	movf	___simple_search_fl@c,w
  2453     070A  00A6               	movwf	___simple_search_fl@last
  2454     070B  082B               	movf	___simple_search_fl@c+1,w
  2455     070C  00A7               	movwf	___simple_search_fl@last+1
  2456     070D                     l1208:
  2457     070D  082A               	movf	___simple_search_fl@c,w
  2458     070E  3E02               	addlw	2
  2459     070F  00F3               	movwf	??___simple_search_fl
  2460     0710  082B               	movf	___simple_search_fl@c+1,w
  2461     0711  1803               	skipnc
  2462     0712  3E01               	addlw	1
  2463     0713  3E00               	addlw	0
  2464     0714  00F4               	movwf	??___simple_search_fl+1
  2465     0715  0873               	movf	??___simple_search_fl,w
  2466     0716  0084               	movwf	4
  2467     0717  1783               	bsf	3,7
  2468     0718  1C74               	btfss	??___simple_search_fl+1,0
  2469     0719  1383               	bcf	3,7
  2470     071A  0800               	movf	0,w
  2471     071B  00AA               	movwf	___simple_search_fl@c
  2472     071C  0A84               	incf	4,f
  2473     071D  0800               	movf	0,w
  2474     071E  0384               	decf	4,f
  2475     071F  00AB               	movwf	___simple_search_fl@c+1
  2476     0720                     l1210:
  2477     0720  082A               	movf	___simple_search_fl@c,w
  2478     0721  042B               	iorwf	___simple_search_fl@c+1,w
  2479     0722  1D03               	btfss	3,2
  2480     0723  2F25               	goto	u531
  2481     0724  2F26               	goto	u530
  2482     0725                     u531:
  2483     0725  2E6C               	goto	l1186
  2484     0726                     u530:
  2485     0726                     l1212:
  2486     0726  082C               	movf	___simple_search_fl@best,w
  2487     0727  042D               	iorwf	___simple_search_fl@best+1,w
  2488     0728  1903               	btfsc	3,2
  2489     0729  2F2B               	goto	u541
  2490     072A  2F2C               	goto	u540
  2491     072B                     u541:
  2492     072B  2E64               	goto	l1180
  2493     072C                     u540:
  2494     072C                     l1214:
  2495     072C  082C               	movf	___simple_search_fl@best,w
  2496     072D  3E02               	addlw	2
  2497     072E  00F3               	movwf	??___simple_search_fl
  2498     072F  082D               	movf	___simple_search_fl@best+1,w
  2499     0730  1803               	skipnc
  2500     0731  3E01               	addlw	1
  2501     0732  3E00               	addlw	0
  2502     0733  00F4               	movwf	??___simple_search_fl+1
  2503     0734  0873               	movf	??___simple_search_fl,w
  2504     0735  0084               	movwf	4
  2505     0736  1783               	bsf	3,7
  2506     0737  1C74               	btfss	??___simple_search_fl+1,0
  2507     0738  1383               	bcf	3,7
  2508     0739  0800               	movf	0,w
  2509     073A  00A8               	movwf	___simple_search_fl@next
  2510     073B  0A84               	incf	4,f
  2511     073C  0800               	movf	0,w
  2512     073D  0384               	decf	4,f
  2513     073E  00A9               	movwf	___simple_search_fl@next+1
  2514     073F  082C               	movf	___simple_search_fl@best,w
  2515     0740  0084               	movwf	4
  2516     0741  1783               	bsf	3,7
  2517     0742  1C2D               	btfss	___simple_search_fl@best+1,0
  2518     0743  1383               	bcf	3,7
  2519     0744  0800               	movf	0,w
  2520     0745  00F3               	movwf	??___simple_search_fl
  2521     0746  0A84               	incf	4,f
  2522     0747  0800               	movf	0,w
  2523     0748  00F4               	movwf	??___simple_search_fl+1
  2524     0749  0871               	movf	___simple_search_fl@n,w
  2525     074A  0273               	subwf	??___simple_search_fl,w
  2526     074B  00F5               	movwf	??___simple_search_fl+2
  2527     074C  0872               	movf	___simple_search_fl@n+1,w
  2528     074D  1C03               	skipc
  2529     074E  0A72               	incf	___simple_search_fl@n+1,w
  2530     074F  0274               	subwf	??___simple_search_fl+1,w
  2531     0750  00F6               	movwf	??___simple_search_fl+3
  2532     0751  3000               	movlw	0
  2533     0752  0276               	subwf	??___simple_search_fl+3,w
  2534     0753  3005               	movlw	5
  2535     0754  1903               	skipnz
  2536     0755  0275               	subwf	??___simple_search_fl+2,w
  2537     0756  1C03               	skipc
  2538     0757  2F59               	goto	u551
  2539     0758  2F5A               	goto	u550
  2540     0759                     u551:
  2541     0759  2FB2               	goto	l705
  2542     075A                     u550:
  2543     075A                     l1216:
  2544     075A  082C               	movf	___simple_search_fl@best,w
  2545     075B  0084               	movwf	4
  2546     075C  1783               	bsf	3,7
  2547     075D  1C2D               	btfss	___simple_search_fl@best+1,0
  2548     075E  1383               	bcf	3,7
  2549     075F  0800               	movf	0,w
  2550     0760  00F3               	movwf	??___simple_search_fl
  2551     0761  0A84               	incf	4,f
  2552     0762  0800               	movf	0,w
  2553     0763  00F4               	movwf	??___simple_search_fl+1
  2554     0764  0871               	movf	___simple_search_fl@n,w
  2555     0765  0273               	subwf	??___simple_search_fl,w
  2556     0766  00F5               	movwf	??___simple_search_fl+2
  2557     0767  0872               	movf	___simple_search_fl@n+1,w
  2558     0768  1C03               	skipc
  2559     0769  0A72               	incf	___simple_search_fl@n+1,w
  2560     076A  0274               	subwf	??___simple_search_fl+1,w
  2561     076B  00F6               	movwf	??___simple_search_fl+3
  2562     076C  0875               	movf	??___simple_search_fl+2,w
  2563     076D  3EFE               	addlw	254
  2564     076E  00A0               	movwf	___simple_search_fl@remaining_size
  2565     076F  0876               	movf	??___simple_search_fl+3,w
  2566     0770  1803               	skipnc
  2567     0771  3E01               	addlw	1
  2568     0772  3EFF               	addlw	255
  2569     0773  00A1               	movwf	___simple_search_fl@remaining_size+1
  2570     0774                     l1218:
  2571     0774  082C               	movf	___simple_search_fl@best,w
  2572     0775  0084               	movwf	4
  2573     0776  1783               	bsf	3,7
  2574     0777  1C2D               	btfss	___simple_search_fl@best+1,0
  2575     0778  1383               	bcf	3,7
  2576     0779  0871               	movf	___simple_search_fl@n,w
  2577     077A  0080               	movwf	0
  2578     077B  0A84               	incf	4,f
  2579     077C  0872               	movf	___simple_search_fl@n+1,w
  2580     077D  0080               	movwf	0
  2581     077E                     l1220:
  2582     077E  082C               	movf	___simple_search_fl@best,w
  2583     077F  0084               	movwf	4
  2584     0780  1783               	bsf	3,7
  2585     0781  1C2D               	btfss	___simple_search_fl@best+1,0
  2586     0782  1383               	bcf	3,7
  2587     0783  0800               	movf	0,w
  2588     0784  072C               	addwf	___simple_search_fl@best,w
  2589     0785  00F3               	movwf	??___simple_search_fl
  2590     0786  082D               	movf	___simple_search_fl@best+1,w
  2591     0787  1803               	skipnc
  2592     0788  3E01               	addlw	1
  2593     0789  00F4               	movwf	??___simple_search_fl+1
  2594     078A  0873               	movf	??___simple_search_fl,w
  2595     078B  3E02               	addlw	2
  2596     078C  00A4               	movwf	___simple_search_fl@split
  2597     078D  0874               	movf	??___simple_search_fl+1,w
  2598     078E  1803               	skipnc
  2599     078F  3E01               	addlw	1
  2600     0790  3E00               	addlw	0
  2601     0791  00A5               	movwf	___simple_search_fl@split+1
  2602     0792  0824               	movf	___simple_search_fl@split,w
  2603     0793  0084               	movwf	4
  2604     0794  1783               	bsf	3,7
  2605     0795  1C25               	btfss	___simple_search_fl@split+1,0
  2606     0796  1383               	bcf	3,7
  2607     0797  0820               	movf	___simple_search_fl@remaining_size,w
  2608     0798  0080               	movwf	0
  2609     0799  0A84               	incf	4,f
  2610     079A  0821               	movf	___simple_search_fl@remaining_size+1,w
  2611     079B  0080               	movwf	0
  2612     079C                     l1222:
  2613     079C  0824               	movf	___simple_search_fl@split,w
  2614     079D  3E02               	addlw	2
  2615     079E  00F3               	movwf	??___simple_search_fl
  2616     079F  0825               	movf	___simple_search_fl@split+1,w
  2617     07A0  1803               	skipnc
  2618     07A1  3E01               	addlw	1
  2619     07A2  3E00               	addlw	0
  2620     07A3  00F4               	movwf	??___simple_search_fl+1
  2621     07A4  0873               	movf	??___simple_search_fl,w
  2622     07A5  0084               	movwf	4
  2623     07A6  1783               	bsf	3,7
  2624     07A7  1C74               	btfss	??___simple_search_fl+1,0
  2625     07A8  1383               	bcf	3,7
  2626     07A9  0828               	movf	___simple_search_fl@next,w
  2627     07AA  0080               	movwf	0
  2628     07AB  0A84               	incf	4,f
  2629     07AC  0829               	movf	___simple_search_fl@next+1,w
  2630     07AD  0080               	movwf	0
  2631     07AE                     l1224:
  2632     07AE  0824               	movf	___simple_search_fl@split,w
  2633     07AF  00A8               	movwf	___simple_search_fl@next
  2634     07B0  0825               	movf	___simple_search_fl@split+1,w
  2635     07B1  00A9               	movwf	___simple_search_fl@next+1
  2636     07B2                     l705:
  2637     07B2  082D               	movf	___simple_search_fl@best+1,w
  2638     07B3  0668               	xorwf	___freelist+1,w
  2639     07B4  1D03               	skipz
  2640     07B5  2FB8               	goto	u565
  2641     07B6  082C               	movf	___simple_search_fl@best,w
  2642     07B7  0667               	xorwf	___freelist,w
  2643     07B8                     u565:
  2644     07B8  1D03               	skipz
  2645     07B9  2FBB               	goto	u561
  2646     07BA  2FBC               	goto	u560
  2647     07BB                     u561:
  2648     07BB  2FC1               	goto	l1228
  2649     07BC                     u560:
  2650     07BC                     l1226:
  2651     07BC  0828               	movf	___simple_search_fl@next,w
  2652     07BD  00E7               	movwf	___freelist
  2653     07BE  0829               	movf	___simple_search_fl@next+1,w
  2654     07BF  00E8               	movwf	___freelist+1
  2655     07C0  2FD3               	goto	l1230
  2656     07C1                     l1228:
  2657     07C1  0822               	movf	___simple_search_fl@best_last,w
  2658     07C2  3E02               	addlw	2
  2659     07C3  00F3               	movwf	??___simple_search_fl
  2660     07C4  0823               	movf	___simple_search_fl@best_last+1,w
  2661     07C5  1803               	skipnc
  2662     07C6  3E01               	addlw	1
  2663     07C7  3E00               	addlw	0
  2664     07C8  00F4               	movwf	??___simple_search_fl+1
  2665     07C9  0873               	movf	??___simple_search_fl,w
  2666     07CA  0084               	movwf	4
  2667     07CB  1783               	bsf	3,7
  2668     07CC  1C74               	btfss	??___simple_search_fl+1,0
  2669     07CD  1383               	bcf	3,7
  2670     07CE  0828               	movf	___simple_search_fl@next,w
  2671     07CF  0080               	movwf	0
  2672     07D0  0A84               	incf	4,f
  2673     07D1  0829               	movf	___simple_search_fl@next+1,w
  2674     07D2  0080               	movwf	0
  2675     07D3                     l1230:
  2676     07D3  082C               	movf	___simple_search_fl@best,w
  2677     07D4  3E02               	addlw	2
  2678     07D5  00F1               	movwf	?___simple_search_fl
  2679     07D6  082D               	movf	___simple_search_fl@best+1,w
  2680     07D7  1803               	skipnc
  2681     07D8  3E01               	addlw	1
  2682     07D9  3E00               	addlw	0
  2683     07DA  00F2               	movwf	?___simple_search_fl+1
  2684     07DB                     l694:
  2685     07DB  0008               	return
  2686     07DC                     __end_of___simple_search_fl:
  2687                           
  2688                           	psect	text9
  2689     01EB                     __ptext9:	
  2690 ;; *************** function ___expand_heap *****************
  2691 ;; Defined at:
  2692 ;;		line 14 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/expand_heap.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  pn              1    0[COMMON] PTR unsigned int 
  2695 ;;		 -> malloc@m(2), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  new_brkp        2    3[COMMON] PTR unsigned char 
  2698 ;;		 -> __heap_hi(0), NULL(0), 
  2699 ;;  n               2    1[COMMON] unsigned int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2    0[COMMON] PTR void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         1       0       0       0       0
  2710 ;;      Locals:         4       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         5       0       0       0       0
  2713 ;;Total ram usage:        5 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_malloc
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722     01EB                     ___expand_heap:	
  2723                           ;psect for function ___expand_heap
  2724                           
  2725     01EB                     l1238:	
  2726                           ;incstack = 0
  2727                           ; Regs used in ___expand_heap: [wreg-fsr0h+status,2+status,0]
  2728                           
  2729     01EB  0871               	movf	___expand_heap@pn,w
  2730     01EC  0084               	movwf	4
  2731     01ED  1383               	bcf	3,7	;select IRP bank0
  2732     01EE  0800               	movf	0,w
  2733     01EF  00F2               	movwf	___expand_heap@n
  2734     01F0  0A84               	incf	4,f
  2735     01F1  0800               	movf	0,w
  2736     01F2  00F3               	movwf	___expand_heap@n+1
  2737     01F3                     l1240:
  2738     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2739     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2740     01F5  085F               	movf	_brkp,w
  2741     01F6  0460               	iorwf	_brkp+1,w
  2742     01F7  1D03               	btfss	3,2
  2743     01F8  29FA               	goto	u571
  2744     01F9  29FB               	goto	u570
  2745     01FA                     u571:
  2746     01FA  29FF               	goto	l753
  2747     01FB                     u570:
  2748     01FB                     l1242:
  2749     01FB  3070               	movlw	low ___heap_hi
  2750     01FC  00DF               	movwf	_brkp
  2751     01FD  3001               	movlw	high ___heap_hi
  2752     01FE  00E0               	movwf	_brkp+1
  2753     01FF                     l753:
  2754     01FF  3000               	movlw	0
  2755     0200  0273               	subwf	___expand_heap@n+1,w
  2756     0201  3004               	movlw	4
  2757     0202  1903               	skipnz
  2758     0203  0272               	subwf	___expand_heap@n,w
  2759     0204  1803               	skipnc
  2760     0205  2A07               	goto	u581
  2761     0206  2A08               	goto	u580
  2762     0207                     u581:
  2763     0207  2A0C               	goto	l1246
  2764     0208                     u580:
  2765     0208                     l1244:
  2766     0208  3004               	movlw	4
  2767     0209  00F2               	movwf	___expand_heap@n
  2768     020A  3000               	movlw	0
  2769     020B  00F3               	movwf	___expand_heap@n+1
  2770     020C                     l1246:
  2771     020C  0872               	movf	___expand_heap@n,w
  2772     020D  025F               	subwf	_brkp,w
  2773     020E  00F4               	movwf	___expand_heap@new_brkp
  2774     020F  0860               	movf	_brkp+1,w
  2775     0210  1C03               	skipc
  2776     0211  0360               	decf	_brkp+1,w
  2777     0212  00F5               	movwf	___expand_heap@new_brkp+1
  2778     0213                     l1248:
  2779     0213  3001               	movlw	high ___heap_lo
  2780     0214  0275               	subwf	___expand_heap@new_brkp+1,w
  2781     0215  3010               	movlw	low ___heap_lo
  2782     0216  1903               	skipnz
  2783     0217  0274               	subwf	___expand_heap@new_brkp,w
  2784     0218  1C03               	skipc
  2785     0219  2A1B               	goto	u591
  2786     021A  2A1C               	goto	u590
  2787     021B                     u591:
  2788     021B  2A26               	goto	l1252
  2789     021C                     u590:
  2790     021C                     l1250:
  2791     021C  0860               	movf	_brkp+1,w
  2792     021D  0275               	subwf	___expand_heap@new_brkp+1,w
  2793     021E  1D03               	skipz
  2794     021F  2A22               	goto	u605
  2795     0220  085F               	movf	_brkp,w
  2796     0221  0274               	subwf	___expand_heap@new_brkp,w
  2797     0222                     u605:
  2798     0222  1C03               	skipc
  2799     0223  2A25               	goto	u601
  2800     0224  2A26               	goto	u600
  2801     0225                     u601:
  2802     0225  2A2D               	goto	l1258
  2803     0226                     u600:
  2804     0226                     l1252:
  2805     0226  300C               	movlw	12
  2806     0227  00E5               	movwf	_errno
  2807     0228  3000               	movlw	0
  2808     0229  00E6               	movwf	_errno+1
  2809     022A                     l1254:
  2810     022A  01F1               	clrf	?___expand_heap
  2811     022B  01F2               	clrf	?___expand_heap+1
  2812     022C  2A35               	goto	l758
  2813     022D                     l1258:
  2814     022D  0874               	movf	___expand_heap@new_brkp,w
  2815     022E  00DF               	movwf	_brkp
  2816     022F  0875               	movf	___expand_heap@new_brkp+1,w
  2817     0230  00E0               	movwf	_brkp+1
  2818     0231  085F               	movf	_brkp,w
  2819     0232  00F1               	movwf	?___expand_heap
  2820     0233  0860               	movf	_brkp+1,w
  2821     0234  00F2               	movwf	?___expand_heap+1
  2822     0235                     l758:
  2823     0235  0008               	return
  2824     0236                     __end_of___expand_heap:
  2825                           
  2826                           	psect	text10
  2827     013E                     __ptext10:	
  2828 ;; *************** function ___wmul *****************
  2829 ;; Defined at:
  2830 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  multiplier      2    0[COMMON] unsigned int 
  2833 ;;  multiplicand    2    2[COMMON] unsigned int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  product         2    4[COMMON] unsigned int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2    0[COMMON] unsigned int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         4       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0
  2848 ;;      Totals:         6       0       0       0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_calloc
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858     013E                     ___wmul:	
  2859                           ;psect for function ___wmul
  2860                           
  2861     013E                     l1288:	
  2862                           ;incstack = 0
  2863                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2864                           
  2865     013E  01F5               	clrf	___wmul@product
  2866     013F  01F6               	clrf	___wmul@product+1
  2867     0140                     l1290:
  2868     0140  1C71               	btfss	___wmul@multiplier,0
  2869     0141  2943               	goto	u641
  2870     0142  2944               	goto	u640
  2871     0143                     u641:
  2872     0143  294A               	goto	l224
  2873     0144                     u640:
  2874     0144                     l1292:
  2875     0144  0873               	movf	___wmul@multiplicand,w
  2876     0145  07F5               	addwf	___wmul@product,f
  2877     0146  1803               	skipnc
  2878     0147  0AF6               	incf	___wmul@product+1,f
  2879     0148  0874               	movf	___wmul@multiplicand+1,w
  2880     0149  07F6               	addwf	___wmul@product+1,f
  2881     014A                     l224:
  2882     014A  3001               	movlw	1
  2883     014B                     u655:
  2884     014B  1003               	clrc
  2885     014C  0DF3               	rlf	___wmul@multiplicand,f
  2886     014D  0DF4               	rlf	___wmul@multiplicand+1,f
  2887     014E  3EFF               	addlw	-1
  2888     014F  1D03               	skipz
  2889     0150  294B               	goto	u655
  2890     0151                     l1294:
  2891     0151  3001               	movlw	1
  2892     0152                     u665:
  2893     0152  1003               	clrc
  2894     0153  0CF2               	rrf	___wmul@multiplier+1,f
  2895     0154  0CF1               	rrf	___wmul@multiplier,f
  2896     0155  3EFF               	addlw	-1
  2897     0156  1D03               	skipz
  2898     0157  2952               	goto	u665
  2899     0158                     l1296:
  2900     0158  0871               	movf	___wmul@multiplier,w
  2901     0159  0472               	iorwf	___wmul@multiplier+1,w
  2902     015A  1D03               	btfss	3,2
  2903     015B  295D               	goto	u671
  2904     015C  295E               	goto	u670
  2905     015D                     u671:
  2906     015D  2940               	goto	l1290
  2907     015E                     u670:
  2908     015E                     l1298:
  2909     015E  0876               	movf	___wmul@product+1,w
  2910     015F  00F2               	movwf	?___wmul+1
  2911     0160  0875               	movf	___wmul@product,w
  2912     0161  00F1               	movwf	?___wmul
  2913     0162                     l226:
  2914     0162  0008               	return
  2915     0163                     __end_of___wmul:
  2916                           
  2917                           	psect	text11
  2918     006B                     __ptext11:	
  2919 ;; *************** function _PortBInit *****************
  2920 ;; Defined at:
  2921 ;;		line 13 in file "portsinit.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		status,2
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     006B                     _PortBInit:	
  2949                           ;psect for function _PortBInit
  2950                           
  2951     006B                     l1518:	
  2952                           ;incstack = 0
  2953                           ; Regs used in _PortBInit: [status,2]
  2954                           
  2955                           
  2956                           ;portsinit.c: 14:     TRISB = 0x00;
  2957     006B  1683               	bsf	3,5	;RP0=1, select bank1
  2958     006C  1303               	bcf	3,6	;RP1=0, select bank1
  2959     006D  0186               	clrf	6	;volatile
  2960                           
  2961                           ;portsinit.c: 15:     PORTB = 0x00;
  2962     006E  1283               	bcf	3,5	;RP0=0, select bank0
  2963     006F  1303               	bcf	3,6	;RP1=0, select bank0
  2964     0070  0186               	clrf	6	;volatile
  2965     0071                     l61:
  2966     0071  0008               	return
  2967     0072                     __end_of_PortBInit:
  2968                           
  2969                           	psect	text12
  2970     0163                     __ptext12:	
  2971 ;; *************** function _MatrixInit *****************
  2972 ;; Defined at:
  2973 ;;		line 20 in file "matrix.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0
  2989 ;;      Temps:          3       0       0       0       0
  2990 ;;      Totals:         3       0       0       0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 3
  2994 ;; This function calls:
  2995 ;;		_SendToSegment
  2996 ;;		_SpiClearMatrix
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     0163                     _MatrixInit:	
  3003                           ;psect for function _MatrixInit
  3004                           
  3005     0163                     l1504:	
  3006                           ;incstack = 0
  3007                           ; Regs used in _MatrixInit: [wreg+status,2+status,0+pclath+cstack]
  3008                           
  3009                           
  3010                           ;matrix.c: 21:     _delay((unsigned long)((100)*(16000000/4000.0)));
  3011     0163  3003               	movlw	3
  3012     0164  00FA               	movwf	??_MatrixInit+2
  3013     0165  3008               	movlw	8
  3014     0166  00F9               	movwf	??_MatrixInit+1
  3015     0167  3077               	movlw	119
  3016     0168  00F8               	movwf	??_MatrixInit
  3017     0169                     u917:
  3018     0169  0BF8               	decfsz	??_MatrixInit,f
  3019     016A  2969               	goto	u917
  3020     016B  0BF9               	decfsz	??_MatrixInit+1,f
  3021     016C  2969               	goto	u917
  3022     016D  0BFA               	decfsz	??_MatrixInit+2,f
  3023     016E  2969               	goto	u917
  3024     016F                     l1506:
  3025                           
  3026                           ;matrix.c: 22:     RA5=1;
  3027     016F  1283               	bcf	3,5	;RP0=0, select bank0
  3028     0170  1303               	bcf	3,6	;RP1=0, select bank0
  3029     0171  1685               	bsf	5,5	;volatile
  3030     0172                     l1508:
  3031                           
  3032                           ;matrix.c: 23:     SendToSegment(0x09, 0x00);
  3033     0172  3009               	movlw	9
  3034     0173  00F2               	movwf	SendToSegment@segment
  3035     0174  3000               	movlw	0
  3036     0175  00F3               	movwf	SendToSegment@segment+1
  3037     0176  01F4               	clrf	SendToSegment@data
  3038     0177  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3039     017C                     l1510:
  3040                           
  3041                           ;matrix.c: 24:     SendToSegment(0x0b, 0x07);
  3042     017C  300B               	movlw	11
  3043     017D  00F2               	movwf	SendToSegment@segment
  3044     017E  3000               	movlw	0
  3045     017F  00F3               	movwf	SendToSegment@segment+1
  3046     0180  3007               	movlw	7
  3047     0181  00F4               	movwf	SendToSegment@data
  3048     0182  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3049     0187                     l1512:
  3050                           
  3051                           ;matrix.c: 25:     SendToSegment(0x0A, 0x02);
  3052     0187  300A               	movlw	10
  3053     0188  00F2               	movwf	SendToSegment@segment
  3054     0189  3000               	movlw	0
  3055     018A  00F3               	movwf	SendToSegment@segment+1
  3056     018B  3002               	movlw	2
  3057     018C  00F4               	movwf	SendToSegment@data
  3058     018D  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3059     0192                     l1514:
  3060                           
  3061                           ;matrix.c: 26:     SendToSegment(0x0c, 0x01);
  3062     0192  300C               	movlw	12
  3063     0193  00F2               	movwf	SendToSegment@segment
  3064     0194  3000               	movlw	0
  3065     0195  00F3               	movwf	SendToSegment@segment+1
  3066     0196  01F4               	clrf	SendToSegment@data
  3067     0197  0AF4               	incf	SendToSegment@data,f
  3068     0198  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3069     019D                     l1516:
  3070                           
  3071                           ;matrix.c: 27:     SpiClearMatrix();
  3072     019D  120A  118A  20D1  120A  118A  	fcall	_SpiClearMatrix
  3073     01A2                     l100:
  3074     01A2  0008               	return
  3075     01A3                     __end_of_MatrixInit:
  3076                           
  3077                           	psect	text13
  3078     035F                     __ptext13:	
  3079 ;; *************** function _ChangeOfCoordinates *****************
  3080 ;; Defined at:
  3081 ;;		line 19 in file "main.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  _shapePositi    2   13[BANK0 ] PTR struct .
  3084 ;;		 -> main@shapePosition(4), 
  3085 ;;  _figure         1   15[BANK0 ] PTR unsigned char 
  3086 ;;		 -> main@square_1(3), 
  3087 ;;  _countElemnt    2   16[BANK0 ] int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  i               2   23[BANK0 ] int 
  3090 ;;  step            2   21[BANK0 ] int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       5       0       0       0
  3101 ;;      Locals:         0       4       0       0       0
  3102 ;;      Temps:          0       3       0       0       0
  3103 ;;      Totals:         0      12       0       0       0
  3104 ;;Total ram usage:       12 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 4
  3107 ;; This function calls:
  3108 ;;		_MovieShape
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114     035F                     _ChangeOfCoordinates:	
  3115                           ;psect for function _ChangeOfCoordinates
  3116                           
  3117     035F                     l1426:	
  3118                           ;incstack = 0
  3119                           ; Regs used in _ChangeOfCoordinates: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3120                           
  3121                           
  3122                           ;main.c: 20:     const unsigned long delay = 100;;main.c: 21:     int step = 0;
  3123     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3124     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3125     0361  01B5               	clrf	ChangeOfCoordinates@step
  3126     0362  01B6               	clrf	ChangeOfCoordinates@step+1
  3127     0363                     l21:	
  3128                           ;main.c: 22:         do{
  3129                           
  3130                           
  3131                           ;main.c: 23:             for(int i = 0; i < 5; i++){
  3132     0363  1283               	bcf	3,5	;RP0=0, select bank0
  3133     0364  1303               	bcf	3,6	;RP1=0, select bank0
  3134     0365  01B7               	clrf	ChangeOfCoordinates@i
  3135     0366  01B8               	clrf	ChangeOfCoordinates@i+1
  3136     0367  2BAC               	goto	l1442
  3137     0368                     l1432:
  3138                           
  3139                           ;main.c: 26:                         MovieShape(right, _shapePosition, _figure, _countEl
      +                          emntArray);
  3140     0368  082D               	movf	ChangeOfCoordinates@_shapePosition,w
  3141     0369  00A5               	movwf	MovieShape@_shapePosition
  3142     036A  082E               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3143     036B  00A6               	movwf	MovieShape@_shapePosition+1
  3144     036C  082F               	movf	ChangeOfCoordinates@_figure,w
  3145     036D  00A7               	movwf	MovieShape@shapeArray
  3146     036E  0831               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3147     036F  00A9               	movwf	MovieShape@countElemntArray+1
  3148     0370  0830               	movf	ChangeOfCoordinates@_countElemntArray,w
  3149     0371  00A8               	movwf	MovieShape@countElemntArray
  3150     0372  3003               	movlw	3
  3151     0373  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3152                           
  3153                           ;main.c: 27:                         break;
  3154     0378  2BC1               	goto	l1444
  3155     0379                     l1434:
  3156                           
  3157                           ;main.c: 29:                         MovieShape(down, _shapePosition, _figure, _countEle
      +                          mntArray);
  3158     0379  082D               	movf	ChangeOfCoordinates@_shapePosition,w
  3159     037A  00A5               	movwf	MovieShape@_shapePosition
  3160     037B  082E               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3161     037C  00A6               	movwf	MovieShape@_shapePosition+1
  3162     037D  082F               	movf	ChangeOfCoordinates@_figure,w
  3163     037E  00A7               	movwf	MovieShape@shapeArray
  3164     037F  0831               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3165     0380  00A9               	movwf	MovieShape@countElemntArray+1
  3166     0381  0830               	movf	ChangeOfCoordinates@_countElemntArray,w
  3167     0382  00A8               	movwf	MovieShape@countElemntArray
  3168     0383  3000               	movlw	0
  3169     0384  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3170                           
  3171                           ;main.c: 30:                         break;
  3172     0389  2BC1               	goto	l1444
  3173     038A                     l1436:
  3174                           
  3175                           ;main.c: 32:                         MovieShape(left, _shapePosition, _figure, _countEle
      +                          mntArray);
  3176     038A  082D               	movf	ChangeOfCoordinates@_shapePosition,w
  3177     038B  00A5               	movwf	MovieShape@_shapePosition
  3178     038C  082E               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3179     038D  00A6               	movwf	MovieShape@_shapePosition+1
  3180     038E  082F               	movf	ChangeOfCoordinates@_figure,w
  3181     038F  00A7               	movwf	MovieShape@shapeArray
  3182     0390  0831               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3183     0391  00A9               	movwf	MovieShape@countElemntArray+1
  3184     0392  0830               	movf	ChangeOfCoordinates@_countElemntArray,w
  3185     0393  00A8               	movwf	MovieShape@countElemntArray
  3186     0394  3002               	movlw	2
  3187     0395  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3188                           
  3189                           ;main.c: 33:                         break;
  3190     039A  2BC1               	goto	l1444
  3191     039B                     l1438:
  3192                           
  3193                           ;main.c: 35:                         MovieShape(up, _shapePosition, _figure, _countElemn
      +                          tArray);
  3194     039B  082D               	movf	ChangeOfCoordinates@_shapePosition,w
  3195     039C  00A5               	movwf	MovieShape@_shapePosition
  3196     039D  082E               	movf	ChangeOfCoordinates@_shapePosition+1,w
  3197     039E  00A6               	movwf	MovieShape@_shapePosition+1
  3198     039F  082F               	movf	ChangeOfCoordinates@_figure,w
  3199     03A0  00A7               	movwf	MovieShape@shapeArray
  3200     03A1  0831               	movf	ChangeOfCoordinates@_countElemntArray+1,w
  3201     03A2  00A9               	movwf	MovieShape@countElemntArray+1
  3202     03A3  0830               	movf	ChangeOfCoordinates@_countElemntArray,w
  3203     03A4  00A8               	movwf	MovieShape@countElemntArray
  3204     03A5  3001               	movlw	1
  3205     03A6  120A  118A  2282  120A  118A  	fcall	_MovieShape
  3206                           
  3207                           ;main.c: 36:                         break;
  3208     03AB  2BC1               	goto	l1444
  3209     03AC                     l1442:
  3210                           
  3211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3212                           ; Switch size 1, requested type "simple"
  3213                           ; Number of cases is 1, Range of values is 0 to 0
  3214                           ; switch strategies available:
  3215                           ; Name         Instructions Cycles
  3216                           ; simple_byte            4     3 (average)
  3217                           ; direct_byte           11     8 (fixed)
  3218                           ; jumptable            260     6 (fixed)
  3219                           ;	Chosen strategy is simple_byte
  3220     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3221     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3222     03AE  0836               	movf	ChangeOfCoordinates@step+1,w
  3223     03AF  3A00               	xorlw	0	; case 0
  3224     03B0  1903               	skipnz
  3225     03B1  2BB3               	goto	l1584
  3226     03B2  2BC1               	goto	l1444
  3227     03B3                     l1584:
  3228                           
  3229                           ; Switch size 1, requested type "simple"
  3230                           ; Number of cases is 4, Range of values is 0 to 3
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte           13     7 (average)
  3234                           ; direct_byte           20     8 (fixed)
  3235                           ; jumptable            260     6 (fixed)
  3236                           ;	Chosen strategy is simple_byte
  3237     03B3  0835               	movf	ChangeOfCoordinates@step,w
  3238     03B4  3A00               	xorlw	0	; case 0
  3239     03B5  1903               	skipnz
  3240     03B6  2B68               	goto	l1432
  3241     03B7  3A01               	xorlw	1	; case 1
  3242     03B8  1903               	skipnz
  3243     03B9  2B79               	goto	l1434
  3244     03BA  3A03               	xorlw	3	; case 2
  3245     03BB  1903               	skipnz
  3246     03BC  2B8A               	goto	l1436
  3247     03BD  3A01               	xorlw	1	; case 3
  3248     03BE  1903               	skipnz
  3249     03BF  2B9B               	goto	l1438
  3250     03C0  2BC1               	goto	l1444
  3251     03C1                     l1444:
  3252                           
  3253                           ;main.c: 38:                 _delay((unsigned long)((delay)*(16000000/4000.0)));
  3254     03C1  3003               	movlw	3
  3255     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3256     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3257     03C4  00B4               	movwf	??_ChangeOfCoordinates+2
  3258     03C5  3008               	movlw	8
  3259     03C6  00B3               	movwf	??_ChangeOfCoordinates+1
  3260     03C7  3076               	movlw	118
  3261     03C8  00B2               	movwf	??_ChangeOfCoordinates
  3262     03C9                     u927:
  3263     03C9  0BB2               	decfsz	??_ChangeOfCoordinates,f
  3264     03CA  2BC9               	goto	u927
  3265     03CB  0BB3               	decfsz	??_ChangeOfCoordinates+1,f
  3266     03CC  2BC9               	goto	u927
  3267     03CD  0BB4               	decfsz	??_ChangeOfCoordinates+2,f
  3268     03CE  2BC9               	goto	u927
  3269     03CF  0000               	nop
  3270                           
  3271                           ;main.c: 39:             }
  3272     03D0  3001               	movlw	1
  3273     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3274     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3275     03D3  07B7               	addwf	ChangeOfCoordinates@i,f
  3276     03D4  1803               	skipnc
  3277     03D5  0AB8               	incf	ChangeOfCoordinates@i+1,f
  3278     03D6  3000               	movlw	0
  3279     03D7  07B8               	addwf	ChangeOfCoordinates@i+1,f
  3280     03D8                     l1446:
  3281     03D8  0838               	movf	ChangeOfCoordinates@i+1,w
  3282     03D9  3A80               	xorlw	128
  3283     03DA  00FF               	movwf	btemp+1
  3284     03DB  3080               	movlw	128
  3285     03DC  027F               	subwf	btemp+1,w
  3286     03DD  1D03               	skipz
  3287     03DE  2BE1               	goto	u815
  3288     03DF  3005               	movlw	5
  3289     03E0  0237               	subwf	ChangeOfCoordinates@i,w
  3290     03E1                     u815:
  3291     03E1  1C03               	skipc
  3292     03E2  2BE4               	goto	u811
  3293     03E3  2BE5               	goto	u810
  3294     03E4                     u811:
  3295     03E4  2BAC               	goto	l1442
  3296     03E5                     u810:
  3297     03E5                     l1448:
  3298                           
  3299                           ;main.c: 40:             step++;
  3300     03E5  3001               	movlw	1
  3301     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3302     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3303     03E8  07B5               	addwf	ChangeOfCoordinates@step,f
  3304     03E9  1803               	skipnc
  3305     03EA  0AB6               	incf	ChangeOfCoordinates@step+1,f
  3306     03EB  3000               	movlw	0
  3307     03EC  07B6               	addwf	ChangeOfCoordinates@step+1,f
  3308     03ED                     l1450:
  3309                           
  3310                           ;main.c: 41:         } while(step < 4);
  3311     03ED  0836               	movf	ChangeOfCoordinates@step+1,w
  3312     03EE  3A80               	xorlw	128
  3313     03EF  00FF               	movwf	btemp+1
  3314     03F0  3080               	movlw	128
  3315     03F1  027F               	subwf	btemp+1,w
  3316     03F2  1D03               	skipz
  3317     03F3  2BF6               	goto	u825
  3318     03F4  3004               	movlw	4
  3319     03F5  0235               	subwf	ChangeOfCoordinates@step,w
  3320     03F6                     u825:
  3321     03F6  1C03               	skipc
  3322     03F7  2BF9               	goto	u821
  3323     03F8  2BFA               	goto	u820
  3324     03F9                     u821:
  3325     03F9  2B63               	goto	l21
  3326     03FA                     u820:
  3327     03FA                     l31:
  3328     03FA  0008               	return
  3329     03FB                     __end_of_ChangeOfCoordinates:
  3330                           
  3331                           	psect	text14
  3332     0282                     __ptext14:	
  3333 ;; *************** function _MovieShape *****************
  3334 ;; Defined at:
  3335 ;;		line 32 in file "shape.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  dir             1    wreg     enum E885
  3338 ;;  _shapePositi    2    5[BANK0 ] PTR struct .
  3339 ;;		 -> main@shapePosition(4), 
  3340 ;;  shapeArray      1    7[BANK0 ] PTR unsigned char 
  3341 ;;		 -> main@square_1(3), 
  3342 ;;  countElemntA    2    8[BANK0 ] int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  dir             1   12[BANK0 ] enum E885
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       5       0       0       0
  3355 ;;      Locals:         0       1       0       0       0
  3356 ;;      Temps:          0       2       0       0       0
  3357 ;;      Totals:         0       8       0       0       0
  3358 ;;Total ram usage:        8 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 3
  3361 ;; This function calls:
  3362 ;;		_MovieDown
  3363 ;;		_MovieLeft
  3364 ;;		_MovieRigth
  3365 ;;		_MovieUp
  3366 ;;		_ShowShape
  3367 ;;		_SpiClearMatrix
  3368 ;; This function is called by:
  3369 ;;		_ChangeOfCoordinates
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373     0282                     _MovieShape:	
  3374                           ;psect for function _MovieShape
  3375                           
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _MovieShape: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3379                           ;MovieShape@dir stored from wreg
  3380     0282  1283               	bcf	3,5	;RP0=0, select bank0
  3381     0283  1303               	bcf	3,6	;RP1=0, select bank0
  3382     0284  00AC               	movwf	MovieShape@dir
  3383     0285                     l1362:
  3384                           
  3385                           ;shape.c: 34:     switch (dir){
  3386     0285  2AAE               	goto	l1374
  3387     0286                     l1364:
  3388                           
  3389                           ;shape.c: 36:             MovieDown(_shapePosition);
  3390     0286  0825               	movf	MovieShape@_shapePosition,w
  3391     0287  00F1               	movwf	MovieDown@_shapePosition
  3392     0288  0826               	movf	MovieShape@_shapePosition+1,w
  3393     0289  00F2               	movwf	MovieDown@_shapePosition+1
  3394     028A  120A  118A  20AB  120A  118A  	fcall	_MovieDown
  3395                           
  3396                           ;shape.c: 37:             break;
  3397     028F  2AC7               	goto	l1376
  3398     0290                     l1366:
  3399                           
  3400                           ;shape.c: 39:             MovieUp(_shapePosition);
  3401     0290  0825               	movf	MovieShape@_shapePosition,w
  3402     0291  00F1               	movwf	MovieUp@_shapePosition
  3403     0292  0826               	movf	MovieShape@_shapePosition+1,w
  3404     0293  00F2               	movwf	MovieUp@_shapePosition+1
  3405     0294  120A  118A  20E7  120A  118A  	fcall	_MovieUp
  3406                           
  3407                           ;shape.c: 40:             break;
  3408     0299  2AC7               	goto	l1376
  3409     029A                     l1368:
  3410                           
  3411                           ;shape.c: 42:             MovieLeft(_shapePosition);
  3412     029A  0825               	movf	MovieShape@_shapePosition,w
  3413     029B  00F1               	movwf	MovieLeft@_shapePosition
  3414     029C  0826               	movf	MovieShape@_shapePosition+1,w
  3415     029D  00F2               	movwf	MovieLeft@_shapePosition+1
  3416     029E  120A  118A  2088  120A  118A  	fcall	_MovieLeft
  3417                           
  3418                           ;shape.c: 43:             break;
  3419     02A3  2AC7               	goto	l1376
  3420     02A4                     l1370:
  3421                           
  3422                           ;shape.c: 45:             MovieRigth(_shapePosition);
  3423     02A4  0825               	movf	MovieShape@_shapePosition,w
  3424     02A5  00F1               	movwf	MovieRigth@_shapePosition
  3425     02A6  0826               	movf	MovieShape@_shapePosition+1,w
  3426     02A7  00F2               	movwf	MovieRigth@_shapePosition+1
  3427     02A8  120A  118A  2072  120A  118A  	fcall	_MovieRigth
  3428                           
  3429                           ;shape.c: 46:             break;
  3430     02AD  2AC7               	goto	l1376
  3431     02AE                     l1374:
  3432     02AE  082C               	movf	MovieShape@dir,w
  3433     02AF  00AA               	movwf	??_MovieShape
  3434     02B0  01AB               	clrf	??_MovieShape+1
  3435                           
  3436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3437                           ; Switch size 1, requested type "simple"
  3438                           ; Number of cases is 1, Range of values is 0 to 0
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte            4     3 (average)
  3442                           ; direct_byte           11     8 (fixed)
  3443                           ; jumptable            260     6 (fixed)
  3444                           ;	Chosen strategy is simple_byte
  3445     02B1  082B               	movf	??_MovieShape+1,w
  3446     02B2  3A00               	xorlw	0	; case 0
  3447     02B3  1903               	skipnz
  3448     02B4  2AB6               	goto	l1586
  3449     02B5  2AC7               	goto	l1376
  3450     02B6                     l1586:
  3451                           
  3452                           ; Switch size 1, requested type "simple"
  3453                           ; Number of cases is 5, Range of values is 0 to 4
  3454                           ; switch strategies available:
  3455                           ; Name         Instructions Cycles
  3456                           ; simple_byte           16     9 (average)
  3457                           ; direct_byte           23     8 (fixed)
  3458                           ; jumptable            260     6 (fixed)
  3459                           ;	Chosen strategy is simple_byte
  3460     02B6  082A               	movf	??_MovieShape,w
  3461     02B7  3A00               	xorlw	0	; case 0
  3462     02B8  1903               	skipnz
  3463     02B9  2A86               	goto	l1364
  3464     02BA  3A01               	xorlw	1	; case 1
  3465     02BB  1903               	skipnz
  3466     02BC  2A90               	goto	l1366
  3467     02BD  3A03               	xorlw	3	; case 2
  3468     02BE  1903               	skipnz
  3469     02BF  2A9A               	goto	l1368
  3470     02C0  3A01               	xorlw	1	; case 3
  3471     02C1  1903               	skipnz
  3472     02C2  2AA4               	goto	l1370
  3473     02C3  3A07               	xorlw	7	; case 4
  3474     02C4  1903               	skipnz
  3475     02C5  2AC7               	goto	l1376
  3476     02C6  2AC7               	goto	l1376
  3477     02C7                     l1376:
  3478                           
  3479                           ;shape.c: 51:     SpiClearMatrix();
  3480     02C7  120A  118A  20D1  120A  118A  	fcall	_SpiClearMatrix
  3481     02CC                     l1378:
  3482                           
  3483                           ;shape.c: 52:     ShowShape(_shapePosition, countElemntArray, shapeArray);
  3484     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3485     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3486     02CE  0825               	movf	MovieShape@_shapePosition,w
  3487     02CF  00F5               	movwf	ShowShape@coord
  3488     02D0  0826               	movf	MovieShape@_shapePosition+1,w
  3489     02D1  00F6               	movwf	ShowShape@coord+1
  3490     02D2  0829               	movf	MovieShape@countElemntArray+1,w
  3491     02D3  00F8               	movwf	ShowShape@countElemntArray+1
  3492     02D4  0828               	movf	MovieShape@countElemntArray,w
  3493     02D5  00F7               	movwf	ShowShape@countElemntArray
  3494     02D6  0827               	movf	MovieShape@shapeArray,w
  3495     02D7  00F9               	movwf	ShowShape@shapeArray
  3496     02D8  120A  118A  22DE  120A  118A  	fcall	_ShowShape
  3497     02DD                     l138:
  3498     02DD  0008               	return
  3499     02DE                     __end_of_MovieShape:
  3500                           
  3501                           	psect	text15
  3502     00D1                     __ptext15:	
  3503 ;; *************** function _SpiClearMatrix *****************
  3504 ;; Defined at:
  3505 ;;		line 10 in file "matrix.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  i               1    6[COMMON] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0, pclath, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       0       0       0
  3520 ;;      Locals:         1       0       0       0       0
  3521 ;;      Temps:          2       0       0       0       0
  3522 ;;      Totals:         3       0       0       0       0
  3523 ;;Total ram usage:        3 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 2
  3526 ;; This function calls:
  3527 ;;		_SendToSegment
  3528 ;; This function is called by:
  3529 ;;		_MatrixInit
  3530 ;;		_MovieShape
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534     00D1                     _SpiClearMatrix:	
  3535                           ;psect for function _SpiClearMatrix
  3536                           
  3537     00D1                     l1262:	
  3538                           ;incstack = 0
  3539                           ; Regs used in _SpiClearMatrix: [wreg+status,2+status,0+pclath+cstack]
  3540                           
  3541                           
  3542                           ;matrix.c: 12:   char i = 8;
  3543     00D1  3008               	movlw	8
  3544     00D2  00F7               	movwf	SpiClearMatrix@i
  3545     00D3                     l1264:
  3546                           
  3547                           ;matrix.c: 14:   {;matrix.c: 15:     SendToSegment(i, 0x00);
  3548     00D3  0877               	movf	SpiClearMatrix@i,w
  3549     00D4  00F5               	movwf	??_SpiClearMatrix
  3550     00D5  01F6               	clrf	??_SpiClearMatrix+1
  3551     00D6  0875               	movf	??_SpiClearMatrix,w
  3552     00D7  00F2               	movwf	SendToSegment@segment
  3553     00D8  0876               	movf	??_SpiClearMatrix+1,w
  3554     00D9  00F3               	movwf	SendToSegment@segment+1
  3555     00DA  01F4               	clrf	SendToSegment@data
  3556     00DB  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3557     00E0                     l1266:
  3558                           
  3559                           ;matrix.c: 16:   } while (--i);
  3560     00E0  3001               	movlw	1
  3561     00E1  02F7               	subwf	SpiClearMatrix@i,f
  3562     00E2  1D03               	btfss	3,2
  3563     00E3  28E5               	goto	u611
  3564     00E4  28E6               	goto	u610
  3565     00E5                     u611:
  3566     00E5  28D3               	goto	l1264
  3567     00E6                     u610:
  3568     00E6                     l97:
  3569     00E6  0008               	return
  3570     00E7                     __end_of_SpiClearMatrix:
  3571                           
  3572                           	psect	text16
  3573     02DE                     __ptext16:	
  3574 ;; *************** function _ShowShape *****************
  3575 ;; Defined at:
  3576 ;;		line 8 in file "shape.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  coord           2    4[COMMON] PTR struct .
  3579 ;;		 -> main@shapePosition(4), 
  3580 ;;  countElemntA    2    6[COMMON] int 
  3581 ;;  shapeArray      1    8[COMMON] PTR unsigned char 
  3582 ;;		 -> main@square_1(3), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  pos             2   11[COMMON] int 
  3585 ;;  _pos            2    9[COMMON] int 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         5       0       0       0       0
  3596 ;;      Locals:         4       0       0       0       0
  3597 ;;      Temps:          0       5       0       0       0
  3598 ;;      Totals:         9       5       0       0       0
  3599 ;;Total ram usage:       14 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 2
  3602 ;; This function calls:
  3603 ;;		_SendToSegment
  3604 ;; This function is called by:
  3605 ;;		_MovieShape
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609     02DE                     _ShowShape:	
  3610                           ;psect for function _ShowShape
  3611                           
  3612     02DE                     l1268:	
  3613                           ;incstack = 0
  3614                           ; Regs used in _ShowShape: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3615                           
  3616     02DE                     l1270:
  3617                           
  3618                           ;shape.c: 10:     for(int pos = 1 + coord->x; pos <= countElemntArray + coord->x; pos++)
      +                          {
  3619     02DE  0875               	movf	ShowShape@coord,w
  3620     02DF  0084               	movwf	4
  3621     02E0  1783               	bsf	3,7
  3622     02E1  1C76               	btfss	ShowShape@coord+1,0
  3623     02E2  1383               	bcf	3,7
  3624     02E3  0800               	movf	0,w
  3625     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3626     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3627     02E6  00A0               	movwf	??_ShowShape
  3628     02E7  0A84               	incf	4,f
  3629     02E8  0800               	movf	0,w
  3630     02E9  00A1               	movwf	??_ShowShape+1
  3631     02EA  0820               	movf	??_ShowShape,w
  3632     02EB  3E01               	addlw	1
  3633     02EC  00FC               	movwf	ShowShape@pos
  3634     02ED  0821               	movf	??_ShowShape+1,w
  3635     02EE  1803               	skipnc
  3636     02EF  3E01               	addlw	1
  3637     02F0  3E00               	addlw	0
  3638     02F1  00FD               	movwf	ShowShape@pos+1
  3639     02F2  2B3C               	goto	l1278
  3640     02F3                     l1272:
  3641                           
  3642                           ;shape.c: 11:        _pos = pos - 1 - coord->x;
  3643     02F3  0875               	movf	ShowShape@coord,w
  3644     02F4  0084               	movwf	4
  3645     02F5  1783               	bsf	3,7
  3646     02F6  1C76               	btfss	ShowShape@coord+1,0
  3647     02F7  1383               	bcf	3,7
  3648     02F8  0800               	movf	0,w
  3649     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3650     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3651     02FB  00A0               	movwf	??_ShowShape
  3652     02FC  0A84               	incf	4,f
  3653     02FD  0800               	movf	0,w
  3654     02FE  00A1               	movwf	??_ShowShape+1
  3655     02FF  0820               	movf	??_ShowShape,w
  3656     0300  027C               	subwf	ShowShape@pos,w
  3657     0301  00A2               	movwf	??_ShowShape+2
  3658     0302  0821               	movf	??_ShowShape+1,w
  3659     0303  1C03               	skipc
  3660     0304  0A21               	incf	??_ShowShape+1,w
  3661     0305  027D               	subwf	ShowShape@pos+1,w
  3662     0306  00A3               	movwf	??_ShowShape+3
  3663     0307  0822               	movf	??_ShowShape+2,w
  3664     0308  3EFF               	addlw	255
  3665     0309  00FA               	movwf	ShowShape@_pos
  3666     030A  0823               	movf	??_ShowShape+3,w
  3667     030B  1803               	skipnc
  3668     030C  3E01               	addlw	1
  3669     030D  3EFF               	addlw	255
  3670     030E  00FB               	movwf	ShowShape@_pos+1
  3671     030F                     l1274:
  3672                           
  3673                           ;shape.c: 12:        SendToSegment(pos, (char)(shapeArray[_pos] << coord->y));
  3674     030F  087D               	movf	ShowShape@pos+1,w
  3675     0310  00F3               	movwf	SendToSegment@segment+1
  3676     0311  087C               	movf	ShowShape@pos,w
  3677     0312  00F2               	movwf	SendToSegment@segment
  3678     0313  087A               	movf	ShowShape@_pos,w
  3679     0314  0779               	addwf	ShowShape@shapeArray,w
  3680     0315  00A0               	movwf	??_ShowShape
  3681     0316  0820               	movf	??_ShowShape,w
  3682     0317  0084               	movwf	4
  3683     0318  1383               	bcf	3,7	;select IRP bank0
  3684     0319  0800               	movf	0,w
  3685     031A  00A1               	movwf	??_ShowShape+1
  3686     031B  0875               	movf	ShowShape@coord,w
  3687     031C  3E02               	addlw	2
  3688     031D  00A2               	movwf	??_ShowShape+2
  3689     031E  0876               	movf	ShowShape@coord+1,w
  3690     031F  1803               	skipnc
  3691     0320  3E01               	addlw	1
  3692     0321  3E00               	addlw	0
  3693     0322  00A3               	movwf	??_ShowShape+3
  3694     0323  0822               	movf	??_ShowShape+2,w
  3695     0324  0084               	movwf	4
  3696     0325  1783               	bsf	3,7
  3697     0326  1C23               	btfss	??_ShowShape+3,0
  3698     0327  1383               	bcf	3,7
  3699     0328  0A00               	incf	0,w
  3700     0329  2B2C               	goto	u624
  3701     032A                     u625:
  3702     032A  1003               	clrc
  3703     032B  0DA1               	rlf	??_ShowShape+1,f
  3704     032C                     u624:
  3705     032C  3EFF               	addlw	-1
  3706     032D  1D03               	skipz
  3707     032E  2B2A               	goto	u625
  3708     032F  0821               	movf	??_ShowShape+1,w
  3709     0330  00F4               	movwf	SendToSegment@data
  3710     0331  120A  118A  20BE  120A  118A  	fcall	_SendToSegment
  3711     0336                     l1276:
  3712                           
  3713                           ;shape.c: 13:     }
  3714     0336  3001               	movlw	1
  3715     0337  07FC               	addwf	ShowShape@pos,f
  3716     0338  1803               	skipnc
  3717     0339  0AFD               	incf	ShowShape@pos+1,f
  3718     033A  3000               	movlw	0
  3719     033B  07FD               	addwf	ShowShape@pos+1,f
  3720     033C                     l1278:
  3721     033C  0875               	movf	ShowShape@coord,w
  3722     033D  0084               	movwf	4
  3723     033E  1783               	bsf	3,7
  3724     033F  1C76               	btfss	ShowShape@coord+1,0
  3725     0340  1383               	bcf	3,7
  3726     0341  0800               	movf	0,w
  3727     0342  1283               	bcf	3,5	;RP0=0, select bank0
  3728     0343  1303               	bcf	3,6	;RP1=0, select bank0
  3729     0344  00A0               	movwf	??_ShowShape
  3730     0345  0A84               	incf	4,f
  3731     0346  0800               	movf	0,w
  3732     0347  00A1               	movwf	??_ShowShape+1
  3733     0348  0877               	movf	ShowShape@countElemntArray,w
  3734     0349  0720               	addwf	??_ShowShape,w
  3735     034A  00A2               	movwf	??_ShowShape+2
  3736     034B  0878               	movf	ShowShape@countElemntArray+1,w
  3737     034C  1803               	skipnc
  3738     034D  0A78               	incf	ShowShape@countElemntArray+1,w
  3739     034E  0721               	addwf	??_ShowShape+1,w
  3740     034F  00A3               	movwf	??_ShowShape+3
  3741     0350  0823               	movf	??_ShowShape+3,w
  3742     0351  3A80               	xorlw	128
  3743     0352  00A4               	movwf	??_ShowShape+4
  3744     0353  087D               	movf	ShowShape@pos+1,w
  3745     0354  3A80               	xorlw	128
  3746     0355  0224               	subwf	??_ShowShape+4,w
  3747     0356  1D03               	skipz
  3748     0357  2B5A               	goto	u635
  3749     0358  087C               	movf	ShowShape@pos,w
  3750     0359  0222               	subwf	??_ShowShape+2,w
  3751     035A                     u635:
  3752     035A  1803               	skipnc
  3753     035B  2B5D               	goto	u631
  3754     035C  2B5E               	goto	u630
  3755     035D                     u631:
  3756     035D  2AF3               	goto	l1272
  3757     035E                     u630:
  3758     035E                     l116:
  3759     035E  0008               	return
  3760     035F                     __end_of_ShowShape:
  3761                           
  3762                           	psect	text17
  3763     00BE                     __ptext17:	
  3764 ;; *************** function _SendToSegment *****************
  3765 ;; Defined at:
  3766 ;;		line 34 in file "matrix.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  segment         2    1[COMMON] int 
  3769 ;;  data            1    3[COMMON] unsigned char 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         3       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0
  3784 ;;      Totals:         3       0       0       0       0
  3785 ;;Total ram usage:        3 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		_SpiSendByte
  3790 ;; This function is called by:
  3791 ;;		_SpiClearMatrix
  3792 ;;		_MatrixInit
  3793 ;;		_ShowShape
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797     00BE                     _SendToSegment:	
  3798                           ;psect for function _SendToSegment
  3799                           
  3800     00BE                     l1170:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _SendToSegment: [wreg+status,2+status,0+pclath+cstack]
  3803                           
  3804                           
  3805                           ;matrix.c: 35:     RA5 = 0;
  3806     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3807     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3808     00C0  1285               	bcf	5,5	;volatile
  3809     00C1                     l1172:
  3810                           
  3811                           ;matrix.c: 36:     SpiSendByte((char)segment);
  3812     00C1  0872               	movf	SendToSegment@segment,w
  3813     00C2  120A  118A  207D  120A  118A  	fcall	_SpiSendByte
  3814                           
  3815                           ;matrix.c: 37:     SpiSendByte(data);
  3816     00C7  0874               	movf	SendToSegment@data,w
  3817     00C8  120A  118A  207D  120A  118A  	fcall	_SpiSendByte
  3818     00CD                     l1174:
  3819                           
  3820                           ;matrix.c: 38:     RA5 = 1;
  3821     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  3822     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  3823     00CF  1685               	bsf	5,5	;volatile
  3824     00D0                     l103:
  3825     00D0  0008               	return
  3826     00D1                     __end_of_SendToSegment:
  3827                           
  3828                           	psect	text18
  3829     007D                     __ptext18:	
  3830 ;; *************** function _SpiSendByte *****************
  3831 ;; Defined at:
  3832 ;;		line 18 in file "spi.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  data            1    wreg     unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  data            1    0[COMMON] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       0       0       0       0
  3847 ;;      Locals:         1       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         1       0       0       0       0
  3850 ;;Total ram usage:        1 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_SendToSegment
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859     007D                     _SpiSendByte:	
  3860                           ;psect for function _SpiSendByte
  3861                           
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _SpiSendByte: [wreg]
  3865                           ;SpiSendByte@data stored from wreg
  3866     007D  00F1               	movwf	SpiSendByte@data
  3867     007E                     l1168:
  3868                           
  3869                           ;spi.c: 19:     SSPBUF = data;
  3870     007E  0871               	movf	SpiSendByte@data,w
  3871     007F  1283               	bcf	3,5	;RP0=0, select bank0
  3872     0080  1303               	bcf	3,6	;RP1=0, select bank0
  3873     0081  0093               	movwf	19	;volatile
  3874     0082                     l81:	
  3875                           ;spi.c: 20:     while (!SSPIF);
  3876                           
  3877     0082  1D8C               	btfss	12,3	;volatile
  3878     0083  2885               	goto	u461
  3879     0084  2886               	goto	u460
  3880     0085                     u461:
  3881     0085  2882               	goto	l81
  3882     0086                     u460:
  3883     0086                     l83:
  3884                           
  3885                           ;spi.c: 21:     SSPIF = 0;
  3886     0086  118C               	bcf	12,3	;volatile
  3887     0087                     l84:
  3888     0087  0008               	return
  3889     0088                     __end_of_SpiSendByte:
  3890                           
  3891                           	psect	text19
  3892     00E7                     __ptext19:	
  3893 ;; *************** function _MovieUp *****************
  3894 ;; Defined at:
  3895 ;;		line 20 in file "shape.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3898 ;;		 -> main@shapePosition(4), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3910 ;;      Params:         2       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0
  3912 ;;      Temps:          2       0       0       0       0
  3913 ;;      Totals:         4       0       0       0       0
  3914 ;;Total ram usage:        4 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_MovieShape
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923     00E7                     _MovieUp:	
  3924                           ;psect for function _MovieUp
  3925                           
  3926     00E7                     l1282:	
  3927                           ;incstack = 0
  3928                           ; Regs used in _MovieUp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3929                           
  3930                           
  3931                           ;shape.c: 21:     _shapePosition->y--;
  3932     00E7  0871               	movf	MovieUp@_shapePosition,w
  3933     00E8  3E02               	addlw	2
  3934     00E9  00F3               	movwf	??_MovieUp
  3935     00EA  0872               	movf	MovieUp@_shapePosition+1,w
  3936     00EB  1803               	skipnc
  3937     00EC  3E01               	addlw	1
  3938     00ED  3E00               	addlw	0
  3939     00EE  00F4               	movwf	??_MovieUp+1
  3940     00EF  0873               	movf	??_MovieUp,w
  3941     00F0  0084               	movwf	4
  3942     00F1  1783               	bsf	3,7
  3943     00F2  1C74               	btfss	??_MovieUp+1,0
  3944     00F3  1383               	bcf	3,7
  3945     00F4  30FF               	movlw	255
  3946     00F5  0780               	addwf	0,f
  3947     00F6  0F84               	incfsz	4,f
  3948     00F7  0800               	movf	0,w
  3949     00F8  1803               	skipnc
  3950     00F9  0A00               	incf	0,w
  3951     00FA  00FF               	movwf	btemp+1
  3952     00FB  30FF               	movlw	255
  3953     00FC  077F               	addwf	btemp+1,w
  3954     00FD  0080               	movwf	0
  3955     00FE  0384               	decf	4,f
  3956     00FF                     l122:
  3957     00FF  0008               	return
  3958     0100                     __end_of_MovieUp:
  3959                           
  3960                           	psect	text20
  3961     0072                     __ptext20:	
  3962 ;; *************** function _MovieRigth *****************
  3963 ;; Defined at:
  3964 ;;		line 28 in file "shape.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  _shapePositi    2    0[COMMON] PTR struct .
  3967 ;;		 -> main@shapePosition(4), 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3979 ;;      Params:         2       0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0
  3982 ;;      Totals:         2       0       0       0       0
  3983 ;;Total ram usage:        2 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_MovieShape
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992     0072                     _MovieRigth:	
  3993                           ;psect for function _MovieRigth
  3994                           
  3995     0072                     l1286:	
  3996                           ;incstack = 0
  3997                           ; Regs used in _MovieRigth: [wreg-fsr0h+status,2+status,0]
  3998                           
  3999                           
  4000                           ;shape.c: 29:     _shapePosition->x++;
  4001     0072  0871               	movf	MovieRigth@_shapePosition,w
  4002     0073  0084               	movwf	4
  4003     0074  1783               	bsf	3,7
  4004     0075  1C72               	btfss	MovieRigth@_shapePosition+1,0
  4005     0076  1383               	bcf	3,7
  4006     0077  3001               	movlw	1
  4007     0078  0780               	addwf	0,f
  4008     0079  0A84               	incf	4,f
  4009     007A  1803               	skipnc
  4010     007B  0A80               	incf	0,f
  4011     007C                     l128:
  4012     007C  0008               	return
  4013     007D                     __end_of_MovieRigth:
  4014                           
  4015                           	psect	text21
  4016     0088                     __ptext21:	
  4017 ;; *************** function _MovieLeft *****************
  4018 ;; Defined at:
  4019 ;;		line 24 in file "shape.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4022 ;;		 -> main@shapePosition(4), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, btemp+1
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         2       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_MovieShape
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047     0088                     _MovieLeft:	
  4048                           ;psect for function _MovieLeft
  4049                           
  4050     0088                     l1284:	
  4051                           ;incstack = 0
  4052                           ; Regs used in _MovieLeft: [wreg-fsr0h+btemp+1]
  4053                           
  4054                           
  4055                           ;shape.c: 25:     _shapePosition->x--;
  4056     0088  0871               	movf	MovieLeft@_shapePosition,w
  4057     0089  0084               	movwf	4
  4058     008A  1783               	bsf	3,7
  4059     008B  1C72               	btfss	MovieLeft@_shapePosition+1,0
  4060     008C  1383               	bcf	3,7
  4061     008D  30FF               	movlw	255
  4062     008E  0780               	addwf	0,f
  4063     008F  0F84               	incfsz	4,f
  4064     0090  0800               	movf	0,w
  4065     0091  1803               	skipnc
  4066     0092  0A00               	incf	0,w
  4067     0093  00FF               	movwf	btemp+1
  4068     0094  30FF               	movlw	255
  4069     0095  077F               	addwf	btemp+1,w
  4070     0096  0080               	movwf	0
  4071     0097  0384               	decf	4,f
  4072     0098                     l125:
  4073     0098  0008               	return
  4074     0099                     __end_of_MovieLeft:
  4075                           
  4076                           	psect	text22
  4077     00AB                     __ptext22:	
  4078 ;; *************** function _MovieDown *****************
  4079 ;; Defined at:
  4080 ;;		line 16 in file "shape.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  _shapePositi    2    0[COMMON] PTR struct .
  4083 ;;		 -> main@shapePosition(4), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         2       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          2       0       0       0       0
  4098 ;;      Totals:         4       0       0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_MovieShape
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108     00AB                     _MovieDown:	
  4109                           ;psect for function _MovieDown
  4110                           
  4111     00AB                     l1280:	
  4112                           ;incstack = 0
  4113                           ; Regs used in _MovieDown: [wreg-fsr0h+status,2+status,0]
  4114                           
  4115                           
  4116                           ;shape.c: 17:     _shapePosition->y++;
  4117     00AB  0871               	movf	MovieDown@_shapePosition,w
  4118     00AC  3E02               	addlw	2
  4119     00AD  00F3               	movwf	??_MovieDown
  4120     00AE  0872               	movf	MovieDown@_shapePosition+1,w
  4121     00AF  1803               	skipnc
  4122     00B0  3E01               	addlw	1
  4123     00B1  3E00               	addlw	0
  4124     00B2  00F4               	movwf	??_MovieDown+1
  4125     00B3  0873               	movf	??_MovieDown,w
  4126     00B4  0084               	movwf	4
  4127     00B5  1783               	bsf	3,7
  4128     00B6  1C74               	btfss	??_MovieDown+1,0
  4129     00B7  1383               	bcf	3,7
  4130     00B8  3001               	movlw	1
  4131     00B9  0780               	addwf	0,f
  4132     00BA  0A84               	incf	4,f
  4133     00BB  1803               	skipnc
  4134     00BC  0A80               	incf	0,f
  4135     00BD                     l119:
  4136     00BD  0008               	return
  4137     00BE                     __end_of_MovieDown:
  4138     0002                     ___latbits      equ	2
  4139     007E                     btemp           set	126	;btemp
  4140     007E                     wtemp0          set	126
  4141                           
  4142                           	psect	config
  4143                           
  4144                           ;Config register CONFIG @ 0x2007
  4145                           ;	Oscillator Selection bits
  4146                           ;	FOSC = HS, HS oscillator
  4147                           ;	Watchdog Timer Enable bit
  4148                           ;	WDTE = OFF, WDT disabled
  4149                           ;	Power-up Timer Enable bit
  4150                           ;	PWRTE = OFF, PWRT disabled
  4151                           ;	FLASH Program Memory Code Protection bits
  4152                           ;	CP = OFF, Code protection off
  4153                           ;	Brown-out Reset Enable bit
  4154                           ;	BOREN = OFF, BOR disabled
  4155                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  4156                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4157                           ;	Data EE Memory Code Protection
  4158                           ;	CPD = OFF, Code Protection off
  4159                           ;	FLASH Program Memory Write Enable
  4160                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  4161                           ;	In-Circuit Debugger Mode bit
  4162                           ;	DEBUG = 0x1, unprogrammed default
  4163     2007                     	org	8199
  4164     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    8
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     59      76
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    calloc@new_ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    ChangeOfCoordinates@_figure	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ChangeOfCoordinates@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(1) Largest target is 2
		 -> malloc@m(BANK0[2]), 

    free@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@c$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    free@cptr	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    free@ptr	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __freelist$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __heap_hi$.$next$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    MovieDown@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieLeft@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieRigth@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    MovieShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    MovieUp@_shapePosition	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    Rotate@array_	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    Rotate@res	PTR unsigned char  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    S644$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    SetPosition@position	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@coord	PTR struct . size(2) Largest target is 4
		 -> main@shapePosition(BANK0[4]), 

    ShowShape@shapeArray	PTR unsigned char  size(1) Largest target is 3
		 -> main@square_1(BANK0[3]), 

    ?___simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@best_last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@c$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@last$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __simple_search_fl@split$.$next$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 2
		 -> __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp____simple_search_fl$.$next	PTR struct chunk size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    sp__calloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__malloc	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 2
		 -> __heap_hi(UNKNOWN), __heap_hi$.$next(UNKNOWN), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _Rotate->_free
    _calloc->_malloc
    _calloc->_memset
    _memset->___wmul
    _malloc->___simple_search_fl
    _MatrixInit->_SpiClearMatrix
    _MovieShape->_ShowShape
    _SpiClearMatrix->_SendToSegment
    _ShowShape->_SendToSegment
    _SendToSegment->_SpiSendByte

Critical Paths under _main in BANK0

    _main->_Rotate
    _Rotate->_calloc
    _calloc->_malloc
    _malloc->___simple_search_fl
    _ChangeOfCoordinates->_MovieShape
    _MovieShape->_ShowShape

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    4123
                                             50 BANK0      9     9      0
                _ChangeOfCoordinates
                         _MatrixInit
                          _PortBInit
                             _Rotate
                        _SetPosition
                            _SpiInit
 ---------------------------------------------------------------------------------
 (1) _SpiInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPosition                                          8     2      6      91
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (1) _Rotate                                              20    17      3    2575
                                             30 BANK0     20    17      3
                             _calloc
                               _free
 ---------------------------------------------------------------------------------
 (2) _free                                                12    10      2     289
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (2) _calloc                                               6     2      4    1813
                                             24 BANK0      6     2      4
                             ___wmul
                             _malloc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6      99
                                              6 COMMON     6     0      6
                                              0 BANK0      2     2      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _malloc                                              14    12      2    1461
                                              8 COMMON     4     2      2
                                             14 BANK0     10    10      0
                      ___expand_heap
                 ___simple_search_fl
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___simple_search_fl                                  22    20      2     827
                                              0 COMMON     8     6      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (4) ___expand_heap                                        5     4      1     136
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PortBInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MatrixInit                                           3     3      0     215
                                              7 COMMON     3     3      0
                      _SendToSegment
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (1) _ChangeOfCoordinates                                 12     7      5    1088
                                             13 BANK0     12     7      5
                         _MovieShape
 ---------------------------------------------------------------------------------
 (2) _MovieShape                                           8     3      5     729
                                              5 BANK0      8     3      5
                          _MovieDown
                          _MovieLeft
                         _MovieRigth
                            _MovieUp
                          _ShowShape
                     _SpiClearMatrix
 ---------------------------------------------------------------------------------
 (2) _SpiClearMatrix                                       3     3      0     130
                                              4 COMMON     3     3      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _ShowShape                                           14     9      5     312
                                              4 COMMON     9     4      5
                                              0 BANK0      5     5      0
                      _SendToSegment
 ---------------------------------------------------------------------------------
 (3) _SendToSegment                                        3     0      3      85
                                              1 COMMON     3     0      3
                        _SpiSendByte
 ---------------------------------------------------------------------------------
 (4) _SpiSendByte                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MovieUp                                              4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MovieRigth                                           2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieLeft                                            2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MovieDown                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeOfCoordinates
     _MovieShape
       _MovieDown
       _MovieLeft
       _MovieRigth
       _MovieUp
       _ShowShape
         _SendToSegment
           _SpiSendByte
       _SpiClearMatrix
         _SendToSegment
   _MatrixInit
     _SendToSegment
     _SpiClearMatrix
   _PortBInit
   _Rotate
     _calloc
       ___wmul
       _malloc
         ___expand_heap
         ___simple_search_fl
         ___wmul (ARG)
       _memset
         ___wmul (ARG)
     _free
   _SetPosition
   _SpiInit

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               85      0       0      0.0%
BITBANK3            85      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     59      76     95.0%
BITBANK0            80      0       0      0.0%
COMMON              13     13      13    100.0%
BITCOMMON           13      0       0      0.0%
DATA                 0      0      89      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 17 10:44:11 2024

                      _SpiClearMatrix 00D1                                     pc 0002  
                                  l21 0363                                    l31 03FA  
                                  l42 0567                                    l61 0071  
                                  l81 0082                                    l83 0086  
                                  l84 0087                                    l78 00AA  
                                  l97 00E6                                    fsr 0004  
                 ___wmul@multiplicand 0073                       SpiSendByte@data 0071  
                                 l100 01A2                                   l110 011C  
                                 l103 00D0                                   l122 00FF  
                                 l116 035E                                   l125 0098  
                                 l119 00BD                                   l128 007C  
                                 l224 014A                                   l138 02DD  
                                 l226 0162                                   l702 0709  
                                 l711 0655                                   l705 07B2  
                                 l731 040B                                   l735 04AA  
                                 l753 01FF                                   l737 0487  
                                 l739 0480                                   l764 013D  
                                 l758 0235                                   l694 07DB  
                                 l688 01EA                                   _RA5 002D  
                                 u500 06DC                                   u501 06DB  
                                 u510 06E2                                   u511 06E1  
                                 u600 0226                                   u520 0700  
                                 u601 0225                                   u521 06FF  
                                 u505 06D8                                   u610 00E6  
                                 u530 0726                                   u611 00E5  
                                 u531 0725                                   u460 0086  
                                 u540 072C                                   u700 0428  
                                 u461 0085                                   u605 0222  
                                 u541 072B                                   u525 06FC  
                                 u701 0427                                   u630 035E  
                                 u550 075A                                   u470 0664  
                                 u710 0444                                   u631 035D  
                                 u551 0759                                   u471 0663  
                                 u711 0443                                   u624 032C  
                                 u640 0144                                   u560 07BC  
                                 u480 0680                                   u720 0456  
                                 u800 060E                                   u625 032A  
                                 u641 0143                                   u561 07BB  
                                 u481 067F                                   u721 0455  
                                 u801 060D                                   u810 03E5  
                                 u570 01FB                                   u490 0686  
                                 u730 0471                                   u635 035A  
                                 u811 03E4                                   u571 01FA  
                                 u491 0685                                   u731 0470  
                                 u820 03FA                                   u580 0208  
                                 u740 047C                                   u900 055C  
                                 u821 03F9                                   u581 0207  
                                 u565 07B8                                   u485 067C  
                                 u741 047B                                   u725 0452  
                                 u805 060A                                   u901 055B  
                                 u670 015E                                   u590 021C  
                                 u750 013D                                   u830 04C6  
                                 u815 03E1                                   u671 015D  
                                 u655 014B                                   u591 021B  
                                 u751 013C                                   u831 04C5  
                                 u680 0405                                   u760 01C7  
                                 u840 04D2                                   u825 03F6  
                                 u665 0152                                   u745 0478  
                                 u681 0404                                   u761 01C6  
                                 u905 0558                                   u841 04D1  
                                 u690 0414                                   u770 0572  
                                 u850 04E1                                   u691 0413  
                                 u771 0571                                   u851 04E0  
                                 u780 0588                                   u917 0169  
                                 u781 0587                                   u790 059E  
                                 u927 03C9                                   u791 059D  
                                 u880 0507                                   u864 04EE  
                                 u865 04EC                                   u890 0535  
                                 u874 04F8                                   u795 059A  
                                 u875 04F6                                   fsr0 0004  
                                 indf 0000                                  l1200 06DC  
                                l1202 06E2                                  l1210 0720  
                                l1220 077E                                  l1212 0726  
                                l1230 07D3                                  l1222 079C  
                                l1214 072C                                  l1206 0701  
                                l1310 0419                                  l1302 03FB  
                                l1240 01F3                                  l1224 07AE  
                                l1216 075A                                  l1208 070D  
                                l1320 042F                                  l1312 0428  
                                l1304 03FF                                  l1400 0573  
                                l1170 00BE                                  l1250 021C  
                                l1242 01FB                                  l1226 07BC  
                                l1218 0774                                  l1330 046B  
                                l1322 043E                                  l1314 042C  
                                l1306 0405                                  l1402 0588  
                                l1172 00C1                                  l1252 0226  
                                l1244 0208                                  l1228 07C1  
                                l1180 0664                                  l1340 048B  
                                l1324 0444                                  l1308 0414  
                                l1420 0631                                  l1404 059E  
                                l1500 00A4                                  l1174 00CD  
                                l1270 02DE                                  l1262 00D1  
                                l1510 017C                                  l1254 022A  
                                l1246 020C                                  l1238 01EB  
                                l1190 0686                                  l1342 048F  
                                l1326 0456                                  l1350 04A6  
                                l1318 042F                                  l1406 05C3  
                                l1414 05EA                                  l1422 0644  
                                l1502 00A6                                  l1280 00AB  
                                l1168 007E                                  l1272 02F3  
                                l1264 00D3                                  l1432 0368  
                                l1512 0187                                  l1504 0163  
                                l1248 0213                                  l1192 06AC  
                                l1184 0667                                  l1176 0656  
                                l1344 0499                                  l1336 0472  
                                l1328 045E                                  l1360 012F  
                                l1416 060E                                  l1408 05E5  
                                l1520 0100                                  l1282 00E7  
                                l1274 030F                                  l1266 00E0  
                                l1370 02A4                                  l1362 0285  
                                l1450 03ED                                  l1434 0379  
                                l1442 03AC                                  l1426 035F  
                                l1514 0192                                  l1506 016F  
                                l1290 0140                                  l1258 022D  
                                l1194 06BF                                  l1186 066C  
                                l1178 065E                                  l1346 049D  
                                l1338 047C                                  l1354 011D  
                                l1522 010A                                  l1530 0260  
                                l1284 0088                                  l1276 0336  
                                l1268 02DE                                  l1364 0286  
                                l1436 038A                                  l1444 03C1  
                                l1516 019D                                  l1508 0172  
                                l1292 0144                                  l1188 0680  
                                l1348 04A1                                  l1356 0124  
                                l1460 04C6                                  l1532 0271  
                                l1524 0236                                  l1286 0072  
                                l1278 033C                                  l1366 0290  
                                l1374 02AE                                  l1446 03D8  
                                l1438 039B                                  l1518 006B  
                                l1294 0151                                  l1198 06C8  
                                l1358 012B                                  l1390 01C7  
                                l1470 04DD                                  l1462 04CE  
                                l1526 0240                                  l1368 029A  
                                l1376 02C7                                  l1448 03E5  
                                l1296 0158                                  l1288 013E  
                                l1392 01E4                                  l1456 04AB  
                                l1528 0251                                  l1378 02CC  
                                l1298 015E                                  l1386 01A3  
                                l1490 0548                                  l1482 051F  
                                l1474 04E2                                  l1466 04D3  
                                l1458 04C0                                  l1388 01C1  
                                l1396 0568                                  l1492 054E  
                                l1476 0512                                  l1468 04DB  
                                l1478 0518                                  l1486 0526  
                                l1494 055C                                  l1584 03B3  
                                l1488 0529                                  l1496 0099  
                                l1586 02B6                                  l1498 009C  
                                _brkp 005F                                  _free 0568  
                                _main 0236                                  btemp 007E  
                                start 0000                __end_of_SpiClearMatrix 00E7  
                     __end_of_MovieUp 0100                       __end_of_SpiInit 00AB  
                               ?_free 0071                                 ?_main 0071  
                 _ChangeOfCoordinates 035F                                 _PORTA 0005  
                               _PORTB 0006                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _SSPIF 0063                       SpiClearMatrix@i 0077  
                   SendToSegment@data 0074                                 _errno 0065  
                               free@c 007B                                 pclath 000A  
                    ___expand_heap@pn 0071                                 status 0003  
                               wtemp0 007E                          main@square_1 0052  
                ?_ChangeOfCoordinates 002D                       ?_SpiClearMatrix 0071  
                     __initialization 07DC                          __end_of_free 0656  
                        __end_of_main 0282                         ___expand_heap 01EB  
                          _MatrixInit 0163                                ??_free 0073  
                              ??_main 007E                         ??_SetPosition 0077  
                       calloc@new_ptr 003C                 ??_ChangeOfCoordinates 0032  
                              _SSPCON 0014                                _SSPBUF 0013  
                          _MovieShape 0282                            _MovieRigth 0072  
                MovieShape@shapeArray 0027                             ??_MovieUp 0073  
                           ??_SpiInit 0071                         ??_SpiSendByte 0071  
                              _Rotate 04AB                        ?___expand_heap 0071  
             ___simple_search_fl@best 002C               ___simple_search_fl@last 0026  
             ___simple_search_fl@next 0028                                ___wmul 013E  
                              _calloc 01A3                                _malloc 03FB  
                              _memset 011D                        ShowShape@coord 0075  
             __end_of__initialization 07FC                   __end_of_SetPosition 011D  
                          ___freelist 0067                        __pcstackCOMMON 0071  
                        __pidataBANK0 0068                           ?_MatrixInit 0071  
                 __end_of_SpiSendByte 0088     ChangeOfCoordinates@_shapePosition 002D  
ChangeOfCoordinates@_countElemntArray 0030            __end_of___simple_search_fl 07DC  
                          __pbssBANK0 005B                     __end_of_MovieLeft 0099  
                   __end_of_MovieDown 00BE              MovieShape@_shapePosition 0025  
                   __end_of_PortBInit 0072                     __end_of_ShowShape 035F  
                         ?_MovieShape 0025                     main@shapePosition 0057  
                         ?_MovieRigth 0071                       ??___expand_heap 0072  
                          __pmaintext 0236                               ?_Rotate 003E  
                             ?___wmul 0071                               ?_calloc 0038  
                             ?_malloc 0079                               ?_memset 0077  
                       MovieShape@dir 002C             ShowShape@countElemntArray 0077  
                         _SetPosition 0100                               _SSPSTAT 0094  
                          __stringtab 0003                      ??_SpiClearMatrix 0075  
                          calloc@size 003A                               _MovieUp 00E7  
                             _SpiInit 0099                         _SendToSegment 00BE  
                ___simple_search_fl@c 002A                  ___simple_search_fl@n 0071  
                         _SpiSendByte 007D                               Rotate@i 004A  
                             Rotate@x 0048                               Rotate@y 004C  
            ___simple_search_fl@split 0024                               __ptext1 0099  
                             __ptext2 0100                               __ptext3 04AB  
                             __ptext4 0568                               __ptext5 01A3  
                             __ptext6 011D                               __ptext7 03FB  
                             __ptext8 0656                               __ptext9 01EB  
             ChangeOfCoordinates@step 0035                               free@ptr 0071  
                end_of_initialization 07FC                               malloc@m 002E  
                             malloc@n 0079                               malloc@p 0034  
              ___expand_heap@new_brkp 0074                               memset@c 0079  
                             memset@n 007B                               memset@p 0020  
                      ?_SendToSegment 0072                     __end_ofmain@delay 000D  
                 SetPosition@position 0071           __end_of_ChangeOfCoordinates 03FB  
             MovieLeft@_shapePosition 0071            ChangeOfCoordinates@_figure 002F  
                      __end_of_Rotate 0568                        __end_of___wmul 0163  
                        ??_MatrixInit 0078                        __end_of_calloc 01EB  
                      __end_of_malloc 04AB                        __end_of_memset 013E  
                     ___expand_heap@n 0072                   start_initialization 07DC  
                          malloc@lock 005B                            malloc@size 0032  
                  __end_of_MatrixInit 01A3                       ??_SendToSegment 0075  
                        ??_MovieShape 002A                          ??_MovieRigth 0073  
                           _MovieLeft 0088                             _MovieDown 00AB  
                  ___simple_search_fl 0656                             _PortBInit 006B  
                            ??_Rotate 0041                             _ShowShape 02DE  
        ___simple_search_fl@best_last 0022                              ??___wmul 0075  
                            ??_calloc 007D                           __pdataBANK0 0069  
                            ??_malloc 007B                              ??_memset 007D  
                 ?___simple_search_fl 0071                            memset@dest 0077  
                       ShowShape@_pos 007A                          SetPosition@x 0073  
                        SetPosition@y 0075                             Rotate@res 004E  
                           ___heap_hi 0170                             ___heap_lo 0110  
                           ___latbits 0002                         __pcstackBANK0 0020  
                  __end_of_MovieShape 02DE                    __end_of_MovieRigth 007D  
                        ?_SetPosition 0071                  main@countElemntArray 0055  
                 ShowShape@shapeArray 0079                  ??___simple_search_fl 0073  
                          ?_MovieLeft 0071                            ?_MovieDown 0071  
                            ?_MovieUp 0071                              ?_SpiInit 0071  
                          ?_PortBInit 0071                 __end_of___expand_heap 0236  
                        ?_SpiSendByte 0071                            ?_ShowShape 0075  
                           __pstrings 0003               MovieDown@_shapePosition 0071  
    __end_ofChangeOfCoordinates@delay 0011                 MovieUp@_shapePosition 0071  
                      ___wmul@product 0075                           __stringbase 0008  
                   ___wmul@multiplier 0071                             main@delay 0009  
                           malloc@end 0061                             malloc@cur 0063  
                           malloc@new 0036                           ??_MovieLeft 0073  
                         ??_MovieDown 0073                           calloc@nmemb 0038  
                         ??_PortBInit 0071                           ??_ShowShape 0020  
                        ShowShape@pos 007C                              Rotate@_i 0050  
                  __end_of__stringtab 0009                              __ptext10 013E  
                            __ptext11 006B                              __ptext20 0072  
                            __ptext12 0163                              __ptext21 0088  
                            __ptext13 035F                              __ptext22 00AB  
                            __ptext14 0282                              __ptext15 00D1  
                            __ptext16 02DE                              __ptext17 00BE  
                            __ptext18 007D                              __ptext19 00E7  
            ChangeOfCoordinates@delay 000D                              main@F929 0069  
                SendToSegment@segment 0072                              free@cptr 0079  
                            malloc@sz 0030     ___simple_search_fl@remaining_size 0020  
                ChangeOfCoordinates@i 0037                             stringcode 0003  
               __end_of_SendToSegment 00D1              MovieRigth@_shapePosition 0071  
          MovieShape@countElemntArray 0028                              stringdir 0003  
                            stringtab 0003                          Rotate@array_ 003E  
                        Rotate@length 003F  
